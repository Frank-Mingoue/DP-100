;Version:21.7
;Description of Changes: Add new columns in section [Import Account4]
;Modified Date:03/19/2021
;Process ID: CHG201045
;Author : Misa

;Version:21.6
;Description of Changes: Remove S_PARTY_PER @[Update Contact Names]
;Modified Date:01/29/2020
;Process ID: INC3175141
;Author : Misa

;Version:21.5
;Description of Changes: Add new columns in section [Import Account4]
;Modified Date:02/08/2019
;Process ID: CHG145933
;Author : Rhishna

;Version:21.4
;Description of Changes: Add new columns in section [Import Account4]
;Modified Date:03/21/2018
;Process ID: CH130193
;Author : Jean Remi

;Version:21.3
;Description of Changes: Add ignore BASE COLUMNS in section [Import Contact] & add section [Update Contact Names]
;Modified Date:03/20/2018
;Process ID: INC2323177
;Author : Rhishna

;[20170223:NH] CHG109953 Include S_ADDR_PER.X_BU_ID & S_CON_ADDR.BU_ID

;Version:21.2
;Description of Changes: Add column X_ATTRIB_86 in S_ORG_EXT_X transfer
;Modified Date:01/18/2017
;Process ID: CHG107588
;Author : Jean Remi

;Version:21.1
;Description of Changes: Add column X_ATTRIB_85 in S_ORG_EXT_X transfer
;Modified Date: 11/28/2016
;Process ID: INC1764996
;Author : Riteswaree

;Version:21.0
;Description of Changes: Add two new columns in S_ORG_EXT_X transfer
;Modified Date: 09/09/2016
;Process ID: CHG099099
;Author : Rhishna

;Version:20.9
;Description of Changes: Add two new columns in S_ORG_EXT_X transfer
;Modified Date: 01/09/2016
;Process ID: CHG098897
;Author : Rhishna


;Version:20.8
;Description of Changes: Add two new columns in S_ORG_EXT_X transfer
;Modified Date: 01/09/2016
;Process ID: CHG098779
;Author : Rhishna

;Version:20.7
;Description of Changes: Add two new columns in S_ORG_EXT_X transfer
;Modified Date: 09/05/2016
;Process ID: CHG089929
;Author : Rajeshwaree

;Version:20.6
;Description of Changes: Add two new columns in S_ORG_EXT_X transfer
;Modified Date: 06/04/2016
;Process ID: CHG090227
;Author : Rhishna

;Version:20.5
;Description of Changes: Split IFB into 2 parts and add only base columns in the section [Import Passport_Contact]
;Modified Date: 11/04/2015 
;Process ID: IP14 UAT Defect 502 
;Author : Rajeshwaree

[Siebel Interface Manager]
	PROCESS = Import All 
    LOG TRANSACTIONS = TRUE
	SET BASED LOGGING = TRUE
	LOG TRANSACTIONS TO FILE = TRUE  

[Import All]
	TYPE = SHELL

	INCLUDE = "Import Account" 
	INCLUDE = "Import Account3"
	INCLUDE = "Import Account4"
	INCLUDE = "Import Account5"
    INCLUDE = "SQL_UPDATE Reverse Relation"
    INCLUDE = "IMPORT Reverse Relation"
    INCLUDE = "SQL_UPDATE Reverse Relation"
	INCLUDE = "Import ReasonDateCR7084"
	INCLUDE = "Import ReasonDateCR7084_DT"
	INCLUDE = "Import Contact"
	INCLUDE = "Import Invoice_Contact"
	INCLUDE = "Import Passport_Contact"
	INCLUDE = "Update Contact Names"
	
[Import Account]
	TYPE = IMPORT
;<REQUEST Import Account>SELECT ISNULL(MAX(IF_ROW_BATCH_NUM),34000)+1 FROM EIM_ADDR_PER (NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
;<BATCH Import Account>
	BATCH = 34000-34999
;</BATCH>
	TABLE = EIM_ADDR_PER
	ONLY BASE TABLES = S_ADDR_PER,S_CON_ADDR

ONLY BASE COLUMNS = S_ADDR_PER.ADDR_NAME,\
				S_ADDR_PER.DISA_CLEANSE_FLG,\
				S_ADDR_PER.NAME_LOCK_FLG,\
				S_ADDR_PER.PREMISE_FLG,\
				S_ADDR_PER.START_DT,\
				S_ADDR_PER.ADDR,\
				S_ADDR_PER.ADDR_LINE_2,\
				S_ADDR_PER.CITY,\
				S_ADDR_PER.COUNTRY,\
				S_ADDR_PER.ZIPCODE,\
				S_ADDR_PER.X_STATE,\
				S_ADDR_PER.X_ACCNT_ID,\
				S_ADDR_PER.PER_ID,\
				S_ADDR_PER.STATE,\
				S_ADDR_PER.ADDR_TYPE_CD,\
				S_ADDR_PER.LATITUDE,\
				S_ADDR_PER.LONGITUDE,\
				S_ADDR_PER.X_ATTRIBUTE_1,\
				S_ADDR_PER.X_ADDR2_TEXT,\
				S_CON_ADDR.ACCNT_ID,\
				S_CON_ADDR.ADDR_PER_ID,\
				S_CON_ADDR.RELATION_TYPE_CD,\
				S_CON_ADDR.ACTIVE_FLG,\
				S_CON_ADDR.BL_ADDR_FLG,\
				S_CON_ADDR.MAIN_ADDR_FLG,\
				S_CON_ADDR.SHIP_ADDR_FLG,\
				S_CON_ADDR.FRAUD_FLG,\
				S_ADDR_PER.X_REGION_TYPE_1,\
				S_ADDR_PER.X_REGION_TYPE_2,\
				S_ADDR_PER.X_GEO_COOR_NUM,\
				S_ADDR_PER.X_GEO_COORDS_SRC_CD,\
				S_ADDR_PER.ED_DELETED_FLG,\
				S_ADDR_PER.ED_ENABLED_FLG,\
				S_ADDR_PER.GEOCD_VALID_FLG,\
				S_ADDR_PER.LOCATION_FLG,\
				S_ADDR_PER.SYNC_SUCCESS_FLG,\
				S_ADDR_PER.VERIFIED_FLG,\
				S_CON_ADDR.ED_DELETED_FLG,\
				S_ADDR_PER.X_BU_ID,\
				S_CON_ADDR.BU_ID

				
[Import Account3]
	TYPE = IMPORT
;<REQUEST Import Account3>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_ACCNT_CUT(NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
;<BATCH Import Account3>
	BATCH = 34000-34999
;</BATCH>
	TABLE = EIM_ACCNT_CUT
	ONLY BASE TABLES = S_PARTY,S_ORG_EXT,S_CON_ADDR 

FIXED COLUMN = AC_ACCNT_TYPE_CD,NULL

ONLY BASE COLUMNS = S_ORG_EXT.ACCNT_TYPE_CD,\
S_ORG_EXT.ACTIVE_FLG,\
S_ORG_EXT.ALIAS_NAME,\
S_ORG_EXT.BU_ID,\
S_ORG_EXT.CALL_FREQUENCY,\
S_ORG_EXT.CUST_END_DT,\
S_ORG_EXT.CUST_SINCE_DT,\
S_ORG_EXT.EMP_COUNT,\
S_ORG_EXT.LAST_CALL_DT,\
S_ORG_EXT.MAIN_EMAIL_ADDR,\
S_ORG_EXT.MAIN_FAX_PH_NUM,\
S_ORG_EXT.MARKET_CLASS_CD,\
S_ORG_EXT.NAME,\
S_ORG_EXT.OU_TYPE_CD,\
S_ORG_EXT.PR_ADDR_ID,\
S_ORG_EXT.PR_POSTN_ID,\
S_ORG_EXT.MASTER_OU_ID,\
S_ORG_EXT.PAR_OU_ID,\
S_ORG_EXT.PAR_ROW_ID,\
S_ORG_EXT.INTEGRATION_ID,\
S_ORG_EXT.ACCNT_FLG,\
S_ORG_EXT.BUYING_GROUP_FLG,\
S_ORG_EXT.CG_DEDN_AUTH_FLG,\
S_ORG_EXT.CG_SVP_A_LOCK_FLG,\
S_ORG_EXT.CG_SVP_LOCK_FLG,\
S_ORG_EXT.CG_SVP_SKIP_FLG,\
S_ORG_EXT.CL_SITE_FLG,\
S_ORG_EXT.COURT_PAY_FLG,\
S_ORG_EXT.DISA_CLEANSE_FLG,\
S_ORG_EXT.EVT_LOC_FLG,\
S_ORG_EXT.FCST_ORG_FLG,\
S_ORG_EXT.FUND_ELIG_FLG,\
S_ORG_EXT.GOOD_STANDING_FLG,\
S_ORG_EXT.INCL_FLG,\
S_ORG_EXT.INT_ORG_FLG,\
S_ORG_EXT.PLAN_GROUP_FLG,\
S_ORG_EXT.PROSPECT_FLG,\
S_ORG_EXT.PRTNR_FLG,\
S_ORG_EXT.PRTNR_PUBLISH_FLG,\
S_ORG_EXT.RPLCD_WTH_CMPT_FLG,\
S_ORG_EXT.PR_CON_ID,\
S_CON_ADDR.ACCNT_ID,\
S_CON_ADDR.ADDR_PER_ID,\
S_CON_ADDR.RELATION_TYPE_CD,\
S_CON_ADDR.ACTIVE_FLG,\
S_CON_ADDR.BL_ADDR_FLG,\
S_CON_ADDR.MAIN_ADDR_FLG,\
S_CON_ADDR.SHIP_ADDR_FLG,\
S_PARTY.PARTY_TYPE_CD,\
S_PARTY.PARTY_UID,\
S_ORG_EXT.PR_BL_ADDR_ID,\
S_ORG_EXT.EXTERNAL_HOST_FLG,\
S_ORG_EXT.ONDEMAND_SYNC_FLG,\
S_CON_ADDR.ED_DELETED_FLG

[Import Account4]
	TYPE = IMPORT
;<REQUEST Import Account4>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_ACCNT_DTL(NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
;<BATCH Import Account4>
	BATCH = 34000-34999
;</BATCH>
	TABLE = EIM_ACCNT_DTL
	ONLY BASE TABLES = S_PARTY, S_ORG_EXT_X

ONLY BASE COLUMNS = S_ORG_EXT_X.ATTRIB_07,\
S_ORG_EXT_X.ATTRIB_10,\
S_ORG_EXT_X.ATTRIB_11,\
S_ORG_EXT_X.ATTRIB_20,\
S_ORG_EXT_X.ATTRIB_56,\
S_ORG_EXT_X.ATTRIB_75,\
S_ORG_EXT_X.PAR_ROW_ID,\
S_ORG_EXT_X.X_CURRENT_CHANNEL_CD,\
S_ORG_EXT_X.X_CURRENT_SEGMENT_CD,\
S_ORG_EXT_X.X_CURRENT_TARGETED_FLG,\
S_ORG_EXT_X.ATTRIB_73,\
S_ORG_EXT_X.ATTRIB_34,\
S_ORG_EXT_X.ATTRIB_35,\
S_ORG_EXT_X.ATTRIB_09,\
S_ORG_EXT_X.X_CURRENT_BRAND_OPPT_CD,\
S_ORG_EXT_X.JTI_SUB_SEGMENT_CURRENT,\
S_PARTY.PARTY_TYPE_CD,\
S_PARTY.PARTY_UID,\
S_ORG_EXT_X.ATTRIB_39,\
S_ORG_EXT_X.ATTRIB_03,\
S_ORG_EXT_X.ATTRIB_51,\
S_ORG_EXT_X.ATTRIB_40,\
S_ORG_EXT_X.ATTRIB_41,\
S_ORG_EXT_X.ATTRIB_42,\
S_ORG_EXT_X.ATTRIB_44,\
S_ORG_EXT_X.X_ATTRIB_82,\
S_ORG_EXT_X.X_JTI_LEAD_RMC_FLG,\
S_ORG_EXT_X.X_LEAD_SECTOR_CD,\
S_ORG_EXT_X.X_JTI_LEAD_BRAND_CD,\
S_ORG_EXT_X.X_VOLUME_PREM_NUM,\
S_ORG_EXT_X.X_VOLUME_SUB_NUM,\
S_ORG_EXT_X.X_VOLUME_MID_NUM,\
S_ORG_EXT_X.X_VOLUME_VALUE_NUM,\
S_ORG_EXT_X.X_SG_PREM_NUM,\
S_ORG_EXT_X.X_SG_SUB_NUM,\
S_ORG_EXT_X.X_SG_MED_NUM,\
S_ORG_EXT_X.X_SG_VALUE_NUM,\
S_ORG_EXT_X.X_JTI_LEAD_PREM_FLG,\
S_ORG_EXT_X.X_JTI_LEAD_SUB_FLG,\
S_ORG_EXT_X.X_JTI_LEAD_MID_FLG,\
S_ORG_EXT_X.X_JTI_LEAD_VALUE_FLG,\
S_ORG_EXT_X.X_JTI_LEAD_RYO_FLG,\
S_ORG_EXT_X.X_VOLUME_LOW_NUM,\
S_ORG_EXT_X.X_VOLUME_MED_NUM,\
S_ORG_EXT_X.X_VOLUME_HIGH_NUM,\
S_ORG_EXT_X.X_JTI_LEAD_LOW_FLG,\
S_ORG_EXT_X.X_JTI_LEAD_MED_FLG,\
S_ORG_EXT_X.X_JTI_LEAD_HIGH_FLG,\
S_ORG_EXT_X.X_SG_LOW_NUM,\
S_ORG_EXT_X.X_SG_HIGH_NUM,\
S_ORG_EXT_X.X_JTI_LEAD_CIGARS_FLG,\
S_ORG_EXT_X.X_VOLUME_LW_NUM,\
S_ORG_EXT_X.X_VOLUME_SW_NUM,\
S_ORG_EXT_X.X_JTI_LEAD_LW_FLG,\
S_ORG_EXT_X.X_JTI_LEAD_SW_FLG,\
S_ORG_EXT_X.X_SG_LW_NUM,\
S_ORG_EXT_X.X_SG_SW_NUM,\
S_ORG_EXT_X.X_LOCAL_DEMO_CD,\
S_ORG_EXT_X.X_FOOTBALL_INFLUENCE_CD,\
S_ORG_EXT_X.X_COMP_LEAD_CD,\
S_ORG_EXT_X.X_URBAN_CD,\
S_ORG_EXT_X.X_SG_MED_RYO_NUM,\
S_ORG_EXT_X.ATTRIB_80,\
S_ORG_EXT_X.X_MAIN_DISTRIBUTOR_ID,\
S_ORG_EXT_X.X_REST_MARK_STORE,\
S_ORG_EXT_X.X_PR_BUY_GRP_ID,\
S_ORG_EXT_X.X_WHOLESALER_TYPE_CD,\
S_ORG_EXT_X.X_TS_ATTRIB_38_CD,\
S_ORG_EXT_X.X_TS_ATTRIB_39_CD,\
S_ORG_EXT_X.X_TS_ATTRIB_40_CD,\
S_ORG_EXT_X.X_ATTRIB_83,\
S_ORG_EXT_X.X_ATTRIB_84,\
S_ORG_EXT_X.X_ATTRIB_85,\
S_ORG_EXT_X.X_TAX_ID_STATUS_CD,\
S_ORG_EXT_X.X_NO_EXCAR_SALE_FLG,\
S_ORG_EXT_X.X_ACTUAL_POSTN_ID,\
S_ORG_EXT_X.X_ORIG_ACCNT_ID,\
S_ORG_EXT_X.X_ATTRIB_86,\
S_ORG_EXT_X.ATTRIB_22,\
S_ORG_EXT_X.ATTRIB_23,\
S_ORG_EXT_X.ATTRIB_25,\
S_ORG_EXT_X.X_ATTRIB_89,\
S_ORG_EXT_X.X_ATTRIB_90,\
S_ORG_EXT_X.X_ATTRIB_91,\
S_ORG_EXT_X.X_ATTRIB_92,\
S_ORG_EXT_X.X_ATTRIB_93,\
S_ORG_EXT_X.X_NOCOPY_FLG,\
S_ORG_EXT_X.X_PAYMENT_TYPE_RETAILER_CD,\
S_ORG_EXT_X.X_ATTRIB_94,\
S_ORG_EXT_X.X_ATTRIB_95,\
S_ORG_EXT_X.X_ATTRIB_96,\
S_ORG_EXT_X.X_ATTRIB_97,\
S_ORG_EXT_X.X_ATTRIB_98,\
S_ORG_EXT_X.X_ATTRIB_99,\
S_ORG_EXT_X.X_ATTRIB_100,\
S_ORG_EXT_X.X_ATTRIB_101,\
S_ORG_EXT_X.X_ATTRIB_102,\
S_ORG_EXT_X.X_ATTRIB_103,\
S_ORG_EXT_X.X_ATTRIB_104,\
S_ORG_EXT_X.X_ATTRIB_105,\
S_ORG_EXT_X.X_ATTRIB_106,\
S_ORG_EXT_X.X_ATTRIB_107,\
S_ORG_EXT_X.X_ATTRIB_108,\
S_ORG_EXT_X.X_ATTRIB_109,\
S_ORG_EXT_X.X_ATTRIB_110,\
S_ORG_EXT_X.X_ATTRIB_111,\
S_ORG_EXT_X.X_ATTRIB_112,\
S_ORG_EXT_X.X_ATTRIB_113,\
S_ORG_EXT_X.X_ATTRIB_114,\
S_ORG_EXT_X.X_ATTRIB_115,\
S_ORG_EXT_X.X_ATTRIB_116,\
S_ORG_EXT_X.X_EXE_AT_ID,\
S_ORG_EXT_X.X_PAY_AT_ID,\
S_ORG_EXT_X.X_PAYEEE_TYPE_CD,\
S_ORG_EXT_X.X_BANK_ID,\
S_ORG_EXT_X.X_ACCOUNT_NUM,\
S_ORG_EXT_X.X_FIRST_NAME_BA_TEXT,\
S_ORG_EXT_X.X_LAST_NAME_BA_TEXT,\
S_ORG_EXT_X.X_NON_AUTOGEN_FLG,\
S_ORG_EXT_X.ATTRIB_33,\
S_ORG_EXT_X.ATTRIB_32,\
S_ORG_EXT_X.ATTRIB_31,\
S_ORG_EXT_X.X_ATTRIB_117,\
S_ORG_EXT_X.X_ATTRIB_118,\
S_ORG_EXT_X.X_TR_RANKING_NUM,\
S_ORG_EXT_X.X_TR_SERVICE_TIME_NUM,\
S_ORG_EXT_X.X_TR_MIN_MIN_BET_VISITS_NUM,\
S_ORG_EXT_X.X_TR_MIN_SERVICE_TIME_NUM,\
S_ORG_EXT_X. X_RETAIL_CHANNEL_CD,\
S_ORG_EXT_X.X_DRIVE_SRV_TIME_NUM,\
S_ORG_EXT_X.X_DRIVE_SRV_TIME_GR_NUM,\
S_ORG_EXT_X.X_EFT_STATUS_TEXT,\
S_ORG_EXT_X.X_EFT_REJECTED_REASON_TEXT,\
S_ORG_EXT_X.X_TS_ATTRIB_41_CD,\
S_ORG_EXT_X.X_TS_ATTRIB_42_CD,\
S_ORG_EXT_X.X_TS_ATTRIB_43_CD,\
S_ORG_EXT_X.X_DEF_DEL_METHOD_CD,\
S_ORG_EXT_X.X_ATTRIB_119_FLG,\
S_ORG_EXT_X.X_BA_ATTRIB2_TEXT,\
S_ORG_EXT_X.X_BA_ATTRIB3_TEXT,\
S_ORG_EXT_X.X_BA_ATTRIB4_TEXT,\
S_ORG_EXT_X.X_BA_ATTRIB5_TEXT,\
S_ORG_EXT_X.X_BA_PHONE_TEXT,\
S_ORG_EXT_X.ATTRIB_52,\
S_ORG_EXT_X.ATTRIB_53,\
S_ORG_EXT_X.X_EMAIL_ACCEPT_CD

[Import Account5]
	TYPE = IMPORT
;<REQUEST Import Account5>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_ACCNT_UT(NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
;<BATCH Import Account5>
	BATCH = 34000-34999
;</BATCH>
	TABLE = EIM_ACCNT_UT
	ONLY BASE TABLES = S_PARTY, S_ORG_EXT_UTX

	;FIXED COLUMN   = AU_REF_FLG,"N"
	
ONLY BASE COLUMNS =S_PARTY.PARTY_TYPE_CD,\
S_PARTY.PARTY_UID,\
S_ORG_EXT_UTX.PAR_ROW_ID,\
S_ORG_EXT_UTX.REF_FLG,\
S_ORG_EXT_UTX.LEGAL_STAT_CD,\
S_ORG_EXT_UTX.OWNERSHIP_CD

;------------------------------------------------------------------------------------------------------------

[SQL_UPDATE Reverse Relation]
SESSION SQL = "UPDATE EIM_ACCOUNT SET PARTY_UID = REL_PARTY_UID, REL_PARTY_UID=PARTY_UID WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999 AND PARTY_UID IS NOT NULL AND REL_PARTY_UID IS NOT NULL"
TYPE = IMPORT
BATCH NUMBER  = 578888990
TABLE= EIM_ACCOUNT

[IMPORT Reverse Relation]
	TYPE = IMPORT
;<REQUEST Import Reverse Relation>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_ACCOUNT (NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
;<BATCH Import Reverse Relation>
	BATCH = 34000-34999
;</BATCH>
	TABLE = EIM_ACCOUNT
	ONLY BASE TABLES = S_PARTY, S_PARTY_REL

INSERT ROWS = S_PARTY,FALSE
UPDATE ROWS = S_PARTY,FALSE

ONLY BASE COLUMNS = S_PARTY.PARTY_UID,\
S_PARTY.PARTY_TYPE_CD,\
S_PARTY.PARTY_UID,\
S_PARTY.ROOT_PARTY_FLG,\
S_PARTY.GROUP_TYPE_CD,\
S_PARTY.PAR_PARTY_ID,\
S_PARTY.NAME,\
S_PARTY_REL.BOARD_SEAT_FLG,\
S_PARTY_REL.REL_TYPE_CD,\
S_PARTY_REL.CONSOLIDATE_FLG,\
S_PARTY_REL.PARTY_ID,\
S_PARTY_REL.REL_PARTY_ID,\
S_PARTY_REL.X_INACTIVE_FLG,\
S_PARTY_REL.START_DT,\
S_PARTY_REL.X_PRIM_BUYING_GROUP_FLG,\
S_PARTY_REL.X_RELATION_CD,\
S_PARTY_REL.X_START_DT

[Import ReasonDateCR7084]

      TYPE = IMPORT
;<REQUEST Import ReasonDateCR7084>SELECT ISNULL((max(IF_ROW_BATCH_NUM)),3434034000) FROM EIM_ACCOUNT (NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 3434034000 AND 3434034999</REQUEST>
;<BATCH Import ReasonDateCR7084>
      BATCH= 3434034000-3434034999
      TABLE = EIM_ACCOUNT
;</BATCH>

      ONLY BASE TABLES = S_PARTY, S_ORG_EXT

      NET CHANGE=FALSE
      ;FIXED COLUMN = X_INACTIVE_REASON, NULL

      INSERT ROWS= S_PARTY, FALSE
      UPDATE ROWS= S_PARTY, FALSE

      INSERT ROWS= S_ORG_EXT, FALSE
      UPDATE ROWS= S_ORG_EXT, TRUE

      ONLY BASE COLUMNS= S_PARTY.PARTY_UID,\
			 S_PARTY.PARTY_TYPE_CD,\
			 S_ORG_EXT.NAME,\
			 S_ORG_EXT.BU_ID,\
			 S_ORG_EXT.LOC,\
			 S_ORG_EXT.X_INACTIVE_REASON

;------------------------------------------------------------------------------------------------------------

[Import ReasonDateCR7084_DT]

      TYPE = IMPORT
;<REQUEST Import ReasonDateCR7084_DT>SELECT ISNULL((max(IF_ROW_BATCH_NUM)),3434034000) FROM EIM_ACCNT_CUT (NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 3434034000 AND 3434034999</REQUEST>
;<BATCH Import ReasonDateCR7084_DT>
      BATCH= 3434034000-3434034999
      TABLE = EIM_ACCNT_CUT
;</BATCH>

      ONLY BASE TABLES = S_PARTY, S_ORG_EXT

      NET CHANGE=FALSE
      ;FIXED COLUMN = AC_CUST_END_DT, NULL

      INSERT ROWS= S_PARTY, FALSE
      UPDATE ROWS= S_PARTY, FALSE

      INSERT ROWS= S_ORG_EXT, FALSE
      UPDATE ROWS= S_ORG_EXT, TRUE

      ONLY BASE COLUMNS= S_PARTY.PARTY_UID,\
			 S_PARTY.PARTY_TYPE_CD,\
			 S_ORG_EXT.NAME,\
			 S_ORG_EXT.BU_ID,\
			 S_ORG_EXT.LOC,\
			 S_ORG_EXT.CUST_END_DT
			 
[Import Contact]
	TYPE = IMPORT
;<REQUEST Import Contact>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_CONTACT (NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
;<BATCH Import Contact>
	BATCH = 34000-34999
;</BATCH>
	TABLE = EIM_CONTACT
	ONLY BASE TABLES = S_PARTY, S_PARTY_PER, S_CONTACT, S_CONTACT_BU, S_POSTN_CON		

	IGNORE BASE COLUMNS =S_CONTACT.FST_NAME,\
						S_CONTACT.LAST_NAME,\
						S_CONTACT.EMP_FLG,\
						S_CONTACT_BU.CON_FST_NAME,\
						S_CONTACT_BU.CON_LAST_NAME,\
						S_CONTACT_BU.CON_EMP_FLG,\
						S_POSTN_CON.CON_FST_NAME,\
						S_POSTN_CON.CON_LAST_NAME	

	
[Import Invoice_Contact]

	  TYPE = IMPORT
;<REQUEST Import Invoice_Contact>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 143000) FROM EIM_ACCNT_CUT (NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 143000 AND 143999</REQUEST>
;<BATCH Import Invoice_Contact>
	BATCH = 143000-143999
;</BATCH>
	TABLE = EIM_ACCNT_CUT

      ONLY BASE TABLES = S_PARTY,S_ORG_EXT,S_PARTY_PER
	  
      INSERT ROWS= S_PARTY, FALSE
      UPDATE ROWS= S_PARTY, FALSE

      INSERT ROWS= S_ORG_EXT, FALSE
      UPDATE ROWS= S_ORG_EXT, TRUE
	  
      INSERT ROWS= S_PARTY_PER, FALSE
      UPDATE ROWS= S_PARTY_PER, TRUE
	  
	 ONLY BASE COLUMNS = S_PARTY.PARTY_UID,\
						S_PARTY.PARTY_TYPE_CD,\
						S_ORG_EXT.NAME,\
						S_ORG_EXT.BU_ID,\
						S_ORG_EXT.LOC,\
						S_PARTY_PER.PERSON_ID,\
			            S_PARTY_PER.PARTY_ID,\
						S_ORG_EXT.PR_BL_PER_ID
	

[Import Passport_Contact]
	TYPE = IMPORT
;<REQUEST Import Passport_Contact>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_CON_DTL (NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
;<BATCH Import Passport_Contact>
	BATCH = 34000-34999
;</BATCH>
	TABLE = EIM_CON_DTL
	ONLY BASE TABLES = S_PARTY, S_CONTACT_X

	INSERT ROWS= S_PARTY, FALSE
	UPDATE ROWS= S_PARTY, FALSE
	
	ONLY BASE COLUMNS = S_PARTY.PARTY_UID,\
					S_PARTY.PARTY_TYPE_CD,\
					S_CONTACT_X.PAR_ROW_ID,\
					S_CONTACT_X.ATTRIB_01
					
[Update Contact Names]
	TYPE = IMPORT
;<REQUEST Update Contact Names>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_CONTACT (NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
;<BATCH Update Contact Names>
 BATCH = 34000-34999
;</BATCH> 

	 TABLE = EIM_CONTACT
	 ONLY BASE TABLES =S_PARTY, S_CONTACT, S_CONTACT_BU, S_POSTN_CON    

	 INSERT ROWS = S_PARTY, FALSE
	 UPDATE ROWS = S_PARTY, FALSE

	 INSERT ROWS = S_CONTACT, FALSE
	 UPDATE ROWS = S_CONTACT, TRUE

	 INSERT ROWS = S_CONTACT_BU, FALSE
	 UPDATE ROWS = S_CONTACT_BU, TRUE

	 INSERT ROWS = S_POSTN_CON, FALSE
	 UPDATE ROWS = S_POSTN_CON, TRUE
 
	 ONLY BASE COLUMNS = S_PARTY.PARTY_UID,\
						S_PARTY.PARTY_TYPE_CD,\
						S_CONTACT.PERSON_UID,\
						S_CONTACT.BU_ID,\
						S_CONTACT.FST_NAME,\
						S_CONTACT.LAST_NAME,\
						S_CONTACT.EMP_FLG,\
						S_CONTACT_BU.CONTACT_ID,\
						S_CONTACT_BU.BU_ID,\
						S_CONTACT_BU.CON_FST_NAME,\
						S_CONTACT_BU.CON_LAST_NAME,\
						S_CONTACT_BU.CON_EMP_FLG,\
						S_POSTN_CON.CON_ID,\
						S_POSTN_CON.POSTN_ID,\
						S_POSTN_CON.CON_FST_NAME,\
						S_POSTN_CON.CON_LAST_NAME