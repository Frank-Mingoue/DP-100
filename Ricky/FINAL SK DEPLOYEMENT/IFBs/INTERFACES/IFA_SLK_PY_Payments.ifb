;[20210421:RS] INC3386804 Include S_SRC_PAYMENT.PROD_ID
;[20170223:NH] CHG109953 Include S_ADDR_PER.X_BU_ID
;[20150716:JL] Siebel Upgrade IP14 - Add required columns
;[20140924:JL] CHG062329 - Add new section Import ALL S_ADDR_PER_CHQ and column VAT
;[20140918:JL] CHG062250 - New changes as per HLFD v4: Add columns in Import ALL CHEQUES, Import ALL PAYMENTS; Add new section Import ALL S_SRCPAYMT_CON_CHQ, Import ALL CX_SRC_PAY_XM_CHQ
;[20140519:JL] Defect_1090, 1091, 1097 on CHG053246 - Include columns AMT_CURCY_CD, AMT_DT in sections "Import ALL CHEQUES", "Import ALL PAYMENTS";  Include column PAY_AMT in section "Import ALL CHEQUES"
;[20140417:LK] DEFECT 687 ON CHG053246 - Include new columns in section Import ALL CHEQUES
;[20140313:JL] CHG055369 , CHG053246 , CHG053018 Include columns and section "Import ALL S_SRCPAYMT_CON","Import ALL CHEQUES" as per HLFD PYv3
;[20130321:JL] CHG039033 - Include columns and section Import ALL AGREEMENTS as per HLFD PYv2
;[20141010:RM] DataLoad269 - Populate the field X_BANK_PAYMENT_DATE_DT for the Check
;[20170123:AR]CHG107291 -Add new S_SRC_PAYMENT.X_MODIF_REASON_CD column for S_SRC_PAYMENT

[Siebel Interface Manager]
	LOG TRANSACTIONS = TRUE
	SET BASED LOGGING = TRUE
	LOG TRANSACTIONS TO FILE = TRUE
	PROCESS = Import All


[Import All]
	TYPE = SHELL
	INCLUDE = "Import ALL S_ADDR_PER_CHQ"
	INCLUDE = "Import ALL CHEQUES"
	INCLUDE = "Import ALL PAYMENTS"
	INCLUDE = "Import ALL AGREEMENTS"
	INCLUDE = "Import ALL S_SRCPAYMT_CON"
	INCLUDE = "Import ALL S_SRCPAYMT_CON_CHQ"
	INCLUDE = "Import ALL CX_SRC_PAY_XM_CHQ"


;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Import all records in S-SRC_PAYMENTS table
[Import ALL PAYMENTS]


      TYPE = IMPORT
;<REQUEST Import ALL PAYMENTS>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_PAYMENT(NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
;<BATCH Import ALL PAYMENTS>
	BATCH = 34000-34999
;</BATCH>
	TABLE = EIM_PAYMENT
	ONLY BASE COLUMNS = S_SRC_PAYMENT.PAYMENT_REQ_NUM,\
			    S_SRC_PAYMENT.TYPE_CD,\
  			    S_SRC_PAYMENT.CONTRACT_ID,\
			    S_SRC_PAYMENT.X_VM_PAY_LINE,\
			    S_SRC_PAYMENT.ACTL_PAY_DT,\
			    S_SRC_PAYMENT.PAY_STAT_CD,\
			    S_SRC_PAYMENT.X_VM_EXPECTED_AMT,\
			    S_SRC_PAYMENT.X_VM_VAT,\
			    S_SRC_PAYMENT.BANK_DEPOSIT_FLG,\
				S_SRC_PAYMENT.CG_PYMT_SUBMIT_FLG,\
			    S_SRC_PAYMENT.DEPOSIT_FLG,\
			    S_SRC_PAYMENT.DOCNUM_GNRTD_FLG,\
			    S_SRC_PAYMENT.IC_TXN_IMPORT_FLG,\
			    S_SRC_PAYMENT.PHASED_FLG,\
			    S_SRC_PAYMENT.PHONE_AUTH_FLG,\
			    S_SRC_PAYMENT.PREAUTH_FLG,\
			    S_SRC_PAYMENT.SELECT_FLG,\
			    S_SRC_PAYMENT.PAY_AMT,\
				S_SRC_PAYMENT.X_PAY_PLAN_ID,\
				S_SRC_PAYMENT.X_AGREE_ITEM_ID,\
				S_SRC_PAYMENT.REASON_CD,\
				S_SRC_PAYMENT.X_AGREE_BUDGET_ID,\
				S_SRC_PAYMENT.DESC_TEXT,\
				S_SRC_PAYMENT.X_COMMIT_DT,\
				S_SRC_PAYMENT.ACCNT_ID,\
				S_SRC_PAYMENT.CON_ID,\
				S_SRC_PAYMENT.SRC_ID,\
				S_SRC_PAYMENT.X_APPROVER_ID,\
				S_SRC_PAYMENT.X_SECONDARY_APPROVER_ID,\
				S_SRC_PAYMENT.X_APPROVAL_COM_TEXT,\
				S_SRC_PAYMENT.X_APPROVAL_STATUS_CD,\
				S_SRC_PAYMENT.X_APPROVAL_DT,\
				S_SRC_PAYMENT.X_APPROVED_BY_ID,\
				S_SRC_PAYMENT.X_BANK_PAYMENT_NUMBER_TEXT,\
				S_SRC_PAYMENT.X_BANK_PAYMENT_STATUS_TEXT,\
				S_SRC_PAYMENT.X_BANK_PAYMENT_DATE_DT,\
				S_SRC_PAYMENT.X_PAYMENT_MEMO,\
				S_SRC_PAYMENT.PAR_PAYMENT_ID,\
				S_SRC_PAYMENT.X_BU_ID,\
				S_SRC_PAYMENT.AMT_CURCY_CD,\
				S_SRC_PAYMENT.AMT_DT,\
				S_SRC_PAYMENT.X_CORRECTED_FLG,\
				S_SRC_PAYMENT.X_MANUAL_PAYMENT,\
				S_SRC_PAYMENT.DESIRED_PAY_DT,\
				S_SRC_PAYMENT.REQUEST_DT,\
				S_SRC_PAYMENT.X_TEMPLATE_ID,\
				S_SRC_PAYMENT.X_CHECK_ID,\
				S_SRC_PAYMENT.PAYMENT_RATE,\
				S_SRC_PAYMENT.X_NON_WHL_RPTD,\
				S_SRC_PAYMENT.BL_STATE,\
				S_SRC_PAYMENT.X_VAT_REGN_NUM,\
				S_SRC_PAYMENT.CG_DEDN_TYPE_CD,\
				S_SRC_PAYMENT.X_ITEM_UNIT_CD,\
				S_SRC_PAYMENT.LOCKED_FLG,\
				S_SRC_PAYMENT.VOID_FLG,\
				S_SRC_PAYMENT.X_MODIF_REASON_CD,\
				S_SRC_PAYMENT.PROD_ID
		
      ONLY BASE TABLES = S_SRC_PAYMENT

      
      INSERT ROWS= S_SRC_PAYMENT, TRUE
      UPDATE ROWS= S_SRC_PAYMENT, TRUE



;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Update records in CX_AGR_PL_ITEM table
[Import ALL AGREEMENTS]
	TYPE = IMPORT
	;<REQUEST Import ALL AGREEMENTS>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_AGREEMENT(NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
	;<BATCH Import ALL AGREEMENTS>
		BATCH = 34000-34999
	;</BATCH>
	
	TABLE = EIM_AGREEMENT
	
	INSERT ROWS = S_DOC_AGREE, FALSE
	UPDATE ROWS = S_DOC_AGREE, FALSE
	INSERT ROWS = CX_AGR_PL_ITEM, FALSE
	UPDATE ROWS = CX_AGR_PL_ITEM, TRUE
	
	ONLY BASE TABLES = S_DOC_AGREE, CX_AGR_PL_ITEM
	
	ONLY BASE COLUMNS = S_DOC_AGREE.NAME,\
						S_DOC_AGREE.TARGET_OU_ID,\
						S_DOC_AGREE.REV_NUM,\
						S_DOC_AGREE.BU_ID,\
						CX_AGR_PL_ITEM.PAR_ROW_ID,\
						CX_AGR_PL_ITEM.TYPE,\
						CX_AGR_PL_ITEM.NAME,\
						CX_AGR_PL_ITEM.X_PAID_TYPE_CD

;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Insert records in S_SRCPAYMT_CON table
[Import ALL S_SRCPAYMT_CON]
	TYPE = IMPORT
	;<REQUEST Import ALL S_SRCPAYMT_CON>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_FN_SRCPAY(NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
	;<BATCH Import ALL S_SRCPAYMT_CON>
		BATCH = 34000-34999
	;</BATCH>
	
	TABLE = EIM_FN_SRCPAY
	
	INSERT ROWS = S_SRC_PAYMENT, FALSE
	UPDATE ROWS = S_SRC_PAYMENT, FALSE
	INSERT ROWS = S_SRCPAYMT_CON, TRUE
	UPDATE ROWS = S_SRCPAYMT_CON, TRUE
	
	ONLY BASE TABLES = S_SRC_PAYMENT, S_SRCPAYMT_CON
	
	ONLY BASE COLUMNS = S_SRC_PAYMENT.PAYMENT_REQ_NUM,\
						S_SRC_PAYMENT.TYPE_CD,\
						S_SRCPAYMT_CON.SRC_PAYMT_ID,\
						S_SRCPAYMT_CON.CON_ID
						

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Import all records in CHEQUES table
[Import ALL CHEQUES]

      TYPE = IMPORT
;<REQUEST Import ALL CHEQUES>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 134000) FROM EIM_PAYMENT(NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 134000 AND 134999</REQUEST>
;<BATCH Import ALL CHEQUES>
	BATCH = 134000-134999
;</BATCH>
	TABLE = EIM_PAYMENT
	
	ONLY BASE TABLES = S_SRC_PAYMENT

    INSERT ROWS= S_SRC_PAYMENT, TRUE
    UPDATE ROWS= S_SRC_PAYMENT, TRUE
	
	ONLY BASE COLUMNS = S_SRC_PAYMENT.PAYMENT_REQ_NUM,\
			    S_SRC_PAYMENT.TYPE_CD,\
				S_SRC_PAYMENT.PAY_STAT_CD,\
			    S_SRC_PAYMENT.BANK_DEPOSIT_FLG,\
	    		S_SRC_PAYMENT.CG_PYMT_SUBMIT_FLG,\
			    S_SRC_PAYMENT.DEPOSIT_FLG,\
			    S_SRC_PAYMENT.DOCNUM_GNRTD_FLG,\
			    S_SRC_PAYMENT.IC_TXN_IMPORT_FLG,\
			    S_SRC_PAYMENT.PHASED_FLG,\
			    S_SRC_PAYMENT.PHONE_AUTH_FLG,\
			    S_SRC_PAYMENT.PREAUTH_FLG,\
			    S_SRC_PAYMENT.SELECT_FLG,\
				S_SRC_PAYMENT.PAYMENT_NUM,\
				S_SRC_PAYMENT.PAY_TYPE_CD,\
				S_SRC_PAYMENT.ACCNT_ID,\
				S_SRC_PAYMENT.X_BU_ID,\
				S_SRC_PAYMENT.DESC_TEXT,\
				S_SRC_PAYMENT.ACTL_PAY_DT,\
			    S_SRC_PAYMENT.X_EXPORT_STATUS_CD,\
			    S_SRC_PAYMENT.X_PAY_DEL_STAT_CD,\
			    S_SRC_PAYMENT.X_PAYMENT_DEL_METHOD_CD,\
			    S_SRC_PAYMENT.PAY_AMT,\
				S_SRC_PAYMENT.AMT_CURCY_CD,\
				S_SRC_PAYMENT.AMT_DT,\
				S_SRC_PAYMENT.X_COMMIT_DT,\
				S_SRC_PAYMENT.X_APPROVAL_DT,\
				S_SRC_PAYMENT.VALID_FROM_DT,\
				S_SRC_PAYMENT.X_EXPORT_FILE_DT_EFT,\
				S_SRC_PAYMENT.X_CORRECTED_FLG,\
				S_SRC_PAYMENT.X_REQUESTOR_ID,\
				S_SRC_PAYMENT.X_PAY_CORRECTED_ID,\
				S_SRC_PAYMENT.STATUS_DT,\
				S_SRC_PAYMENT.DESIRED_PAY_DT,\
				S_SRC_PAYMENT.REQUEST_DT,\
				S_SRC_PAYMENT.X_VAT_REGN_NUM,\
				S_SRC_PAYMENT.CG_DEDN_TYPE_CD,\
				S_SRC_PAYMENT.ADDR_ORG_ID,\
				S_SRC_PAYMENT.X_BANK_PAYMENT_DATE_DT,\
				S_SRC_PAYMENT.LOCKED_FLG,\
				S_SRC_PAYMENT.VOID_FLG,\
				S_SRC_PAYMENT.X_REJECTED_REASON_TEXT,\
				S_SRC_PAYMENT.X_MODIF_REASON_CD
				
;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Insert records in S_SRCPAYMT_CON table
[Import ALL S_SRCPAYMT_CON_CHQ]
	TYPE = IMPORT
	;<REQUEST Import ALL S_SRCPAYMT_CON_CHQ>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 134000) FROM EIM_FN_SRCPAY(NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 134000 AND 134999</REQUEST>
	;<BATCH Import ALL S_SRCPAYMT_CON_CHQ>
		BATCH = 134000-134999
	;</BATCH>
	
	TABLE = EIM_FN_SRCPAY
	
	INSERT ROWS = S_SRC_PAYMENT, FALSE
	UPDATE ROWS = S_SRC_PAYMENT, FALSE
	INSERT ROWS = S_SRCPAYMT_CON, TRUE
	UPDATE ROWS = S_SRCPAYMT_CON, TRUE
	
	ONLY BASE TABLES = S_SRC_PAYMENT, S_SRCPAYMT_CON
	
	ONLY BASE COLUMNS = S_SRC_PAYMENT.PAYMENT_REQ_NUM,\
						S_SRC_PAYMENT.TYPE_CD,\
						S_SRCPAYMT_CON.SRC_PAYMT_ID,\
						S_SRCPAYMT_CON.CON_ID

						
						
						
;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Insert records in CX_SRC_PAY_XM table
[Import ALL CX_SRC_PAY_XM_CHQ]
	TYPE = IMPORT
	;<REQUEST Import ALL CX_SRC_PAY_XM_CHQ>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_CX_SRC_PAY_XM(NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
	;<BATCH Import ALL CX_SRC_PAY_XM_CHQ>
		BATCH = 34000-34999
	;</BATCH>
	
	TABLE = EIM_CX_SRC_PAY_XM
	
	INSERT ROWS = CX_SRC_PAY_XM, TRUE
	UPDATE ROWS = CX_SRC_PAY_XM, TRUE
	
	ONLY BASE TABLES = CX_SRC_PAY_XM
	
	ONLY BASE COLUMNS = CX_SRC_PAY_XM.PAR_ROW_ID,\
						CX_SRC_PAY_XM.TYPE,\
						CX_SRC_PAY_XM.NAME,\
						CX_SRC_PAY_XM.X_PAY_ADDR,\
						CX_SRC_PAY_XM.X_PAY_CITY,\
						CX_SRC_PAY_XM.X_PAY_STATE,\
						CX_SRC_PAY_XM.X_PAY_ADDR_LINE_3,\
						CX_SRC_PAY_XM.X_PAY_ADDR_LINE_2,\
						CX_SRC_PAY_XM.X_PAY_ADDR_LINE_1,\
						CX_SRC_PAY_XM.X_PAY_ZIPCODE
										

;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Insert records in S_ADDR_PER table
[Import ALL S_ADDR_PER_CHQ]
	TYPE = IMPORT
	;<REQUEST Import ALL S_ADDR_PER_CHQ>SELECT (COUNT (DISTINCT IF_ROW_BATCH_NUM) + 34000) FROM EIM_ADDR_PER(NOLOCK) WHERE IF_ROW_BATCH_NUM BETWEEN 34000 AND 34999</REQUEST>
	;<BATCH Import ALL S_ADDR_PER_CHQ>
		BATCH = 34000-34999
	;</BATCH>
	
	TABLE = EIM_ADDR_PER
	
	INSERT ROWS = S_ADDR_PER, TRUE
	UPDATE ROWS = S_ADDR_PER, TRUE
	
	ONLY BASE TABLES = S_ADDR_PER
	
	ONLY BASE COLUMNS = S_ADDR_PER.ADDR_NAME,\
						S_ADDR_PER.PER_ID,\
						S_ADDR_PER.ALIGNMENT_FLG,\
						S_ADDR_PER.DISA_CLEANSE_FLG,\
						S_ADDR_PER.NAME_LOCK_FLG,\
						S_ADDR_PER.PREMISE_FLG,\
						S_ADDR_PER.X_ACCNT_ID,\
						S_ADDR_PER.ADDR,\
						S_ADDR_PER.CITY,\
						S_ADDR_PER.ZIPCODE,\
						S_ADDR_PER.X_STATE,\
						S_ADDR_PER.COUNTRY,\
						S_ADDR_PER.ED_DELETED_FLG,\
						S_ADDR_PER.ED_ENABLED_FLG,\
						S_ADDR_PER.GEOCD_VALID_FLG,\
						S_ADDR_PER.LOCATION_FLG,\
						S_ADDR_PER.SYNC_SUCCESS_FLG,\
						S_ADDR_PER.VERIFIED_FLG,\
						S_ADDR_PER.X_BU_ID