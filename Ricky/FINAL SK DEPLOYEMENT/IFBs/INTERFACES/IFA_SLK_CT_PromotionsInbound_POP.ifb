;[20.06.2012:JL] INC0532222 - Modification of ifb based on HLFD Promotions v3
; .ifb file according to HLFD Promotions v1.10

[Siebel Interface Manager]
       	LOG TRANSACTIONS = TRUE
	SET BASED LOGGING = TRUE
	LOG TRANSACTIONS TO FILE = TRUE
        PROCESS = IMPORT ALL

[IMPORT ALL]
	TYPE = SHELL
	INCLUDE = "INSERT GIFT_PRODS"
	INCLUDE = "INSERT PROMO_PRODS"
	INCLUDE = "REMOVE UNUSED_DERIVED_PRODS"
	INCLUDE = "UPDATE GIFT_PRODS"
	INCLUDE = "UPDATE PROMO_PRODS"
	INCLUDE = "INSERT PROMO_ACCOUNTS"
	INCLUDE = "UPDATE PROMO_ACCOUNTS"
	INCLUDE = "INSERT PROMOTIONS"
	INCLUDE = "UPDATE PROMOTIONS"
	INCLUDE = "PROMO_ACCOUNT TO PROMO LINK"
	INCLUDE = "PROMO_ACCOUNT_PROD TO PROMO_ACCOUNT LINK"
	INCLUDE = "INSERT TACTICS_CD"
	INCLUDE = "UPDATE EIM_SRC SELLOUT PRODUCTs"
	INCLUDE = "UPDATE EIM_SRC NON_SELLOUT PRODUCTs"
	INCLUDE = "UPDATE EIM_SRC NON_SELLOUT STATUS_CD"
	INCLUDE = "UPDATE EIM_SRC NON_SELLOUT STATUS_CD AcTiVe"
	INCLUDE = "UPDATE PERIODs"
	INCLUDE = "UPDATE BU-based PERIODs"
	INCLUDE = "SEGMENT BUNDLE_PRODS_EIM_SRC"
	INCLUDE = "SEGMENT BUNDLE_PRODS_EIM_SRC2"
	INCLUDE = "SEGMENT BUNDLE_PRODS_EIM_SRC3"
	INCLUDE = "SEGMENT GIFT_PRODS_EIM_SRC"
	INCLUDE = "SEGMENT GIFT_PRODS_EIM_SRC2"
	INCLUDE = "SEGMENT GIFT_PRODS_EIM_SRC3"
	INCLUDE = "SEGMENT PROMO_PRODS_EIM_SRC"
	INCLUDE = "SEGMENT PROMO_PRODS_EIM_SRC2"
	INCLUDE = "SEGMENT PROMO_PRODS_EIM_SRC3"
	INCLUDE = "SEGMENT PROMO_ACCOUNTS_SRC"
	INCLUDE = "SEGMENT PROMO_ACCOUNTS_SRC2"
	INCLUDE = "SEGMENT PROMO_ACCOUNTS_SRC3"
	INCLUDE = "SEGMENT PROMOTIONS_SRC"
	INCLUDE = "SEGMENT PROMOTIONS_SRC2"
	INCLUDE = "SEGMENT PROMOTIONS_SRC3"


;---------------------------------------------------------------------------------------------------------------------------
; This section creates Gift products and Promoted products records


; Create Promotional Item/Merchandising Material

[INSERT GIFT_PRODS]
	SESSION SQL= "INSERT INTO EIM_SRC (ROW_ID, IF_ROW_STAT, IF_ROW_BATCH_NUM, ORG_BU, SUB_TYPE, PROD_NAME, PROD_BU, SRC_NUM, PROG_START_DT, PROG_END_DT, ACCNT_NAME, ACCNT_BU) SELECT MAX(ROW_ID), 'FOR_IMPORT', 4404000, ORG_BU, 'PLAN_MERCHAND_ITEM', (SELECT T2.PART_NUM FROM S_PROD_INT T1, S_PROD_INT T2, S_BU T3 WHERE T1.X_GIFT_PRODUCT_ID = T2.ROW_ID AND T1.PART_NUM = EIM_SRC.PROD_NAME AND T1.BU_ID = T3.ROW_ID AND T3.NAME = EIM_SRC.PROD_BU), PROD_BU, ( CONVERT(CHAR(8), PROG_START_DT, 112) + LEFT(PROD_NAME ,10)+LEFT(ACCNT_NAME,10) ), PROG_START_DT, PROG_END_DT, ACCNT_NAME, ACCNT_BU FROM EIM_SRC WHERE IF_ROW_BATCH_NUM = 4400000 GROUP BY ACCNT_NAME, ACCNT_BU, PROG_START_DT, PROG_END_DT, ORG_BU, PROD_NAME, PROD_BU"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC

; Add further details to the created Promotional Item/Merchandising Material records

[UPDATE GIFT_PRODS]
	SESSION SQL= "UPDATE EIM_SRC SET EIM_SRC.NAME = (F4.NAME + (SELECT T2.PART_NUM FROM S_PROD_INT T1, S_PROD_INT T2, S_BU T3 WHERE T1.X_GIFT_PRODUCT_ID = T2.ROW_ID AND T1.PART_NUM = F4.PROD_NAME AND T1.BU_ID = T3.ROW_ID AND T3.NAME = F4.PROD_BU)), EIM_SRC.DESC_TEXT = F4.DESC_TEXT, EIM_SRC.X_COMMIT_STATUS_CD = F4.X_COMMIT_STATUS_CD, EIM_SRC.SRC_CD = 'Promotion' FROM EIM_SRC F4 INNER JOIN EIM_SRC ON F4.ROW_ID = EIM_SRC.ROW_ID WHERE EIM_SRC.IF_ROW_BATCH_NUM = 4404000 AND F4.IF_ROW_BATCH_NUM = 4400000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC



;Create Promoted Product records

[INSERT PROMO_PRODS]
	SESSION SQL= "INSERT INTO EIM_SRC (ROW_ID, IF_ROW_STAT, IF_ROW_BATCH_NUM, ORG_BU, SUB_TYPE, PROD_NAME, PROD_BU, SRC_NUM, PROG_START_DT, PROG_END_DT, ACCNT_NAME, ACCNT_BU) SELECT MAX(ROW_ID), 'FOR_IMPORT', 4403000, ORG_BU, 'PLAN_ACCOUNT_PROMOTION_PRODUCT', (SELECT T2.PART_NUM FROM S_PROD_INT T1, S_PROD_INT T2, S_BU T3 WHERE T1.PR_EQUIV_PROD_ID = T2.ROW_ID AND T1.PART_NUM = EIM_SRC.PROD_NAME AND T1.BU_ID = T3.ROW_ID AND T3.NAME = EIM_SRC.PROD_BU), PROD_BU, ( CONVERT(CHAR(8), PROG_START_DT, 112) + LEFT(PROD_NAME ,10)+LEFT(ACCNT_NAME,10) ), PROG_START_DT, PROG_END_DT, ACCNT_NAME, ACCNT_BU FROM EIM_SRC WHERE IF_ROW_BATCH_NUM = 4400000 GROUP BY ACCNT_NAME, ACCNT_BU, PROG_START_DT, PROG_END_DT, ORG_BU, PROD_NAME, PROD_BU"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC

; Add further details to the created Promoted Product records

[UPDATE PROMO_PRODS]
	SESSION SQL= "UPDATE EIM_SRC SET EIM_SRC.NAME = (F3.NAME + (SELECT T2.PART_NUM FROM S_PROD_INT T1, S_PROD_INT T2, S_BU T3 WHERE T1.PR_EQUIV_PROD_ID = T2.ROW_ID AND T1.PART_NUM = F3.PROD_NAME AND T1.BU_ID = T3.ROW_ID AND T3.NAME = F3.PROD_BU)), EIM_SRC.DESC_TEXT = F3.DESC_TEXT, EIM_SRC.X_COMMIT_STATUS_CD = F3.X_COMMIT_STATUS_CD, EIM_SRC.SRC_CD = 'Promotion' FROM EIM_SRC F3 INNER JOIN EIM_SRC ON F3.ROW_ID = EIM_SRC.ROW_ID WHERE EIM_SRC.IF_ROW_BATCH_NUM = 4403000 AND F3.IF_ROW_BATCH_NUM = 4400000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC



;Remove unwanted Promoted and Gift Product records

[REMOVE UNUSED_DERIVED_PRODS]
	SESSION SQL= "DELETE FROM EIM_SRC WHERE IF_ROW_BATCH_NUM IN ('4403000','4404000') AND PROD_NAME IS NULL"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC



;---------------------------------------------------------------------------------------------------------------------------
; This section creates Promotions records

;Create Promotions 

[INSERT PROMO_ACCOUNTS]
	SESSION SQL= "INSERT INTO EIM_SRC (ROW_ID, IF_ROW_STAT, IF_ROW_BATCH_NUM, ORG_BU, SUB_TYPE, SRC_NUM, ACCNT_NAME, ACCNT_BU, PROG_START_DT, PROG_END_DT) SELECT MAX(ROW_ID), 'FOR_IMPORT', 4402000, ORG_BU, 'PLAN_ACCOUNT_PROMOTION', ( CONVERT(CHAR(8), PROG_START_DT, 112) + LEFT(PROD_NAME ,10)+LEFT(ACCNT_NAME,10) ), ACCNT_NAME, ACCNT_BU, PROG_START_DT, PROG_END_DT FROM EIM_SRC WHERE IF_ROW_BATCH_NUM = 4400000 GROUP BY ACCNT_NAME, ACCNT_BU, PROG_START_DT, PROG_END_DT, ORG_BU, PROD_NAME, PROD_BU"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC


; Add further details to the created Promotions records

[UPDATE PROMO_ACCOUNTS]
	SESSION SQL= "UPDATE EIM_SRC SET EIM_SRC.NAME = (F2.NAME + CONVERT(CHAR(8), F2.PROG_START_DT, 112)), EIM_SRC.X_COMMIT_STATUS_CD = F2.X_COMMIT_STATUS_CD, EIM_SRC.DESC_TEXT = F2.DESC_TEXT, EIM_SRC.SRC_CD = 'Discretionary' FROM EIM_SRC F2 INNER JOIN EIM_SRC ON F2.ROW_ID = EIM_SRC.ROW_ID WHERE EIM_SRC.IF_ROW_BATCH_NUM = 4402000 AND F2.IF_ROW_BATCH_NUM = 4400000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC



;---------------------------------------------------------------------------------------------------------------------------
; This section creates Promotion Programs records

[INSERT PROMOTIONS]
	SESSION SQL= "INSERT INTO EIM_SRC (ROW_ID, IF_ROW_STAT, IF_ROW_BATCH_NUM, ORG_BU, SUB_TYPE, SRC_NUM, NAME, PROG_START_DT, PROG_END_DT) SELECT MAX(ROW_ID), 'FOR_IMPORT', 4401000, ORG_BU, 'PROMOTION', (NAME + CONVERT(CHAR(8), PROG_START_DT, 112)), (NAME + CONVERT(CHAR(8), PROG_START_DT, 112)), PROG_START_DT, PROG_END_DT FROM EIM_SRC WHERE IF_ROW_BATCH_NUM = 4400000 GROUP BY NAME, PROG_START_DT, PROG_END_DT, ORG_BU, PROD_NAME"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC


; Add further details to the created Promotion Programs records

[UPDATE PROMOTIONS]
	SESSION SQL= "UPDATE EIM_SRC SET EIM_SRC.X_COMMIT_STATUS_CD = F0.X_COMMIT_STATUS_CD, EIM_SRC.DESC_TEXT = F0.DESC_TEXT, EIM_SRC.SRC_CD = 'Corporate' FROM EIM_SRC F0 INNER JOIN EIM_SRC ON F0.ROW_ID = EIM_SRC.ROW_ID WHERE EIM_SRC.IF_ROW_BATCH_NUM = 4401000 AND F0.IF_ROW_BATCH_NUM = 4400000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC



;---------------------------------------------------------------------------------------------------------------------------
; This section makes the link from the Bundled products, Promoted products and Gift products towards Promotion records

[PROMO_ACCOUNT_PROD TO PROMO_ACCOUNT LINK]
	SESSION SQL= "UPDATE EIM_SRC SET EIM_SRC.SRC_PAR_SRC_BU = EIM_SRC.ORG_BU, EIM_SRC.SRC_PAR_SRC_NUM = F2.SRC_NUM, EIM_SRC.SRC_PAR_SUB_TYPE = 'PLAN_ACCOUNT_PROMOTION' FROM EIM_SRC INNER JOIN EIM_SRC F2 ON EIM_SRC.ROW_ID = F2.ROW_ID WHERE EIM_SRC.IF_ROW_BATCH_NUM IN ('4400000','4403000','4404000') AND F2.IF_ROW_BATCH_NUM = 4402000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC



;---------------------------------------------------------------------------------------------------------------------------
; This section makes the link from the Promotions towards Promotion Programs records

[PROMO_ACCOUNT TO PROMO LINK]
	SESSION SQL= "UPDATE EIM_SRC SET EIM_SRC.SRC_TMPL_SRC_BU = P1.ORG_BU, EIM_SRC.SRC_TMPL_SRC_NUM = (P1.NAME + CONVERT(CHAR(8), P1.PROG_START_DT, 112)), EIM_SRC.SRC_TMPL_SUB_TYPE = 'PROMOTION' FROM EIM_SRC P1 INNER JOIN EIM_SRC ON P1.ROW_ID = EIM_SRC.ROW_ID WHERE EIM_SRC.IF_ROW_BATCH_NUM = 4402000 AND P1.IF_ROW_BATCH_NUM = 4400000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC



;---------------------------------------------------------------------------------------------------------------------------
; This fills the tactics for the records created above with the one provided in the flat file

[INSERT TACTICS_CD]
	SESSION SQL= "INSERT INTO EIM_SRC2 (ROW_ID, IF_ROW_STAT, IF_ROW_BATCH_NUM, SRC_BU, SUB_TYPE, SRC_NUM, TACTICS_CD) SELECT R1.ROW_ID, 'FOR_IMPORT', R1.IF_ROW_BATCH_NUM, R1.ORG_BU, R1.SUB_TYPE, R1.SRC_NUM, R2.TACTICS_CD FROM EIM_SRC R1 INNER JOIN EIM_SRC2 R2 ON R1.ROW_ID = R2.ROW_ID WHERE R1.IF_ROW_BATCH_NUM BETWEEN 4401000 AND 4404000 AND R2.IF_ROW_BATCH_NUM  = 4400000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC



;---------------------------------------------------------------------------------------------------------------------------
; Look up products' details into base tables (from the part number supplied in flat file) so that EIM resolves it.

;For Sellout promotions
[UPDATE EIM_SRC SELLOUT PRODUCTs]
	SESSION SQL= "UPDATE EIM_SRC SET PROD_NAME = F1.NAME, PROD_VEN_LOC = F2.LOC, PROD_VEN_NAME = F2.NAME, PROD_VEN_BU = S_BU.NAME FROM EIM_SRC INNER JOIN S_BU F4 ON EIM_SRC.PROD_BU = F4.NAME INNER JOIN S_PROD_INT F1 ON F1.INTEGRATION_ID = 'AZ'+EIM_SRC.PROD_NAME AND F4.ROW_ID = F1.BU_ID LEFT OUTER JOIN S_ORG_EXT F2 ON F1.VENDR_OU_ID = F2.ROW_ID LEFT OUTER JOIN S_BU ON F2.BU_ID = S_BU.ROW_ID WHERE IF_ROW_BATCH_NUM BETWEEN 4400000 AND 4404000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC


;For NON-Sellout promotions
[UPDATE EIM_SRC NON_SELLOUT PRODUCTs]
	SESSION SQL= "UPDATE EIM_SRC SET PROD_NAME = F1.NAME, PROD_VEN_LOC = F2.LOC, PROD_VEN_NAME = F2.NAME, PROD_VEN_BU = S_BU.NAME FROM EIM_SRC INNER JOIN S_BU F4 ON EIM_SRC.PROD_BU = F4.NAME INNER JOIN S_PROD_INT F1 ON F1.INTEGRATION_ID = 'AZ'+EIM_SRC.PROD_NAME AND F4.ROW_ID = F1.BU_ID LEFT OUTER JOIN S_ORG_EXT F2 ON F1.VENDR_OU_ID = F2.ROW_ID LEFT OUTER JOIN S_BU ON F2.BU_ID = S_BU.ROW_ID WHERE IF_ROW_BATCH_NUM BETWEEN 4410000 AND 4410999"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC



;---------------------------------------------------------------------------------------------------------------------------
; Set incentive status.

;For Non-Sellout promotions
[UPDATE EIM_SRC NON_SELLOUT STATUS_CD]
	SESSION SQL= "UPDATE EIM_SRC SET STATUS_CD = X_STATUS_CD FROM EIM_SRC WHERE IF_ROW_BATCH_NUM BETWEEN 4410000 AND 4430000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC

;For Non-Sellout promotions whose status is AcTiVe
[UPDATE EIM_SRC NON_SELLOUT STATUS_CD AcTiVe]
	SESSION SQL= "UPDATE EIM_SRC SET STATUS_CD = 'Active' FROM EIM_SRC WHERE IF_ROW_BATCH_NUM BETWEEN 4410000 AND 4430000 and STATUS_CD = N'Active' " 
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC


;---------------------------------------------------------------------------------------------------------------------------
; This section looks up for periods. [UPDATE BU-based PERIODs] overides Default organization-based period with the organization-based period if the latter exists

[UPDATE PERIODs]
	SESSION SQL= "UPDATE EIM_SRC SET EIM_SRC.PERIOD_BU = P2.NAME, EIM_SRC.PERIOD_NAME = P1.NAME FROM EIM_SRC INNER JOIN S_PERIOD P1 ON P1.START_DT = EIM_SRC.PROG_START_DT AND P1.END_DT = EIM_SRC.PROG_END_DT INNER JOIN S_BU P2 ON P2.ROW_ID = P1.BU_ID WHERE EIM_SRC.IF_ROW_BATCH_NUM BETWEEN 4400000 AND 4404000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC



[UPDATE BU-based PERIODs]
	SESSION SQL= "UPDATE EIM_SRC SET EIM_SRC.PERIOD_BU = P2.NAME, EIM_SRC.PERIOD_NAME = P1.NAME FROM EIM_SRC INNER JOIN S_PERIOD P1 ON P1.START_DT = EIM_SRC.PROG_START_DT AND P1.END_DT = EIM_SRC.PROG_END_DT INNER JOIN S_BU P2 ON P2.ROW_ID = P1.BU_ID WHERE EIM_SRC.IF_ROW_BATCH_NUM BETWEEN 4400000 AND 4404000 AND P2.NAME = EIM_SRC.ORG_BU"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC



;---------------------------------------------------------------------------------------------------------------------------
; This section segments the created records into batches (for transaction logging purposes)

; Segment batches for created Bundle products records

[SEGMENT BUNDLE_PRODS_EIM_SRC]
	SESSION SQL= "UPDATE EIM_SRC SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4400000) WHERE IF_ROW_BATCH_NUM = 4400000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC

[SEGMENT BUNDLE_PRODS_EIM_SRC2]
	SESSION SQL= "UPDATE EIM_SRC2 SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC2(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4400000) WHERE IF_ROW_BATCH_NUM = 4400000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC2

[SEGMENT BUNDLE_PRODS_EIM_SRC3]
	SESSION SQL= "UPDATE EIM_SRC3 SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC3(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4400000) WHERE IF_ROW_BATCH_NUM = 4400000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC3



; Segment batches for created Promotional Item/Merchandising Material records

[SEGMENT GIFT_PRODS_EIM_SRC]
	SESSION SQL= "UPDATE EIM_SRC SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4404000) WHERE IF_ROW_BATCH_NUM = 4404000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC

[SEGMENT GIFT_PRODS_EIM_SRC2]
	SESSION SQL= "UPDATE EIM_SRC2 SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC2(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4404000) WHERE IF_ROW_BATCH_NUM = 4404000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC2

[SEGMENT GIFT_PRODS_EIM_SRC3]
	SESSION SQL= "UPDATE EIM_SRC3 SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC3(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4404000) WHERE IF_ROW_BATCH_NUM = 4404000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC3



; Segment batches for created Promoted Product records

[SEGMENT PROMO_PRODS_EIM_SRC]
	SESSION SQL= "UPDATE EIM_SRC SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4403000) WHERE IF_ROW_BATCH_NUM = 4403000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC

[SEGMENT PROMO_PRODS_EIM_SRC2]
	SESSION SQL= "UPDATE EIM_SRC2 SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC2(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4403000) WHERE IF_ROW_BATCH_NUM = 4403000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC2

[SEGMENT PROMO_PRODS_EIM_SRC3]
	SESSION SQL= "UPDATE EIM_SRC3 SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC3(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4403000) WHERE IF_ROW_BATCH_NUM = 4403000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC3



; Segment batches for created Promotions records

[SEGMENT PROMO_ACCOUNTS_SRC]
	SESSION SQL= "UPDATE EIM_SRC SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4402000) WHERE IF_ROW_BATCH_NUM = 4402000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC

[SEGMENT PROMO_ACCOUNTS_SRC2]
	SESSION SQL= "UPDATE EIM_SRC2 SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC2(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4402000) WHERE IF_ROW_BATCH_NUM = 4402000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC2

[SEGMENT PROMO_ACCOUNTS_SRC3]
	SESSION SQL= "UPDATE EIM_SRC3 SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC3(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4402000) WHERE IF_ROW_BATCH_NUM = 4402000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC3



; Segment batches for created Promotion Programs records

[SEGMENT PROMOTIONS_SRC]
	SESSION SQL= "UPDATE EIM_SRC SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4401000) WHERE IF_ROW_BATCH_NUM = 4401000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC

[SEGMENT PROMOTIONS_SRC2]
	SESSION SQL= "UPDATE EIM_SRC2 SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC2(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4401000) WHERE IF_ROW_BATCH_NUM = 4401000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC2

[SEGMENT PROMOTIONS_SRC3]
	SESSION SQL= "UPDATE EIM_SRC3 SET IF_ROW_BATCH_NUM = IF_ROW_BATCH_NUM + FLOOR(MS_IDENT/1000) - (SELECT FLOOR(MIN(MS_IDENT)/1000) FROM  EIM_SRC3(NOLOCK) WHERE IF_ROW_BATCH_NUM = 4401000) WHERE IF_ROW_BATCH_NUM = 4401000"
	TYPE = IMPORT
	BATCH NUMBER = 7100;dummy
	TABLE = EIM_SRC3



