PRINT '*** STARTING JUN21 OLAP DB SCRIPT COMPILATION ***'
GO

PRINT '* UAT-0 COLUMN 1 *'
GO
 
/*WC_BUDGET_CAL_FS*/
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WC_BUDGET_CAL_FS' AND COLUMN_NAME = 'X_BUDGET_CONTRACTED2_AMT')
BEGIN
   ALTER TABLE WC_BUDGET_CAL_FS ADD [X_BUDGET_CONTRACTED2_AMT] numeric (22,7) NULL
END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WC_BUDGET_CAL_FS' AND COLUMN_NAME = 'X_BUDGET_CONTRACTED_TOTAL_AMT')
BEGIN
   ALTER TABLE WC_BUDGET_CAL_FS ADD [X_BUDGET_CONTRACTED_TOTAL_AMT] numeric (22,7) NULL
END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WC_BUDGET_CAL_FS' AND COLUMN_NAME = 'X_BUDGET_AVAIL_AMT_CONTRACTED2')
BEGIN
   ALTER TABLE WC_BUDGET_CAL_FS ADD [X_BUDGET_AVAIL_AMT_CONTRACTED2] numeric (22,7) NULL
END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WC_BUDGET_CAL_FS' AND COLUMN_NAME = 'X_BUDGET_AVAIL_AMT_CONTRACTED_TOTAL')
BEGIN
   ALTER TABLE WC_BUDGET_CAL_FS ADD [X_BUDGET_AVAIL_AMT_CONTRACTED_TOTAL] numeric (22,7) NULL
END
GO

/*WC_FUND_F*/
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WC_FUND_F' AND COLUMN_NAME = 'X_BUDGET_CONTRACTED2_AMT')
BEGIN
   ALTER TABLE WC_FUND_F ADD [X_BUDGET_CONTRACTED2_AMT] numeric (22,7) NULL
END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WC_FUND_F' AND COLUMN_NAME = 'X_BUDGET_CONTRACTED_TOTAL_AMT')
BEGIN
   ALTER TABLE WC_FUND_F ADD [X_BUDGET_CONTRACTED_TOTAL_AMT] numeric (22,7) NULL
END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WC_FUND_F' AND COLUMN_NAME = 'X_BUDGET_AVAIL_AMT_CONTRACTED2')
BEGIN
   ALTER TABLE WC_FUND_F ADD [X_BUDGET_AVAIL_AMT_CONTRACTED2] numeric (22,7) NULL
END
GO

PRINT '* UAT-0 COLUMN 2 *'
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WC_FUND_F' AND COLUMN_NAME = 'X_BUDGET_AVAIL_AMT_CONTRACTED_TOTAL')
BEGIN
   ALTER TABLE WC_FUND_F ADD [X_BUDGET_AVAIL_AMT_CONTRACTED_TOTAL] numeric (22,7) NULL
END
GO
 
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDERITEM_F'
			AND COLUMN_NAME = 'RETURN_PRICE'
		)
BEGIN
	ALTER TABLE WC_ORDERITEM_F ADD RETURN_PRICE NUMERIC(22, 7)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDERITEM_F'
			AND COLUMN_NAME = 'TOTAL_RETURN_PRICE'
		)
BEGIN
	ALTER TABLE WC_ORDERITEM_F ADD TOTAL_RETURN_PRICE NUMERIC(22, 7)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDERITEM_FS'
			AND COLUMN_NAME = 'RETURN_PRICE'
		)
BEGIN
	ALTER TABLE WC_ORDERITEM_FS ADD RETURN_PRICE NUMERIC(22, 7)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDERITEM_FS'
			AND COLUMN_NAME = 'TOTAL_RETURN_PRICE'
		)
BEGIN
	ALTER TABLE WC_ORDERITEM_FS ADD TOTAL_RETURN_PRICE NUMERIC(22, 7)
END
	GO


	IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'MERGE_WC_ORDERITEM_F'
			AND COLUMN_NAME = 'RETURN_PRICE'
		)
BEGIN
	ALTER TABLE MERGE_WC_ORDERITEM_F ADD RETURN_PRICE NUMERIC(22, 7)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'MERGE_WC_ORDERITEM_F'
			AND COLUMN_NAME = 'TOTAL_RETURN_PRICE'
		)
BEGIN
	ALTER TABLE MERGE_WC_ORDERITEM_F ADD TOTAL_RETURN_PRICE NUMERIC(22, 7)
END
	GO
 
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDERITEM_F'
			AND COLUMN_NAME = 'X_INV_DISCOUNT_AMT'
		)
BEGIN
	ALTER TABLE WC_ORDERITEM_F ADD X_INV_DISCOUNT_AMT NUMERIC(22, 7)
END
	GO
PRINT '* UAT-0 COLUMN 3 *'
GO
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDERITEM_F'
			AND COLUMN_NAME = 'X_DISCOUNT_CARD_NUM'
		)
BEGIN
	ALTER TABLE WC_ORDERITEM_F ADD X_DISCOUNT_CARD_NUM NUMERIC(22, 7)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDERITEM_FS'
			AND COLUMN_NAME = 'X_INV_DISCOUNT_AMT'
		)
BEGIN
	ALTER TABLE WC_ORDERITEM_FS ADD X_INV_DISCOUNT_AMT NUMERIC(22, 7)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDERITEM_FS'
			AND COLUMN_NAME = 'X_DISCOUNT_CARD_NUM'
		)
BEGIN
	ALTER TABLE WC_ORDERITEM_FS ADD X_DISCOUNT_CARD_NUM NUMERIC(22, 7)
END
	GO


	IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'MERGE_WC_ORDERITEM_F'
			AND COLUMN_NAME = 'X_INV_DISCOUNT_AMT'
		)
BEGIN
	ALTER TABLE MERGE_WC_ORDERITEM_F ADD X_INV_DISCOUNT_AMT NUMERIC(22, 7)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'MERGE_WC_ORDERITEM_F'
			AND COLUMN_NAME = 'X_DISCOUNT_CARD_NUM'
		)
BEGIN
	ALTER TABLE MERGE_WC_ORDERITEM_F ADD X_DISCOUNT_CARD_NUM NUMERIC(22, 7)
END
	GO
 
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'MERGE_WC_ORG_D' AND COLUMN_NAME = 'X_SUSPEND_ORDERS_FLG')
BEGIN
   ALTER TABLE MERGE_WC_ORG_D ADD [X_SUSPEND_ORDERS_FLG] NVARCHAR(1) NULL DEFAULT ('N')
END
GO
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'WC_ORG_D' AND COLUMN_NAME = 'X_SUSPEND_ORDERS_FLG')
BEGIN
   ALTER TABLE WC_ORG_D ADD [X_SUSPEND_ORDERS_FLG] NVARCHAR(1) NULL DEFAULT ('N')
END
GO
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'WC_ORG_DS' AND COLUMN_NAME = 'X_SUSPEND_ORDERS_FLG')
BEGIN
   ALTER TABLE WC_ORG_DS ADD [X_SUSPEND_ORDERS_FLG] NVARCHAR(1) NULL DEFAULT ('N')
END
GO
 
--Account
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORG_DS'
			AND COLUMN_NAME = 'X_EMAIL_ACCEPT_CD'
		)
BEGIN
	ALTER TABLE WC_ORG_DS ADD X_EMAIL_ACCEPT_CD NVARCHAR(30)
END
	GO

PRINT '* UAT-0 COLUMN 4 *'
GO
	
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORG_D'
			AND COLUMN_NAME = 'X_EMAIL_ACCEPT_CD'
		)
BEGIN
	ALTER TABLE WC_ORG_D ADD X_EMAIL_ACCEPT_CD NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'MERGE_WC_ORG_D'
			AND COLUMN_NAME = 'X_EMAIL_ACCEPT_CD'
		)
BEGIN
	ALTER TABLE MERGE_WC_ORG_D ADD X_EMAIL_ACCEPT_CD NVARCHAR(30)
END
	GO
	
--Contact
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_PERSON_DS'
			AND COLUMN_NAME = 'X_BUSINESS_OWNER_ID'
		)
BEGIN
	ALTER TABLE WC_PERSON_DS ADD X_BUSINESS_OWNER_ID NVARCHAR(15)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_PERSON_DS'
			AND COLUMN_NAME = 'EMAIL_ADDRESS'
		)
BEGIN
	ALTER TABLE WC_PERSON_DS ADD EMAIL_ADDRESS NVARCHAR(350)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_PERSON_D'
			AND COLUMN_NAME = 'X_BUSINESS_OWNER_ID'
		)
BEGIN
	ALTER TABLE WC_PERSON_D ADD X_BUSINESS_OWNER_ID NVARCHAR(15)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_PERSON_D'
			AND COLUMN_NAME = 'EMAIL_ADDRESS'
		)
BEGIN
	ALTER TABLE WC_PERSON_D ADD EMAIL_ADDRESS NVARCHAR(350)
END
	GO

--Order
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_DS'
			AND COLUMN_NAME = 'X_EXPORT_STATUS'
		)
BEGIN
	ALTER TABLE WC_ORDER_DS ADD X_EXPORT_STATUS NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_DS'
			AND COLUMN_NAME = 'X_EMAIL_FLG'
		)
BEGIN
	ALTER TABLE WC_ORDER_DS ADD X_EMAIL_FLG CHAR(1)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_DS'
			AND COLUMN_NAME = 'X_EMAIL_ACCEPT_CD'
		)
BEGIN
	ALTER TABLE WC_ORDER_DS ADD X_EMAIL_ACCEPT_CD NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_DS'
			AND COLUMN_NAME = 'X_EMAIL_ADDR_TXT'
		)
BEGIN
	ALTER TABLE WC_ORDER_DS ADD X_EMAIL_ADDR_TXT NVARCHAR(350)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_DS'
			AND COLUMN_NAME = 'X_RECIPIENT_CONTACT_ID'
		)
BEGIN
	ALTER TABLE WC_ORDER_DS ADD X_RECIPIENT_CONTACT_ID NVARCHAR(15)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_DS'
			AND COLUMN_NAME = 'X_DOC_TYPE_CD'
		)
BEGIN
	ALTER TABLE WC_ORDER_DS ADD X_DOC_TYPE_CD NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_D'
			AND COLUMN_NAME = 'X_EXPORT_STATUS'
		)
BEGIN
	ALTER TABLE WC_ORDER_D ADD X_EXPORT_STATUS NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_D'
			AND COLUMN_NAME = 'X_EMAIL_FLG'
		)
BEGIN
	ALTER TABLE WC_ORDER_D ADD X_EMAIL_FLG CHAR(1)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_D'
			AND COLUMN_NAME = 'X_EMAIL_ACCEPT_CD'
		)
BEGIN
	ALTER TABLE WC_ORDER_D ADD X_EMAIL_ACCEPT_CD NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_D'
			AND COLUMN_NAME = 'X_EMAIL_ADDR_TXT'
		)
BEGIN
	ALTER TABLE WC_ORDER_D ADD X_EMAIL_ADDR_TXT NVARCHAR(350)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_D'
			AND COLUMN_NAME = 'X_RECIPIENT_CONTACT_ID'
		)
BEGIN
	ALTER TABLE WC_ORDER_D ADD X_RECIPIENT_CONTACT_ID NVARCHAR(15)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ORDER_D'
			AND COLUMN_NAME = 'X_DOC_TYPE_CD'
		)
BEGIN
	ALTER TABLE WC_ORDER_D ADD X_DOC_TYPE_CD NVARCHAR(30)
END
	GO

	PRINT '* UAT-0 COLUMN 5 *'
GO
--Activity
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ACTIVITY_FS'
			AND COLUMN_NAME = 'X_DOC_TYPE_CD'
		)
BEGIN
	ALTER TABLE WC_ACTIVITY_FS ADD X_DOC_TYPE_CD NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ACTIVITY_FS'
			AND COLUMN_NAME = 'X_MESSAGE_STATUS'
		)
BEGIN
	ALTER TABLE WC_ACTIVITY_FS ADD X_MESSAGE_STATUS NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ACTIVITY_FS'
			AND COLUMN_NAME = 'X_RECIPIENT_ID'
		)
BEGIN
	ALTER TABLE WC_ACTIVITY_FS ADD X_RECIPIENT_ID NVARCHAR(15)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ACTIVITY_F'
			AND COLUMN_NAME = 'X_DOC_TYPE_CD'
		)
BEGIN
	ALTER TABLE WC_ACTIVITY_F ADD X_DOC_TYPE_CD NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ACTIVITY_F'
			AND COLUMN_NAME = 'X_MESSAGE_STATUS'
		)
BEGIN
	ALTER TABLE WC_ACTIVITY_F ADD X_MESSAGE_STATUS NVARCHAR(30)
END
	GO
PRINT '* UAT-0 COLUMN 6 *'
GO
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_ACTIVITY_F'
			AND COLUMN_NAME = 'X_RECIPIENT_ID'
		)
BEGIN
	ALTER TABLE WC_ACTIVITY_F ADD X_RECIPIENT_ID NVARCHAR(15)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'MERGE_WC_ACTIVITY_F'
			AND COLUMN_NAME = 'X_DOC_TYPE_CD'
		)
BEGIN
	ALTER TABLE MERGE_WC_ACTIVITY_F ADD X_DOC_TYPE_CD NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'MERGE_WC_ACTIVITY_F'
			AND COLUMN_NAME = 'X_MESSAGE_STATUS'
		)
BEGIN
	ALTER TABLE MERGE_WC_ACTIVITY_F ADD X_MESSAGE_STATUS NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'MERGE_WC_ACTIVITY_F'
			AND COLUMN_NAME = 'X_RECIPIENT_ID'
		)
BEGIN
	ALTER TABLE MERGE_WC_ACTIVITY_F ADD X_RECIPIENT_ID NVARCHAR(15)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_LAST_ACTIVITY_F'
			AND COLUMN_NAME = 'X_DOC_TYPE_CD'
		)
BEGIN
	ALTER TABLE WC_LAST_ACTIVITY_F ADD X_DOC_TYPE_CD NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_LAST_ACTIVITY_F'
			AND COLUMN_NAME = 'X_MESSAGE_STATUS'
		)
BEGIN
	ALTER TABLE WC_LAST_ACTIVITY_F ADD X_MESSAGE_STATUS NVARCHAR(30)
END
	GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WC_LAST_ACTIVITY_F'
			AND COLUMN_NAME = 'X_RECIPIENT_ID'
		)
BEGIN
	ALTER TABLE WC_LAST_ACTIVITY_F ADD X_RECIPIENT_ID NVARCHAR(15)
END
	GO

PRINT '* UAT-0 VIEW 1 *'
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WCV_OLAP_SALES_DISTRIBUTION_US]'))
DROP VIEW [dbo].[WCV_OLAP_SALES_DISTRIBUTION_US]
GO

IF ((SELECT DB_NAME()) LIKE 'SIEBEL_OLAP_%_EU3%')
BEGIN 

IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WCV_OLAP_SALES_DISTRIBUTION_US]'))
EXEC dbo.sp_executesql @statement = N'
CREATE VIEW [dbo].[WCV_OLAP_SALES_DISTRIBUTION_US] AS 

/*
Version:1.0
Description:Sales distribution view
Release Date: Oct 2019
Modification date: 16/01/2019
Process ID: CHG153823 
Development Team: MRU Data  
Author:Vikram

Version:2.0
Description:Sales distribution view
Release Date: JUn 2021
Modification date: 10-Feb-21
Process ID: CHG200786 
Development Team: MRU Data  
Author:Vikram


*/

select VIS_PR_BU_WID,ACCNT_ID,PROD_ID,X_SALES_DISTRIB_NUM
from 
(
select VIS_PR_BU_WID,ACCNT_ID,PROD_ID,X_SALES_DISTRIB_NUM,row_number() over (partition by VIS_PR_BU_WID,ACCNT_ID,PROD_ID order by X_SALES_DISTRIB_NUM) as RN
from (
SELECT D.VIS_PR_BU_WID as VIS_PR_BU_WID,
D.INTEGRATION_ID AS ACCNT_ID,
PD.INTEGRATION_ID AS PROD_ID, 
CASE WHEN SUM(F.ACTL_SHIPMENT_QTY) > 0 THEN 1 ELSE 0 END AS X_SALES_DISTRIB_NUM
FROM WC_SALES_F_US F (NOLOCK)
INNER JOIN WC_ORG_D D (NOLOCK) ON F.TGT_ACCNT_WID = D.ROW_WID
INNER JOIN W_PRODUCT_D PD (NOLOCK) ON PD.ROW_WID = F.PRODUCT_WID
INNER JOIN W_PRODUCT_DH PH (NOLOCK) ON PH.PROD_WID = PD.ROW_WID
INNER JOIN WC_DAY_D_US DY (NOLOCK) ON DY.ROW_WID = F.START_DT_WID
WHERE D.ACCNT_STATUS = N''Active'' and D.ACCNT_TYPE_CD = N''Store'' 
and (F."SALES_TYPE_WID" = 56000 or F."SALES_TYPE_WID" = 56001)
and D.ACCNT_TYPE_DECODE = 0
--and D.NAME = ''10000036''
and PH.MSG_PRODUCT_HIER = N''Product°''
and (PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (CIGARELLOS)'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (WATER TOBACCO)'') 
and (PD.TYPE_I_DECODE = 1 or PD.TYPE_I_DECODE = 2)
and {fn TimestampDiff(SQL_TSI_WEEK, convert( DATETIME , DY.CALENDAR_DATE ), convert(datetime, (SELECT max(convert( DATETIME , T56244."CALENDAR_DATE" )) AS MAX_SALES_DATE	FROM "WC_SALES_F_US" T59954, "WC_DAY_D_US" T56244	WHERE T56244."ROW_WID" = T59954."START_DT_WID" AND (T59954."SALES_TYPE_WID" = 56000 or T59954."SALES_TYPE_WID" = 56001)), 120))} between 0 and 6  
GROUP BY D.INTEGRATION_ID,PD.INTEGRATION_ID,D.VIS_PR_BU_WID 
HAVING SUM(F.ACTL_SHIPMENT_QTY) > 0
union
SELECT D.VIS_PR_BU_WID,
D.INTEGRATION_ID AS ACCNT_ID,
PD.INTEGRATION_ID AS PROD_ID,  
CASE WHEN SUM(F.ACTL_SHIPMENT_QTY) > 0 THEN 2 ELSE 0 END AS X_SALES_DISTRIB_NUM
FROM WC_SALES_F_US F (NOLOCK)
INNER JOIN WC_ORG_D D (NOLOCK) ON F.TGT_ACCNT_WID = D.ROW_WID
INNER JOIN W_PRODUCT_D PD (NOLOCK) ON PD.ROW_WID = F.PRODUCT_WID
INNER JOIN W_PRODUCT_DH PH (NOLOCK) ON PH.PROD_WID = PD.ROW_WID
INNER JOIN WC_DAY_D_US DY (NOLOCK) ON DY.ROW_WID = F.START_DT_WID
WHERE D.ACCNT_STATUS = N''Active'' and D.ACCNT_TYPE_CD = N''Store'' 
and (F."SALES_TYPE_WID" = 56000 or F."SALES_TYPE_WID" = 56001)
and D.ACCNT_TYPE_DECODE = 0
--and D.NAME = ''10000036''
and PH.MSG_PRODUCT_HIER = N''Product°''
and (PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (CIGARELLOS)'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (WATER TOBACCO)'') 
and (PD.TYPE_I_DECODE = 1 or PD.TYPE_I_DECODE = 2)
and {fn TimestampDiff(SQL_TSI_WEEK, convert( DATETIME , DY.CALENDAR_DATE ), convert(datetime, (SELECT max(convert( DATETIME , T56244."CALENDAR_DATE" )) AS MAX_SALES_DATE FROM "WC_SALES_F_US" T59954, "WC_DAY_D_US" T56244 WHERE T56244."ROW_WID" = T59954."START_DT_WID" AND (T59954."SALES_TYPE_WID" = 56000 or T59954."SALES_TYPE_WID" = 56001)), 120))} between 7 and 17
GROUP BY D.INTEGRATION_ID,PD.INTEGRATION_ID,D.VIS_PR_BU_WID 
HAVING SUM(F.ACTL_SHIPMENT_QTY) > 0
union
SELECT D.VIS_PR_BU_WID,
D.INTEGRATION_ID AS ACCNT_ID,
PD.INTEGRATION_ID AS PROD_ID, 
CASE WHEN SUM(F.ACTL_SHIPMENT_QTY) > 0 THEN 1 ELSE 0 END AS X_SALES_DISTRIB_NUM
FROM WC_SALES_F_US F (NOLOCK)
INNER JOIN WC_ORG_D D (NOLOCK) ON F.TGT_ACCNT_WID = D.ROW_WID
INNER JOIN W_PRODUCT_D PD (NOLOCK) ON PD.ROW_WID = F.PRODUCT_WID
INNER JOIN W_PRODUCT_DH PH (NOLOCK) ON PH.PROD_WID = PD.ROW_WID
INNER JOIN WC_DAY_D_US DY (NOLOCK) ON DY.ROW_WID = F.START_DT_WID
WHERE D.ACCNT_STATUS = N''Active'' and D.ACCNT_TYPE_CD = N''Store'' 
and (F."SALES_TYPE_WID" = 56018 or F."SALES_TYPE_WID" = 56019 or F."SALES_TYPE_WID" = 56020 or F."SALES_TYPE_WID" = 56021)
and D.ACCNT_TYPE_DECODE = 0
--and D.NAME = ''10000036''
and PH.MSG_PRODUCT_HIER = N''Product°''
and (PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (CIGARELLOS)'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (WATER TOBACCO)'') 
and (PD.TYPE_I_DECODE = 1 or PD.TYPE_I_DECODE = 2)
and {fn TimestampDiff(SQL_TSI_WEEK, convert( DATETIME , DY.CALENDAR_DATE ), convert(datetime, (SELECT max(convert( DATETIME , T56244."CALENDAR_DATE" )) AS MAX_SALES_DATE FROM "WC_SALES_F_US" T59954, "WC_DAY_D_US" T56244 WHERE T56244."ROW_WID" = T59954."START_DT_WID" AND (T59954."SALES_TYPE_WID" = 56018 or T59954."SALES_TYPE_WID" = 56019 or T59954."SALES_TYPE_WID" = 56020 or T59954."SALES_TYPE_WID" = 56021)), 120))} between 0 and 6
GROUP BY D.INTEGRATION_ID,PD.INTEGRATION_ID,D.VIS_PR_BU_WID 
HAVING SUM(F.ACTL_SHIPMENT_QTY) > 0
union
SELECT D.VIS_PR_BU_WID,
D.INTEGRATION_ID AS ACCNT_ID,
PD.INTEGRATION_ID AS PROD_ID, 
CASE WHEN SUM(F.ACTL_SHIPMENT_QTY) > 0 THEN 2 ELSE 0 END AS X_SALES_DISTRIB_NUM
FROM WC_SALES_F_US F (NOLOCK)
INNER JOIN WC_ORG_D D (NOLOCK) ON F.TGT_ACCNT_WID = D.ROW_WID
INNER JOIN W_PRODUCT_D PD (NOLOCK) ON PD.ROW_WID = F.PRODUCT_WID
INNER JOIN W_PRODUCT_DH PH (NOLOCK) ON PH.PROD_WID = PD.ROW_WID
INNER JOIN WC_DAY_D_US DY (NOLOCK) ON DY.ROW_WID = F.START_DT_WID
WHERE D.ACCNT_STATUS = N''Active'' and D.ACCNT_TYPE_CD = N''Store'' 
and (F."SALES_TYPE_WID" = 56018 or F."SALES_TYPE_WID" = 56019 or F."SALES_TYPE_WID" = 56020 or F."SALES_TYPE_WID" = 56021)
and D.ACCNT_TYPE_DECODE = 0
--and D.NAME = ''10000036''
and PH.MSG_PRODUCT_HIER = N''Product°''
and (PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (CIGARELLOS)'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (WATER TOBACCO)'') 
and (PD.TYPE_I_DECODE = 1 or PD.TYPE_I_DECODE = 2)
and {fn TimestampDiff(SQL_TSI_WEEK, convert( DATETIME , DY.CALENDAR_DATE ), convert(datetime, (SELECT max(convert( DATETIME , T56244."CALENDAR_DATE" )) AS MAX_SALES_DATE FROM "WC_SALES_F_US" T59954, "WC_DAY_D_US" T56244 WHERE T56244."ROW_WID" = T59954."START_DT_WID" AND (T59954."SALES_TYPE_WID" = 56018 or T59954."SALES_TYPE_WID" = 56019 or T59954."SALES_TYPE_WID" = 56020 or T59954."SALES_TYPE_WID" = 56021)), 120))} between 7 and 17
GROUP BY D.INTEGRATION_ID,PD.INTEGRATION_ID,D.VIS_PR_BU_WID 
HAVING SUM(F.ACTL_SHIPMENT_QTY) > 0
union
SELECT D.VIS_PR_BU_WID as VIS_PR_BU_WID,
D.INTEGRATION_ID AS ACCNT_ID,
PD.INTEGRATION_ID AS PROD_ID, 
CASE WHEN SUM(F.ACTL_SHIPMENT_QTY) > 0 THEN 1 ELSE 0 END AS X_SALES_DISTRIB_NUM
FROM WC_SALES_F_US F (NOLOCK)
INNER JOIN WC_ORG_D D (NOLOCK) ON F.TGT_ACCNT_WID = D.ROW_WID
INNER JOIN W_PRODUCT_D PD (NOLOCK) ON PD.ROW_WID = F.PRODUCT_WID
INNER JOIN W_PRODUCT_DH PH (NOLOCK) ON PH.PROD_WID = PD.ROW_WID
INNER JOIN WC_DAY_D_US DY (NOLOCK) ON DY.ROW_WID = F.START_DT_WID
WHERE D.ACCNT_STATUS = N''Active'' and D.ACCNT_TYPE_CD = N''Store'' 
and (F."SALES_TYPE_WID" = 56007 or F."SALES_TYPE_WID" = 56009 or F."SALES_TYPE_WID" = 56026 or F."SALES_TYPE_WID" = 56027)
and D.ACCNT_TYPE_DECODE = 0
--and D.NAME = ''10000036''
and PH.MSG_PRODUCT_HIER = N''Product°''
--and (PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (CIGARELLOS)'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (WATER TOBACCO)'') 
and (PD.ATTRIB_102 = N''JAPAN TOBACCO'' or PD.ATTRIB_102 = N''JAPAN TOBACCO (CIGARELLOS)'' or PD.ATTRIB_102 = N''JAPAN TOBACCO (WATER TOBACCO)'') 
and (PD.TYPE_I_DECODE = 1 or PD.TYPE_I_DECODE = 2)
and {fn TimestampDiff(SQL_TSI_WEEK, convert( DATETIME , DY.CALENDAR_DATE ), convert(datetime, (SELECT max(convert( DATETIME , T56244."CALENDAR_DATE" )) AS MAX_SALES_DATE FROM "WC_SALES_F_US" T59954, "WC_DAY_D_US" T56244 WHERE T56244."ROW_WID" = T59954."START_DT_WID" AND (T59954."SALES_TYPE_WID" = 56007 or T59954."SALES_TYPE_WID" = 56009 or T59954."SALES_TYPE_WID" = 56026 or T59954."SALES_TYPE_WID" = 56027)), 120))} between 0 and 12  
GROUP BY D.INTEGRATION_ID,PD.INTEGRATION_ID,D.VIS_PR_BU_WID 
HAVING SUM(F.ACTL_SHIPMENT_QTY) > 0
union
SELECT D.VIS_PR_BU_WID as VIS_PR_BU_WID,
D.INTEGRATION_ID AS ACCNT_ID,
PD.INTEGRATION_ID AS PROD_ID, 
CASE WHEN SUM(F.ACTL_SHIPMENT_QTY) > 0 THEN 2 ELSE 0 END AS X_SALES_DISTRIB_NUM
FROM WC_SALES_F_US F (NOLOCK)
INNER JOIN WC_ORG_D D (NOLOCK) ON F.TGT_ACCNT_WID = D.ROW_WID
INNER JOIN W_PRODUCT_D PD (NOLOCK) ON PD.ROW_WID = F.PRODUCT_WID
INNER JOIN W_PRODUCT_DH PH (NOLOCK) ON PH.PROD_WID = PD.ROW_WID
INNER JOIN WC_DAY_D_US DY (NOLOCK) ON DY.ROW_WID = F.START_DT_WID
WHERE D.ACCNT_STATUS = N''Active'' and D.ACCNT_TYPE_CD = N''Store'' 
and (F."SALES_TYPE_WID" = 56007 or F."SALES_TYPE_WID" = 56009 or F."SALES_TYPE_WID" = 56026 or F."SALES_TYPE_WID" = 56027)
and D.ACCNT_TYPE_DECODE = 0
--and D.NAME = ''10000036''
and PH.MSG_PRODUCT_HIER = N''Product°''
--and (PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (CIGARELLOS)'' or PH.LVL7ANC_PROD_NAME = N''JAPAN TOBACCO (WATER TOBACCO)'') 
and (PD.ATTRIB_102 = N''JAPAN TOBACCO'' or PD.ATTRIB_102 = N''JAPAN TOBACCO (CIGARELLOS)'' or PD.ATTRIB_102 = N''JAPAN TOBACCO (WATER TOBACCO)'') 
and (PD.TYPE_I_DECODE = 1 or PD.TYPE_I_DECODE = 2)
and {fn TimestampDiff(SQL_TSI_WEEK, convert( DATETIME , DY.CALENDAR_DATE ), convert(datetime, (SELECT max(convert( DATETIME , T56244."CALENDAR_DATE" )) AS MAX_SALES_DATE FROM "WC_SALES_F_US" T59954, "WC_DAY_D_US" T56244 WHERE T56244."ROW_WID" = T59954."START_DT_WID" AND (T59954."SALES_TYPE_WID" = 56007 or T59954."SALES_TYPE_WID" = 56009 or T59954."SALES_TYPE_WID" = 56026 or T59954."SALES_TYPE_WID" = 56027)), 120))} between 13 and 26
GROUP BY D.INTEGRATION_ID,PD.INTEGRATION_ID,D.VIS_PR_BU_WID 
HAVING SUM(F.ACTL_SHIPMENT_QTY) > 0
) as t
group by VIS_PR_BU_WID,ACCNT_ID,PROD_ID,X_SALES_DISTRIB_NUM
) as t2 
where RN = 1
--AND ACCNT_ID IN (SELECT INTEGRATION_ID FROM WC_ORG_D WHERE ATTRIB_93 LIKE ''%FOOD%JUNCTION%'' AND NAME = ''10000036'')'
END


GO
 
PRINT '* UAT-0 SP 1 *'
GO
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_sales_d_denorm_es]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sp_sales_d_denorm_es]
GO

CREATE	PROCEDURE [dbo].[sp_sales_d_denorm_es] @BU NVARCHAR(100)
AS
BEGIN
DECLARE	@COUNT1 INT
DECLARE	@ACTIVE NCHAR(1)
DECLARE	@FREQUENCY NVARCHAR(30)
DECLARE	@START_PERIOD NCHAR(8)
DECLARE	@END_PERIOD NCHAR(8)
DECLARE	@REPEATING_UNIT NCHAR
DECLARE	@LAST_REPEATING_DATE DateTime
DECLARE @REPEATING_NUMBER INT ,@DELTA_DENORM NCHAR(1)

/*
[20200708]RM:  Resolve PROD_VENDOR_LOC and PROD_VENDOR_NAME in all insert statements when missing as per INC3321133
*/
/*				
Executing stored proc sp_INSERT_WC_SP_DECOMMISION to populate table WC_SP_DECOMMISION 				
in the context of EXADATA project to indicate whether the stored proc has been run				
*/				
-- Added by Hursha				
-- Begin				
				
DECLARE 				
		  @SP_NAME	  NVARCHAR(100),	
		  @DATE_OF_EXECUTION	  DATETIME	
				
SET 				
		  @SP_NAME = 'sp_sales_d_denorm_es'; -- name of stored proc being executed		
				
EXEC sp_INSERT_WC_SP_DECOMMISION @SP_NAME,				
				 @DATE_OF_EXECUTION;
-- End				


--Validate Param
SELECT @COUNT1 = COUNT(1)
FROM WC_SALES_DENORM_PARAM (NOLOCK)
WHERE DENORM_TABLE = 'WC_SALES_D_DENORM_EIM_ES'

IF @COUNT1 = 0 
BEGIN
	PRINT('There is no parameter for WC_SALES_D_DENORM_EIM_ES denormalization')
	RETURN 1
END

IF @COUNT1 > 1 
BEGIN
	PRINT('There is more that one parameter for WC_SALES_D_DENORM_EIM_ES denormalization')
	RETURN 1
END


--Get Param
SELECT 	@ACTIVE=ACTIVE,
	@FREQUENCY=FREQUENCY,
	@START_PERIOD=START_PERIOD,
	@END_PERIOD=END_PERIOD,
	@REPEATING_UNIT=REPEATING_UNIT,
	@REPEATING_NUMBER=REPEATING_NUMBER,
	@LAST_REPEATING_DATE=LAST_REPEATING_DATE
FROM WC_SALES_DENORM_PARAM (NOLOCK)
WHERE DENORM_TABLE = 'WC_SALES_D_DENORM_EIM_ES'

PRINT @ACTIVE
PRINT @FREQUENCY
PRINT @START_PERIOD
PRINT @END_PERIOD
PRINT @REPEATING_UNIT
PRINT @LAST_REPEATING_DATE


IF @ACTIVE = 'N' 
BEGIN
	PRINT('WC_SALES_D_DENORM_EIM_ES denormalization not active')
	RETURN 0
END

--TRUNCATE TEMP TABLE
TRUNCATE TABLE WC_SALES_D_DENORM_EIM_ES  

PRINT 'Executing for WC_SALES_D_DENORM_EIM_ES'

--If Frequency is one time
IF @FREQUENCY = 'O'
BEGIN
	IF LEN(@START_PERIOD) <> 8 OR @START_PERIOD IS NULL
	BEGIN
		PRINT('Incorrect parameter for Start Period of WC_SALES_D_DENORM_EIM_ES denormalization. It should be YYYYMMDD')
		RETURN 1
	END
	
	IF LEN(@END_PERIOD) <> 8 OR @END_PERIOD IS NULL
	BEGIN
		PRINT('Incorrect parameter for End Period of WC_SALES_D_DENORM_EIM_ES denormalization. It should be YYYYMMDD')
		RETURN 1
	END
END
--If stored proc is called on a daily basis but for 62 (agreed initially) days denorm and thus calculate the start/end date of the daily sales denorm
IF @FREQUENCY = 'D'
BEGIN
	--validate the repeating number column =>which represents the number of day that the denorm should be run
	IF @REPEATING_NUMBER IS NULL OR @REPEATING_NUMBER < 0
	BEGIN
		PRINT('Incorrect parameter for Repeating Number of WC_SALES_D_DENORM_EIM_ES denormalization.It should be +ve number')
		RETURN 1
	END

	--run for last 62  from REPEATING_NUMBER column
	SET @START_PERIOD = CONVERT(NCHAR(8), DATEADD(day,-1*@REPEATING_NUMBER,getdate()), 112) 
	SET @END_PERIOD = CONVERT(NCHAR(8), getdate(), 112)
	--Update to the first run
	UPDATE WC_SALES_DENORM_PARAM
	SET 	START_PERIOD = @START_PERIOD,
		END_PERIOD = @END_PERIOD,
		LAST_REPEATING_DATE = GETDATE()
	WHERE DENORM_TABLE = 'WC_SALES_D_DENORM_EIM_ES'		


END

--If frequency is daily where what is being loaded on the day is being denorm and thus calculate if time has come to run the denorm
IF @FREQUENCY = 'R'
BEGIN
	--validate the repeating unit
	IF @REPEATING_UNIT IS NULL OR @REPEATING_UNIT <> 'Day'
	BEGIN
		PRINT('Incorrect parameter for Repeating Unit of WC_SALES_D_DENORM_EIM_ES denormalization. It should be Month')
		RETURN 1
	END

	--If last run date is not null, calculate the periods
	IF @LAST_REPEATING_DATE IS NOT NULL
	BEGIN
		SET @START_PERIOD = CONVERT(NCHAR(8), @LAST_REPEATING_DATE, 112) 
		SET @END_PERIOD = CONVERT(NCHAR(8), getdate(), 112)
	END

	--set start period the last run month and end period the current period
	IF @LAST_REPEATING_DATE IS NULL
	BEGIN
		--run for current month
		SET @START_PERIOD = CONVERT(NCHAR(8), getdate(), 112) 
		SET @END_PERIOD = @START_PERIOD
		--Update to the first run
		UPDATE WC_SALES_DENORM_PARAM
		SET LAST_REPEATING_DATE = GETDATE()
		WHERE DENORM_TABLE = 'WC_SALES_D_DENORM_EIM_ES'		
	END

	--if run period has not been reached yet, no run
	IF CONVERT(NCHAR(8), DATEADD(Day, @REPEATING_NUMBER, @LAST_REPEATING_DATE), 112) < CONVERT(NCHAR(8), getdate(), 112)
	BEGIN
		PRINT('WC_SALES_D_DENORM_EIM_ES denormalization will not be run. Frequency round not reached yet')
		RETURN 1
	END
	ELSE IF CONVERT(NCHAR(8), DATEADD(Day, @REPEATING_NUMBER, @LAST_REPEATING_DATE), 112) > CONVERT(NCHAR(8), getdate(), 112)
	BEGIN
		PRINT('Need to run for what was missed')
		SET @END_PERIOD = CONVERT(NCHAR(8), getdate(), 112)
	END
END
	--perform the denorm for daily normal products
	INSERT INTO WC_SALES_D_DENORM_EIM_ES
	(
	PERIOD_NAME,
	SALES_TYPE,
	ACCNT_LOC,
	ACCNT_NAME,
	PROD_NAME,
	PROD_VENDOR_LOC,
	PROD_VENDOR_NAME,
	ACTL_SHIPMENT_QTY_CASES,
	ACTL_SHIPMENT_QTY
	)
	SELECT 
		P.NAME PERIOD_NAME,
		'Outlet Sales' SALES_TYPE,
		ORG.ACCNT_LOC ACCNT_LOC,
		ORG.NAME ACCNT_NAME,
		D.PROD_NAME PROD_NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,
		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,
		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY
	
		FROM WCV_SALES_F F WITH (NOLOCK)
		 INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)
		 INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)
		 INNER JOIN W_PERIOD_D P ON (F.START_DT_WID = CONVERT(NCHAR(8),START_DT,112) AND 
					     P.PERIOD_CD = 'Day' 
					     AND P.BU = 'Default Organization' 
				       	     AND CONVERT(NCHAR(8),START_DT,112) BETWEEN @START_PERIOD AND @END_PERIOD)
		 INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)
		 INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)
		 INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		 WHERE ST.INTEGRATION_ID IN ('DS_Tobacconists','MS_Blond')
		   AND F.COUNTRY_CODE = 'ES'
	
	GROUP BY 
		P.NAME,
		ORG.ACCNT_LOC,
		ORG.NAME,
		D.PROD_NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END
	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0
	
	--perform the denorm for sales org.The product and Sales Type have been harcoded.
	INSERT INTO WC_SALES_D_DENORM_EIM_ES
	(
	PERIOD_NAME,
	SALES_TYPE,
	ACCNT_LOC,
	ACCNT_NAME,
	PROD_NAME,
	PROD_VENDOR_LOC,
	PROD_VENDOR_NAME,
	ACTL_SHIPMENT_QTY_CASES,
	ACTL_SHIPMENT_QTY
	)
	SELECT 
		P.NAME PERIOD_NAME,
		'Total Sales Product Offline' SALES_TYPE,
		ORG.ACCNT_LOC ACCNT_LOC,
		ORG.NAME ACCNT_NAME,
		'RUBIOS_Product' PROD_NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,
		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,
		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY
	
		FROM WCV_SALES_F F WITH (NOLOCK)
		 INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)
		 INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)
		 INNER JOIN W_PERIOD_D P ON (F.START_DT_WID = CONVERT(NCHAR(8),START_DT,112) AND 
					     P.PERIOD_CD = 'Day' 
					     AND P.BU = 'Default Organization' 
				       	     AND CONVERT(NCHAR(8),START_DT,112) BETWEEN @START_PERIOD AND @END_PERIOD)
		 INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)
		 INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)
		 INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		 WHERE ST.UNIFIED_TYPE = 'TOTAL_SALES_PRODUCT_OFFLINE'
		   AND F.COUNTRY_CODE = 'ES'
	
	GROUP BY 
		P.NAME,
		ORG.ACCNT_LOC,
		ORG.NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END
	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0

/*Sales Type : 'DS_Virginia_Tobacconists' -- Added as per SR 786864*/
	INSERT INTO WC_SALES_D_DENORM_EIM_ES
	(
	PERIOD_NAME,
	SALES_TYPE,
	ACCNT_LOC,
	ACCNT_NAME,
	PROD_NAME,
	PROD_VENDOR_LOC,
	PROD_VENDOR_NAME,
	ACTL_SHIPMENT_QTY_CASES,
	ACTL_SHIPMENT_QTY
	)
	SELECT 
		P.NAME PERIOD_NAME,
		'Ventas Diarias Virg Estanco' SALES_TYPE,
		ORG.ACCNT_LOC ACCNT_LOC,
		ORG.NAME ACCNT_NAME,
		'VIRGINIA' PROD_NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,
		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,
		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY
	
		FROM WCV_SALES_F F WITH (NOLOCK)
		 INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)
		 INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)
	      INNER JOIN W_PERIOD_D P ON (F.START_DT_WID = CONVERT(NCHAR(8),START_DT,112) AND 
					     P.PERIOD_CD = 'Day' 
					     AND P.BU = 'Default Organization' 
				       	     AND CONVERT(NCHAR(8),START_DT,112) BETWEEN @START_PERIOD AND @END_PERIOD)
		 INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)
		 INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)
  	     INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		WHERE F.MONTH_WID BETWEEN @START_PERIOD and @END_PERIOD  
		AND ST.INTEGRATION_ID IN ('DS_Virginia_Tobacconists')
		 AND F.COUNTRY_CODE = 'ES'
	
	GROUP BY 
		P.NAME,
		ORG.ACCNT_LOC,
		ORG.NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END
	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0
	
	/*Sales Type : 'DS_American_Tobacconists'-- Added as per SR 786864*/
	INSERT INTO WC_SALES_D_DENORM_EIM_ES
	(
	PERIOD_NAME,
	SALES_TYPE,
	ACCNT_LOC,
	ACCNT_NAME,
	PROD_NAME,
	PROD_VENDOR_LOC,
	PROD_VENDOR_NAME,
	ACTL_SHIPMENT_QTY_CASES,
	ACTL_SHIPMENT_QTY
	)
	SELECT 
		P.NAME PERIOD_NAME,
		'Ventas Diarias Amer Estanco' SALES_TYPE,
		ORG.ACCNT_LOC ACCNT_LOC,
		ORG.NAME ACCNT_NAME,
		'AMERICAN' PROD_NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,
		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,
		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY
	
		FROM WCV_SALES_F F WITH (NOLOCK)
		 INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)
		 INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)
	      INNER JOIN W_PERIOD_D P ON (F.START_DT_WID = CONVERT(NCHAR(8),START_DT,112) AND 
					     P.PERIOD_CD = 'Day' 
					     AND P.BU = 'Default Organization' 
				       	     AND CONVERT(NCHAR(8),START_DT,112) BETWEEN @START_PERIOD AND @END_PERIOD)
  	    INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)
		INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)
		INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		WHERE F.MONTH_WID BETWEEN @START_PERIOD and @END_PERIOD  
		AND ST.INTEGRATION_ID IN ('DS_American_Tobacconists')
		 AND F.COUNTRY_CODE = 'ES'
	
	GROUP BY 
		P.NAME,
		ORG.ACCNT_LOC,
		ORG.NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END
	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0

	
	/*Sales Type : DS_RYO_Tobacconists -- Added as per SR 786864*/
	INSERT INTO WC_SALES_D_DENORM_EIM_ES
	(
	PERIOD_NAME,
	SALES_TYPE,
	ACCNT_LOC,
	ACCNT_NAME,
	PROD_NAME,
	PROD_VENDOR_LOC,
	PROD_VENDOR_NAME,
	ACTL_SHIPMENT_QTY_CASES,
	ACTL_SHIPMENT_QTY
	)
	SELECT 
		P.NAME PERIOD_NAME,
		'Ventas Diarias RYO Estanco' SALES_TYPE,
		ORG.ACCNT_LOC ACCNT_LOC,
		ORG.NAME ACCNT_NAME,
		'LIAR' PROD_NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,
		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,
		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY
	
		FROM WCV_SALES_F F WITH (NOLOCK)
		 INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)
		 INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)
	      INNER JOIN W_PERIOD_D P ON (F.START_DT_WID = CONVERT(NCHAR(8),START_DT,112) AND 
					     P.PERIOD_CD = 'Day' 
					     AND P.BU = 'Default Organization' 
				       	     AND CONVERT(NCHAR(8),START_DT,112) BETWEEN @START_PERIOD AND @END_PERIOD)
  	    INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)
		INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)
		INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		WHERE F.MONTH_WID BETWEEN @START_PERIOD and @END_PERIOD  
		AND ST.INTEGRATION_ID IN ('DS_RYO_Tobacconists')
		 AND F.COUNTRY_CODE = 'ES'
	
	GROUP BY 
		P.NAME,
		ORG.ACCNT_LOC,
		ORG.NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END
	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0
	
	/*Sales Type : DS_Black_Tobacconists*/
	INSERT INTO WC_SALES_D_DENORM_EIM_ES
	(
	PERIOD_NAME,
	SALES_TYPE,
	ACCNT_LOC,
	ACCNT_NAME,
	PROD_NAME,
	PROD_VENDOR_LOC,
	PROD_VENDOR_NAME,
	ACTL_SHIPMENT_QTY_CASES,
	ACTL_SHIPMENT_QTY
	)
	SELECT 
		P.NAME PERIOD_NAME,
		'Ventas Diarias Black Estanco' SALES_TYPE,
		ORG.ACCNT_LOC ACCNT_LOC,
		ORG.NAME ACCNT_NAME,
		'NEGROS' PROD_NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,
		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,
		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY
	
		FROM WCV_SALES_F F WITH (NOLOCK)
		 INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)
		 INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)
		 INNER JOIN W_PERIOD_D P ON (F.START_DT_WID = CONVERT(NCHAR(8),START_DT,112) AND 
					     P.PERIOD_CD = 'Day' 
					     AND P.BU = 'Default Organization' 
				       	 AND CONVERT(NCHAR(8),START_DT,112) BETWEEN @START_PERIOD AND @END_PERIOD)
		 INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)
		 INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)
		 INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		 WHERE ST.INTEGRATION_ID IN ('DS_Black_Tobacconists')
		 AND F.COUNTRY_CODE = 'ES'
	
	GROUP BY 
		P.NAME,
		ORG.ACCNT_LOC,
		ORG.NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END
	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0

	/*Sales Type : DS_CGR_Tobacconists_JTI*/
	INSERT INTO WC_SALES_D_DENORM_EIM_ES
	(
	PERIOD_NAME,
	SALES_TYPE,
	ACCNT_LOC,
	ACCNT_NAME,
	PROD_NAME,
	PROD_VENDOR_LOC,
	PROD_VENDOR_NAME,
	ACTL_SHIPMENT_QTY_CASES,
	ACTL_SHIPMENT_QTY
	)
	SELECT 
		P.NAME PERIOD_NAME,
		'Ventas Diarias CGR Estanco JTI' SALES_TYPE,
		ORG.ACCNT_LOC ACCNT_LOC,
		ORG.NAME ACCNT_NAME,
		'CIGARRITOS' PROD_NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,
		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,
		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY
	
		FROM WCV_SALES_F F WITH (NOLOCK)
		 INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)
		 INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)
		 INNER JOIN W_PERIOD_D P ON (F.START_DT_WID = CONVERT(NCHAR(8),START_DT,112) AND 
					     P.PERIOD_CD = 'Day' 
					     AND P.BU = 'Default Organization' 
				       	 AND CONVERT(NCHAR(8),START_DT,112) BETWEEN @START_PERIOD AND @END_PERIOD)
		 INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)
		 INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)
		 INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		 WHERE ST.INTEGRATION_ID IN ('DS_CGR_Tobacconists_JTI')
		 AND F.COUNTRY_CODE = 'ES'
	
	GROUP BY 
		P.NAME,
		ORG.ACCNT_LOC,
		ORG.NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END
	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0

	/*Sales Type : DS_RMC_Tobacconists*/
	INSERT INTO WC_SALES_D_DENORM_EIM_ES
	(
	PERIOD_NAME,
	SALES_TYPE,
	ACCNT_LOC,
	ACCNT_NAME,
	PROD_NAME,
	PROD_VENDOR_LOC,
	PROD_VENDOR_NAME,
	ACTL_SHIPMENT_QTY_CASES,
	ACTL_SHIPMENT_QTY
	)
	SELECT 
		P.NAME PERIOD_NAME,
		'Ventas Diarias RMC Estanco' SALES_TYPE,
		ORG.ACCNT_LOC ACCNT_LOC,
		ORG.NAME ACCNT_NAME,
		'RMC' PROD_NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,
		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,
		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY
	
		FROM WCV_SALES_F F WITH (NOLOCK)
		 INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)
		 INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)
		 INNER JOIN W_PERIOD_D P ON (F.START_DT_WID = CONVERT(NCHAR(8),START_DT,112) AND 
					     P.PERIOD_CD = 'Day' 
					     AND P.BU = 'Default Organization' 
				       	 AND CONVERT(NCHAR(8),START_DT,112) BETWEEN @START_PERIOD AND @END_PERIOD)
		 INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)
		 INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)
		 INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		 WHERE ST.INTEGRATION_ID IN ('DS_RMC_Tobacconists')
		 AND F.COUNTRY_CODE = 'ES'
	
	GROUP BY 
		P.NAME,
		ORG.ACCNT_LOC,
		ORG.NAME,
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,
		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END
	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0
END
GO

SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


PRINT '* UAT-0 SP 2 *'
GO

/******* Object:  StoredProcedure [dbo].[sp_sales_m_denorm_es]    Script Date: 12/22/2008 16:20:55 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_sales_m_denorm_es]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sp_sales_m_denorm_es]
/****** Object:  StoredProcedure [dbo].[sp_sales_m_denorm_es]    Script Date: 12/22/2008 08:06:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE	PROCEDURE [dbo].[sp_sales_m_denorm_es] @BU NVARCHAR(100)

AS

BEGIN



DECLARE	@COUNT1 INT

DECLARE	@ACTIVE NCHAR(1)

DECLARE	@FREQUENCY NVARCHAR(30)

DECLARE	@START_PERIOD NCHAR(8)

DECLARE	@END_PERIOD NCHAR(8)

DECLARE	@REPEATING_UNIT NCHAR

DECLARE	@LAST_REPEATING_DATE DateTime

DECLARE @REPEATING_NUMBER INT



/*

Executing stored proc sp_INSERT_WC_SP_DECOMMISION to populate table WC_SP_DECOMMISION 

in the context of EXADATA project to indicate whether the stored proc has been run
[20170602]AR:  Remove denorm delta as per INC1965831
[20200708]RM:  Resolve PROD_VENDOR_LOC and PROD_VENDOR_NAME in all insert statements when missing as per INC3321133
*/

-- Added by Hursha

-- Begin



DECLARE 

		  @SP_NAME		  NVARCHAR(100),

		  @DATE_OF_EXECUTION	  DATETIME



SET 

		  @SP_NAME = 'sp_sales_m_denorm_es'; -- name of stored proc being executed



EXEC sp_INSERT_WC_SP_DECOMMISION @SP_NAME,

				 @DATE_OF_EXECUTION;

-- End 




--[20170602]AR:  Comment denorm delta as per INC1965831
/*
IF (SELECT DELTA_DENORM FROM WC_SALES_DELTA_PARAM WHERE STORED_PROCEDURE='sp_sales_m_denorm_es')='Y'

BEGIN

		EXEC  sp_sales_m_denorm_es_delta 'Y';

		RETURN 0;

END
*/


PRINT('#######################sp_sales_m_denorm_es #########################')

--Validate Param

SELECT @COUNT1 = COUNT(1)

FROM WC_SALES_DENORM_PARAM (NOLOCK)

WHERE DENORM_TABLE = 'WC_SALES_M_DENORM_EIM_ES'



IF @COUNT1 = 0 

BEGIN

	PRINT('There is no parameter for WC_SALES_M_DENORM_EIM_ES denormalization')

	RETURN 1

END



IF @COUNT1 > 1 

BEGIN

	PRINT('There is more that one parameter for WC_SALES_M_DENORM_EIM_ES denormalization')

	RETURN 1

END





--Get Param

SELECT 	@ACTIVE=ACTIVE,

	@FREQUENCY=FREQUENCY,

	@START_PERIOD=START_PERIOD,

	@END_PERIOD=END_PERIOD,

	@REPEATING_UNIT=REPEATING_UNIT,

	@REPEATING_NUMBER=REPEATING_NUMBER,

	@LAST_REPEATING_DATE=LAST_REPEATING_DATE

FROM WC_SALES_DENORM_PARAM (NOLOCK)

WHERE DENORM_TABLE = 'WC_SALES_M_DENORM_EIM_ES'



PRINT @ACTIVE

PRINT @FREQUENCY

PRINT @START_PERIOD

PRINT @END_PERIOD

PRINT @REPEATING_UNIT

PRINT @LAST_REPEATING_DATE





IF @ACTIVE = 'N' 

BEGIN

	PRINT('WC_SALES_M_DENORM_EIM_ES denormalization not active')

	RETURN 0

END



--TRUNCATE TEMP TABLE

TRUNCATE TABLE WC_SALES_M_DENORM_EIM_ES  



PRINT 'Executing for WC_SALES_M_DENORM_EIM_ES'



--If Frequency is one time

IF @FREQUENCY = 'O'

BEGIN

	IF LEN(@START_PERIOD) <> 6 OR @START_PERIOD IS NULL

	BEGIN

		PRINT('Incorrect parameter for Start Period of WC_SALES_M_DENORM_EIM_ES denormalization. It should be YYYYMM')

		RETURN 1

	END

	

	IF LEN(@END_PERIOD) <> 6 OR @END_PERIOD IS NULL

	BEGIN

		PRINT('Incorrect parameter for End Period of WC_SALES_M_DENORM_EIM_ES denormalization. It should be YYYYMM')

		RETURN 1

	END

END



--If stored proc is called on a weekly basis and thus calculate the start/end month of the monly denorm

IF @FREQUENCY = 'W'

BEGIN

	--validate the repeating number column =>which represents the number of months that the denorm should be run

	IF @REPEATING_NUMBER IS NULL OR @REPEATING_NUMBER < 0

	BEGIN

		PRINT('Incorrect parameter for Repeating Number of WC_SALES_M_DENORM_EIM_ES denormalization. It should be Month')

		RETURN 1

	END



	--set start period the last run month and end period the current period

	IF @LAST_REPEATING_DATE IS NULL

	BEGIN

		--run for current month - @REPEATING_NUMBER

		SET @START_PERIOD = CONVERT(NCHAR(6), DATEADD(month,-1*@REPEATING_NUMBER,getdate()), 112) 

		SET @END_PERIOD = CONVERT(NCHAR(6), getdate(), 112)

		--Update to the first run

		UPDATE WC_SALES_DENORM_PARAM

		SET 	START_PERIOD = @START_PERIOD,

			END_PERIOD = @END_PERIOD,

			LAST_REPEATING_DATE = GETDATE()

		WHERE DENORM_TABLE = 'WC_SALES_M_DENORM_EIM_ES'		

	END

	ELSE

	BEGIN

		--run for last run month - @REPEATING_NUMBER

		SET @START_PERIOD = CONVERT(NCHAR(6), DATEADD(month,-1*@REPEATING_NUMBER,@LAST_REPEATING_DATE), 112) 

		SET @END_PERIOD = CONVERT(NCHAR(6), getdate(), 112)

		--Update to the first run

		UPDATE WC_SALES_DENORM_PARAM

		SET 	START_PERIOD = @START_PERIOD,

			END_PERIOD = @END_PERIOD,

			LAST_REPEATING_DATE = GETDATE()

		WHERE DENORM_TABLE = 'WC_SALES_M_DENORM_EIM_ES'		

	END



END



--If stored proc is called on a dialy basis and thus calculate if time has come to run the denorm

IF @FREQUENCY = 'D'

BEGIN

	--validate the repeating unit

	IF @REPEATING_UNIT IS NULL OR @REPEATING_UNIT <> 'Month'

	BEGIN

		PRINT('Incorrect parameter for Repeating Unit of WC_SALES_M_DENORM_EIM_ES denormalization. It should be Month')

		RETURN 1

	END



	--If last run date is not null, calculate the periods

	IF @LAST_REPEATING_DATE IS NOT NULL

	BEGIN

		SET @START_PERIOD = CONVERT(NCHAR(6), @LAST_REPEATING_DATE, 112) 

		SET @END_PERIOD = CONVERT(NCHAR(6), getdate(), 112)

	END



	--set start period the last run month and end period the current period

	IF @LAST_REPEATING_DATE IS NULL

	BEGIN

		--run for current month

		SET @START_PERIOD = CONVERT(NCHAR(6), getdate(), 112) 

		SET @END_PERIOD = @START_PERIOD

		--Update to the first run

		UPDATE WC_SALES_DENORM_PARAM

		SET LAST_REPEATING_DATE = GETDATE()

		WHERE DENORM_TABLE = 'WC_SALES_M_DENORM_EIM_ES'		

	END



	--if run period has not been reached yet, no run

	IF CONVERT(NCHAR(6), DATEADD(Month, @REPEATING_NUMBER, @LAST_REPEATING_DATE), 112) <> CONVERT(NCHAR(6), getdate(), 112)

	BEGIN

		PRINT('WC_SALES_M_DENORM_EIM_ES denormalization will not be run. Frequency round not reached yet')

		RETURN 1

	END

END



	--perform the denorm

	INSERT INTO WC_SALES_M_DENORM_EIM_ES

	(

	PERIOD_NAME,

	SALES_TYPE,

	ACCNT_LOC,

	ACCNT_NAME,

	PROD_NAME,

	PROD_VENDOR_LOC,

	PROD_VENDOR_NAME,

	ACTL_SHIPMENT_QTY_CASES,

	ACTL_SHIPMENT_QTY

	)

	SELECT 

		P.NAME PERIOD_NAME,

		'Outlet Sales' SALES_TYPE,

		ORG.ACCNT_LOC ACCNT_LOC,

		ORG.NAME ACCNT_NAME,

		D.PROD_NAME PROD_NAME,

		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,

		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,

		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY

	

		FROM WCV_SALES_M_A F WITH (NOLOCK)

		INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID)

		INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)



		INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)

		INNER JOIN W_PERIOD_D P ON (CONVERT(NCHAR(6),F.MONTH_WID)+'01' = CONVERT(NCHAR(8),P.START_DT,112) AND P.PERIOD_CD = 'Month' AND P.BU = 'Default Organization')

		INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)

		INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)

		WHERE F.MONTH_WID BETWEEN @START_PERIOD and @END_PERIOD  

		  AND ST.UNIFIED_TYPE = 'OUTLET_SALES'

		  AND BU.COUNTRY_NAME = 'Spain, ES'

	

	GROUP BY 

		P.NAME,

		ORG.ACCNT_LOC,

		ORG.NAME,

		D.PROD_NAME,

		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END

	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0

	

	--perform the denorm for sales org.The product and Sales Type have been harcoded.

	INSERT INTO WC_SALES_M_DENORM_EIM_ES

	(

	PERIOD_NAME,

	SALES_TYPE,

	ACCNT_LOC,

	ACCNT_NAME,

	PROD_NAME,
	
	PROD_VENDOR_LOC,

	PROD_VENDOR_NAME,

	ACTL_SHIPMENT_QTY_CASES,

	ACTL_SHIPMENT_QTY

	)

	SELECT 

		P.NAME PERIOD_NAME,

		'Total Sales Product Offline' SALES_TYPE,

		ORG.ACCNT_LOC ACCNT_LOC,

		ORG.NAME ACCNT_NAME,

		'RUBIOS_Product' PROD_NAME,
		
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,

		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,

		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY

	

		FROM WCV_SALES_M_A F WITH (NOLOCK)

		INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)

		INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)

		INNER JOIN W_PERIOD_D P ON (CONVERT(NCHAR(6),F.MONTH_WID)+'01' = CONVERT(NCHAR(8),P.START_DT,112) AND P.PERIOD_CD = 'Month' AND P.BU = 'Default Organization')
		
  	    INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		
		INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)

		INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)

		WHERE F.MONTH_WID BETWEEN @START_PERIOD and @END_PERIOD  

		AND ST.UNIFIED_TYPE = 'TOTAL_SALES_PRODUCT_OFFLINE'

		AND F.COUNTRY_CODE = 'ES'

	

	GROUP BY 

		P.NAME,

		ORG.ACCNT_LOC,

		ORG.NAME,
		
		D.PROD_NAME,

		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END

	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0

	

     /*Sales Type : 'DS_Virginia_Tobacconists'*/

	INSERT INTO WC_SALES_M_DENORM_EIM_ES

	(

	PERIOD_NAME,

	SALES_TYPE,

	ACCNT_LOC,

	ACCNT_NAME,

	PROD_NAME,
	
	PROD_VENDOR_LOC,

	PROD_VENDOR_NAME,

	ACTL_SHIPMENT_QTY_CASES,

	ACTL_SHIPMENT_QTY

	)

	SELECT 

		P.NAME PERIOD_NAME,

		'Ventas Diarias Virg Estanco' SALES_TYPE,

		ORG.ACCNT_LOC ACCNT_LOC,

		ORG.NAME ACCNT_NAME,

		'VIRGINIA' PROD_NAME,
		
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,

		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,

		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY

	

		FROM WCV_SALES_M_A F WITH (NOLOCK)

		INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)

		INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)

	    INNER JOIN W_PERIOD_D P ON (CONVERT(NCHAR(6),F.MONTH_WID)+'01' = CONVERT(NCHAR(8),P.START_DT,112) AND P.PERIOD_CD = 'Month' AND P.BU = 'Default Organization')

  	    INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		
		INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)

		INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)

		WHERE F.MONTH_WID BETWEEN @START_PERIOD and @END_PERIOD  

		AND ST.INTEGRATION_ID IN ('DS_Virginia_Tobacconists')

		 AND F.COUNTRY_CODE = 'ES'

	

	GROUP BY 

		P.NAME,

		ORG.ACCNT_LOC,

		ORG.NAME,
		
		D.PROD_NAME,

		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END

	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0

	

	/*Sales Type : 'DS_American_Tobacconists'*/

	INSERT INTO WC_SALES_M_DENORM_EIM_ES

	(

	PERIOD_NAME,

	SALES_TYPE,

	ACCNT_LOC,

	ACCNT_NAME,

	PROD_NAME,
	
	PROD_VENDOR_LOC,

	PROD_VENDOR_NAME,

	ACTL_SHIPMENT_QTY_CASES,

	ACTL_SHIPMENT_QTY

	)

	SELECT 

		P.NAME PERIOD_NAME,

		'Ventas Diarias Amer Estanco' SALES_TYPE,

		ORG.ACCNT_LOC ACCNT_LOC,

		ORG.NAME ACCNT_NAME,

		'AMERICAN' PROD_NAME,
		
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,

		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,

		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY

	

		FROM WCV_SALES_M_A F WITH (NOLOCK)

		INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)

		INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)

	    INNER JOIN W_PERIOD_D P ON (CONVERT(NCHAR(6),F.MONTH_WID)+'01' = CONVERT(NCHAR(8),P.START_DT,112) AND P.PERIOD_CD = 'Month' AND P.BU = 'Default Organization')

  	    INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		
		INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)

		INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)

		WHERE F.MONTH_WID BETWEEN @START_PERIOD and @END_PERIOD  

		AND ST.INTEGRATION_ID IN ('DS_American_Tobacconists')

		 AND F.COUNTRY_CODE = 'ES'

	

	GROUP BY 

		P.NAME,

		ORG.ACCNT_LOC,

		ORG.NAME,
		
		D.PROD_NAME,

		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END


	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0



	

	/*Sales Type : DS_RYO_Tobacconists*/

	INSERT INTO WC_SALES_M_DENORM_EIM_ES

	(

	PERIOD_NAME,

	SALES_TYPE,

	ACCNT_LOC,

	ACCNT_NAME,

	PROD_NAME,
	
	PROD_VENDOR_LOC,

	PROD_VENDOR_NAME,

	ACTL_SHIPMENT_QTY_CASES,

	ACTL_SHIPMENT_QTY

	)

	SELECT 

		P.NAME PERIOD_NAME,

		'Ventas Diarias RYO Estanco' SALES_TYPE,

		ORG.ACCNT_LOC ACCNT_LOC,

		ORG.NAME ACCNT_NAME,

		'LIAR' PROD_NAME,
		
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,

		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,

		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY

	

		FROM WCV_SALES_M_A F WITH (NOLOCK)

		INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)

		INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)

	    INNER JOIN W_PERIOD_D P ON (CONVERT(NCHAR(6),F.MONTH_WID)+'01' = CONVERT(NCHAR(8),P.START_DT,112) AND P.PERIOD_CD = 'Month' AND P.BU = 'Default Organization')

  	    INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		
		INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)

		INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)


		WHERE F.MONTH_WID BETWEEN @START_PERIOD and @END_PERIOD  

		AND ST.INTEGRATION_ID IN ('DS_RYO_Tobacconists')

		 AND F.COUNTRY_CODE = 'ES'

	

	GROUP BY 

		P.NAME,

		ORG.ACCNT_LOC,

		ORG.NAME,
		
		D.PROD_NAME,

		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END

	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0

	

	/*Sales Type : DS_Black_Tobacconists*/

	INSERT INTO WC_SALES_M_DENORM_EIM_ES

	(

	PERIOD_NAME,

	SALES_TYPE,

	ACCNT_LOC,

	ACCNT_NAME,

	PROD_NAME,
	
	PROD_VENDOR_LOC,

	PROD_VENDOR_NAME,

	ACTL_SHIPMENT_QTY_CASES,

	ACTL_SHIPMENT_QTY

	)

	SELECT 

		P.NAME PERIOD_NAME,

		'Ventas Diarias Black Estanco' SALES_TYPE,

		ORG.ACCNT_LOC ACCNT_LOC,

		ORG.NAME ACCNT_NAME,

		'BLACK' PROD_NAME,
		
		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END PROD_VENDOR_LOC,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END PROD_VENDOR_NAME,

		SUM(F.ACTL_SHIPMENT_QTY_C) ACTL_SHIPMENT_QTY_C,

		SUM(F.ACTL_SHIPMENT_QTY) ACTL_SHIPMENT_QTY

	

		FROM WCV_SALES_M_A F WITH (NOLOCK)

		INNER JOIN W_ORG_D ORG ON (ORG.ROW_WID = F.TGT_ACCNT_WID)

		INNER JOIN WC_BU_D BU ON (BU.INTEGRATION_ID = ORG.VIS_PR_BU_ID)

	    INNER JOIN W_PERIOD_D P ON (CONVERT(NCHAR(6),F.MONTH_WID)+'01' = CONVERT(NCHAR(8),P.START_DT,112) AND P.PERIOD_CD = 'Month' AND P.BU = 'Default Organization')

  	    INNER JOIN WC_SALES_TYPE_D ST ON (ST.ROW_WID = F.SALES_TYPE_WID AND ST.COUNTRY_CODE = F.COUNTRY_CODE)
		
		INNER JOIN W_PRODUCT_DH DH ON (F.PRODUCT_WID = DH.PROD_WID)

		INNER JOIN W_PRODUCT_D D ON (DH.LVL4ANC_PROD_ID = D.INTEGRATION_ID)

		WHERE F.MONTH_WID BETWEEN @START_PERIOD and @END_PERIOD  

		AND ST.INTEGRATION_ID IN ('DS_Black_Tobacconists')

		 AND F.COUNTRY_CODE = 'ES'

	

	GROUP BY 

		P.NAME,

		ORG.ACCNT_LOC,

		ORG.NAME,
		
		D.PROD_NAME,

		CASE D.VENDOR_LOC WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_LOC END,

		CASE D.VENDOR_NAME WHEN 'Unspecified' THEN NULL ELSE D.VENDOR_NAME END


	HAVING SUM(F.ACTL_SHIPMENT_QTY_C) <> 0 OR SUM(F.ACTL_SHIPMENT_QTY) <> 0

END


GO

PRINT '* UAT-0 SP 3 *'
GO
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_BIP_N_SHIPMENT_HIST_DENORM]') AND type in (N'P', N'PC'))
BEGIN
DROP PROCEDURE [dbo].[SP_BIP_N_SHIPMENT_HIST_DENORM];
END
GO


CREATE PROCEDURE [dbo].[SP_BIP_N_SHIPMENT_HIST_DENORM] AS
/*******************************************************************************
Name: SP_BIP_N_SHIPMENT_HIST_DENORM
Execution:   Session s_SP_BIP_N_SHIPMENT_HIST_DENORM in wrk_BIP_N_SHIPMENT_SALES_DENORM
Description:  This SP will load the different BIP tables required for easier reporting based on the MSAI Sales
	      Even if the process refers as MSAI only certain Sales Type are considered
	      The Load process is created on specific queries provided
Release Date: May 17
Process ID: CHG091434
Modification : Initial version (based mainly on SP SP_BIP_MSAI_US)
Development Team: MRU-DATA-INTERFACES
Author: Jonathan L'etourdi


Version History : 1.8

Version : 1.8
Release Date: June 21
Process ID: INC3361075
Modification : EXPORTA should have a space on the where condition.
Development Team: MRU-DATA-INTERFACES
Author: Misa Cyprienna

Version : 1.7
Release Date: Jul 20
Process ID: BUG 9920
Modification : Modify the calculation of the 6 new columns added from CHG176436.
Development Team: MRU-DATA-INTERFACES
Author: Misa Cyprienna

Version : 1.6
Release Date: Jul 20
Process ID: CHG176436
Modification : Modify the insert statement on the table WC_US_SHIPMENT_HIST_DENORM_F by adding the 6 new columns.
Development Team: MRU-DATA-INTERFACES
Author: Misa Cyprienna

Version : 1.5
Release Date: Jul 19
Process ID: CHG162222
Modification : Remove the filter "WHERE T1.ACCOUNT_CODE NOT LIKE '%000%'" for 'BIP_TOTALMANUFACTURERS' table in the denormalization process.
Development Team: MRU-DATA-INTERFACES
Author: Misa Cyprienna

Version : 1.4
Release Date: Jul 19
Process ID: CHG139409
Modification : Modify the calculation in Competitive volume 
Development Team: MRU-DATA-INTERFACES
Author: Misa Cyprienna/Anju

Version : 1.3
Release Date: Nov 17
Process ID: CHG116931
Modification : Include field X_CUSTOM_CYCLE_TEXT
Development Team: MRU-DATA-INTERFACES
Author: Vikram Seeburn


Version : 1.2
Release Date: May 17
Process ID: CHG091434 Def 839
Modification : Include BIP_COMPETITIVE_VOLUME_TOP5BRANDS_US table 
Development Team: MRU-DATA-INTERFACES
Author: Vikram Seeburn

Version : 1.1
Release Date: May 17
Process ID: CHG091434 Def 641
Modification : Modify query to populate WC_US_SHIPMENT_HIST_DENORM_F
Development Team: MRU-DATA-INTERFACES
Author: Jonathan L'etourdi

Version : 1.0
Release Date: May 17
Process ID: CHG091434
Modification : Initial version (based mainly on SP SP_BIP_MSAI_US)
Development Team: MRU-DATA-INTERFACES
Author: Jonathan L'etourdi

*******************************************************************************/
DECLARE 

-- Logging process variables
	@PROCESS_OBJECTS		NVARCHAR(30)    ,
	@OBJECT_TYPE			NVARCHAR(30)    ,
	@COUNTRY_CODE			NVARCHAR(30)    ,
	@PROCESS_TASKS			NVARCHAR(256)   ,  
	@PROCESS_DESCRIPTION		NVARCHAR(256)   ,
	@DEBUG_VALUE			NVARCHAR(150)   ,
	@TASK_STATUS			NVARCHAR(150)   ,
	@ETL_PROC_WID			NUMERIC(10,0)   ,
	
	@ERROR_MESSAGE			NVARCHAR(100)   ,
	
	 @V_MAX_SALES_DATE 		Datetime	,
	 @V_MAX_SALES_DATE12RW 		Datetime	,
	 @V_MAX_SALES_DATE13RW 		Datetime	,
	 @V_MAX_SALES_DATE25RW 		Datetime	,
	 @V_MAX_SALES_DATE_YAGO 	Datetime	,
	 @V_MAX_SALES_DATE12RW_YAGO 	Datetime,
	 @V_DUMMY_PRODUCT NVARCHAR(30),
	 --@V_DUMMY_ACCOUNT NVARCHAR(30),
	 @V_DUMMY_PERIOD NVARCHAR(30),
	 @ROW_CNT			 NVARCHAR(30)

SET NOCOUNT ON

BEGIN

--Start: Trace the process	WC_PROCESS_EXECUTION_LOG		Initial Step	
SET @PROCESS_OBJECTS = 'SP_BIP_N_SHIPMENT_HIST_DENORM';			 
SET @OBJECT_TYPE         = 'STORED_PROCEDURE' 
SET @PROCESS_TASKS       = '1 - General Task'
SET @PROCESS_DESCRIPTION = 'Load BIP__US tables for the latest MSAI ETL' 
SET @COUNTRY_CODE        = 'US'	
SET @DEBUG_VALUE         = 'STARTED'	
SET @TASK_STATUS         = 'STARTED'	
SELECT @ETL_PROC_WID = MAX(ETL_PROC_WID) FROM W_PARAM_G WITH (NOLOCK)
	
EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE,@PROCESS_OBJECTS,@PROCESS_TASKS,@PROCESS_DESCRIPTION,@DEBUG_VALUE,@TASK_STATUS,@COUNTRY_CODE,@ETL_PROC_WID 			 				 
SET @TASK_STATUS         = 'DEBUG_INFO'	
--Complete: Trace the process	WC_PROCESS_EXECUTION_LOG		Initial Step

--Calculate the latest Sales Date for MSAI
select @V_MAX_SALES_DATE = CONVERT(datetime,cast(max(END_DT_WID) as VARCHAR(10)), 112) from WC_SALES_MSAI_F_US where SALES_TYPE_WID IN (56006,56002,56001,56000)

IF @V_MAX_SALES_DATE IS NULL	-- No Sales are Available
			BEGIN
				SET @ERROR_MESSAGE='Return -1. Error No Sales are available @V_MAX_SALES_DATE IS NULL'
				--Print(@ERROR_MESSAGE)
				RAISERROR(@ERROR_MESSAGE, 11, 1)
				SET @DEBUG_VALUE = 'END. ' + @ERROR_MESSAGE
				SET @TASK_STATUS         = 'ERROR'	
				EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE,@PROCESS_OBJECTS,@PROCESS_TASKS,@PROCESS_DESCRIPTION,@DEBUG_VALUE,@TASK_STATUS,@COUNTRY_CODE,@ETL_PROC_WID 
				return -1
			END

SET @DEBUG_VALUE         = ' Latest MSAI sales Date is ' + CONVERT(varchar, @V_MAX_SALES_DATE, 112) 
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , 0


select @V_DUMMY_PRODUCT = INTEGRATION_ID from W_PRODUCT_D where PROD_NAME = 'US-BIP-DUMMY-PRODUCT';

--select @V_DUMMY_ACCOUNT = INTEGRATION_ID from WC_ORG_D where NAME = 'US-BIP-DUMMY-ACCOUNT';

select @V_DUMMY_PERIOD = INTEGRATION_ID from W_PERIOD_D where NAME = 'US-BIP-DUMMY-PERIOD';

SET @V_MAX_SALES_DATE12RW  = DATEADD(week, -12,@V_MAX_SALES_DATE)
SET @V_MAX_SALES_DATE13RW  = DATEADD(week, -13,@V_MAX_SALES_DATE)
SET @V_MAX_SALES_DATE25RW  = DATEADD(week, -25,@V_MAX_SALES_DATE)
--Note that the V_MAX_SALES_DATE_YAGO is based on Period definitions
SELECT @V_MAX_SALES_DATE_YAGO=MAX(END_DT) from W_PERIOD_D where BU='United States, US' and PERIOD_CD='MSAi Month' and DATEADD(year, -1,@V_MAX_SALES_DATE) between START_DT and END_DT
SET @V_MAX_SALES_DATE12RW_YAGO  = DATEADD(week, -12,@V_MAX_SALES_DATE_YAGO)



--TRUNCATE TEMP TABLES
TRUNCATE TABLE WC_US_BIP_DENORM_F
TRUNCATE TABLE WC_US_SHIPMENT_HIST_DENORM_F

SET @DEBUG_VALUE         = 'Truncate Staging Table'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , 0

-- Load Shipment History


--POPULATE WC_US_SHIPMENT_HIST_DENORM
--SHIPMENT HISTORY
--CHG176436
INSERT INTO WC_US_SHIPMENT_HIST_DENORM_F 
(
ACCOUNT_ID,
VOLUME_WAVE,
VOLUME_WINGS,
VOLUME_EXPORTA,
VOLUME_LD,
VOLUME_GOLDRUSH,
VOLUME_HAPPYHOUR,
VOLUME_LOGIC,
VOLUME_PRIMETIME,
VOLUME_SMOKERSCHOICE,
VOLUME_SPARROW,
PERIOD_ID,
PRODUCT_ID,
MAX_SALES_DT,
SALES_TYPE,
X_CUSTOM_CYCLE_TEXT
)
SELECT V.ACCOUNT_ID, V.VOLUME_WAVE,V.VOLUME_WINGS,V.VOLUME_EXPORTA,V.VOLUME_LD
, V.VOLUME_GOLDRUSH
, V.VOLUME_HAPPYHOUR
, V.VOLUME_LOGIC
, V.VOLUME_PRIMETIME
, V.VOLUME_SMOKERSCHOICE
, V.VOLUME_SPARROW
, D.INTEGRATION_ID PERIOD_ID
, @V_DUMMY_PRODUCT PRODUCT_ID
, @V_MAX_SALES_DATE MAX_SALES_DT
, 'SHIPMENT_HISTORY' SALES_TYPE
, CUSTOM_CYCLE
FROM
(
SELECT DISTINCT T55261.INTEGRATION_ID as ACCOUNT_ID,
  T58472."CALENDAR_DATE",
  SUM(CASE WHEN T56192."LVL6ANC_PROD_NAME" = 'WAVE' THEN T59954."ACTL_SHIPMENT_QTY_C"/nullif( T56320."ATTRIB_123", 0) ELSE 0 END) AS VOLUME_WAVE,
  SUM(CASE WHEN T56192."LVL6ANC_PROD_NAME" = 'WINGS' THEN T59954."ACTL_SHIPMENT_QTY_C"/nullif( T56320."ATTRIB_123", 0) ELSE 0 END) AS VOLUME_WINGS,
  SUM(CASE WHEN T56192."LVL6ANC_PROD_NAME" = 'EXPORT A' THEN T59954."ACTL_SHIPMENT_QTY_C"/nullif( T56320."ATTRIB_123", 0) ELSE 0 END) AS VOLUME_EXPORTA,
  SUM(CASE WHEN T56192."LVL6ANC_PROD_NAME" = 'LD (CIGS)' THEN T59954."ACTL_SHIPMENT_QTY_C"/nullif( T56320."ATTRIB_123", 0) ELSE 0 END) AS VOLUME_LD,
  SUM(CASE WHEN T56192."LVL6ANC_PROD_NAME" = 'GOLD RUSH' THEN T59954."ACTL_SHIPMENT_QTY" ELSE 0 END) AS VOLUME_GOLDRUSH,
  SUM(CASE WHEN T56192."LVL6ANC_PROD_NAME" = 'HAPPY HOUR' THEN T59954."ACTL_SHIPMENT_QTY" ELSE 0 END) AS VOLUME_HAPPYHOUR,
  SUM(CASE WHEN T56192."LVL6ANC_PROD_NAME" = 'LOGIC POWER' or T56192."LVL6ANC_PROD_NAME" = 'LOGIC PRO' THEN T59954."ACTL_SHIPMENT_QTY" ELSE 0 END) AS VOLUME_LOGIC,
  SUM(CASE WHEN T56192."LVL6ANC_PROD_NAME" = 'PRIME TIME (LCGR)' THEN T59954."ACTL_SHIPMENT_QTY" ELSE 0 END) AS VOLUME_PRIMETIME,
  SUM(CASE WHEN T56192."LVL6ANC_PROD_NAME" = 'SMOKERS CHOICE' THEN T59954."ACTL_SHIPMENT_QTY" ELSE 0 END) AS VOLUME_SMOKERSCHOICE	,
  SUM(CASE WHEN T56192."LVL6ANC_PROD_NAME" = 'SPARROW (LCGR)' THEN T59954."ACTL_SHIPMENT_QTY" ELSE 0 END) AS VOLUME_SPARROW	,
     T58472.CUSTOM_CYCLE_4 as CUSTOM_CYCLE
FROM
  "WCV_SALES_F_US" T59954 (NOLOCK) /* FACTS - Sales (WCV_SALES_F) */
  INNER JOIN "WC_ORG_D" T55261 (NOLOCK) /* Account (WC_ORG_D) */  ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
  INNER JOIN "W_PRODUCT_D" T56320 (NOLOCK) /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
  INNER JOIN "W_GEO_REGION_DH" T58120 (NOLOCK) /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID" 
  INNER JOIN "WC_DAY_D_US" T58472 (NOLOCK) /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
  INNER JOIN "W_PRODUCT_DH" T56192 (NOLOCK) /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID" 
WHERE
  T55261."NAME" not like '999%'
  AND T56192."LVL6ANC_PROD_NAME" IN (N'EXPORT A',N'WAVE',N'WINGS',N'LD (CIGS)','GOLD RUSH','HAPPY HOUR','LOGIC POWER','LOGIC PRO','PRIME TIME (LCGR)','SMOKERS CHOICE','SPARROW (LCGR)')
  AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000,56027,56026,56021,56019)
  AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
  AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_YEAR, -1, convert(date, GETDATE(), 120))} AND convert(date, GETDATE(), 120)
  AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
GROUP BY T58472."CALENDAR_DATE",T55261.INTEGRATION_ID, T58472.CUSTOM_CYCLE_4
)V
INNER JOIN W_PERIOD_D D (NOLOCK) ON END_DT = V.CALENDAR_DATE AND D.PERIOD_CD = 'MSAi Week'


SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of Shipment History'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT



--POPULATE WC_US_BIP_DENORM



--Start Defect 839- BIP_COMPETITIVE_VOLUME_TOP5BRANDS_US

INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
PRODUCT_ID,
RANKING,

VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
VOLUME_COUNTY_13CPW,
STORES,

MAX_SALES_DT,
PERIOD_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
--T1.MANUFACTURER,
T1.PRODUCT_ID,
T1.RANKING,
--T1.VOLUME,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.VOLUME_COUNTY_13CPW,
T4.STORES
,@V_MAX_SALES_DATE		MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,'BIP_TOP5BRANDS'	SALES_TYPE
FROM
(

SELECT A.* FROM
(
SELECT
T55261."INTEGRATION_ID" ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
T56192."LVL6ANC_PROD_ID" PRODUCT_ID,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") VOLUME,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME",T55261."INTEGRATION_ID" ,T56192."LVL6ANC_PROD_ID" 
) A WHERE A.RANKING <=5
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE AND T1.MANUFACTURER = T2.MANUFACTURER AND T1.BRAND = T2.BRAND
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME", T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE AND T1.MANUFACTURER = T3.MANUFACTURER AND T1.BRAND = T3.BRAND
LEFT JOIN (
SELECT A1.ACCOUNT_CODE,MANUFACTURER, BRAND, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID, T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C4 AS MANUFACTURER,
D1.C5 BRAND,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
T56192."LVL7ANC_PROD_NAME" C4,
T56192."LVL6ANC_PROD_NAME" C5,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME", T58120."LVL8ANC_REGN_NAME", T56192."LVL7ANC_PROD_NAME", T56192."LVL6ANC_PROD_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE AND T1.MANUFACTURER = T4.MANUFACTURER AND T1.BRAND = T4.BRAND;


SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOP5BRANDS_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT

--End Defect 839



--BIP_COMPETITIVE_VOLUME_TOTALMANUFACTURERS_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
PRODUCT_ID,
DISCOUNT_TIER2_4,
MAX_SALES_DT,
MENTHOL,
--RANKING,

VOLUME_13CPW,
VOLUME_COUNTY_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
STORES,
PERIOD_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
@V_DUMMY_PRODUCT		PRODUCT_ID,
T1.DISCOUNT_TIER2_4,
@V_MAX_SALES_DATE		MAX_SALES_DATE,
T1.MENTHOL,
T1.VOLUME_13CPW,
T4.VOLUME_COUNTY_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.STORES
,@V_DUMMY_PERIOD		PERIOD_ID
,'BIP_TOTALMANUFACTURERS'	SALES_TYPE
FROM
(

SELECT
T55261."INTEGRATION_ID" ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW,
sum(case when T56320."X_ATTRIBUTE_07" in (N'TIER 2', N'TIER 3', N'TIER 4') then T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY" end )/nullif(sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY"),0)*100 DISCOUNT_TIER2_4,
sum(case when T56320."X_PR_LOCAL_ATTRIBUTE3" = N'MENTHOL' then T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY" end )/nullif(sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY"),0)*100 MENTHOL
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND T55261."NAME" NOT LIKE '999%'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME"
,T55261."INTEGRATION_ID"
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME"
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME"
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE
LEFT JOIN (
SELECT A1.ACCOUNT_CODE, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID, T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME", T58120."LVL8ANC_REGN_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE
--WHERE T1.ACCOUNT_CODE NOT LIKE '%000%' --Remove as per CHG162222

-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOTALMANUFACTURERS_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT


--BIP_COMPETITIVE_VOLUME_TOP5MANUFACTURERS_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
PRODUCT_ID,
MENTHOL,
DISCOUNT_TIER2_4,
--RANKING,
VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
VOLUME_COUNTY_13CPW,
STORES,
MAX_SALES_DT,
PERIOD_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
T1.PRODUCT_ID,
T1.MENTHOL,
T1.DISCOUNT_TIER2_4,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.VOLUME_COUNTY_13CPW,
T4.STORES
,@V_MAX_SALES_DATE	MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,'BIP_TOP5MANUFACTURERS'	SALES_TYPE
FROM
(

SELECT A.* FROM
(
SELECT
T55261."INTEGRATION_ID" ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
T55261."ATTRIB_93" ACCOUNT_NAME,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL7ANC_PROD_ID" PRODUCT_ID,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW,
sum(case when T56320."X_ATTRIBUTE_07" in (N'TIER 2', N'TIER 3', N'TIER 4') then T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY" end )/nullif(sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY"),0)*100 DISCOUNT_TIER2_4,
sum(case when T56320."X_PR_LOCAL_ATTRIBUTE3" = N'MENTHOL' then T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY" end )/nullif(sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY"),0)*100 MENTHOL,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME", T55261."ATTRIB_93", T56192."LVL7ANC_PROD_NAME"
,T55261."INTEGRATION_ID"
,T56192."LVL7ANC_PROD_ID"
) A WHERE A.RANKING <=5
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" as MANUFACTURER,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56000,56001,56002,56006)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE AND T1.MANUFACTURER = T2.MANUFACTURER
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" as MANUFACTURER,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56000,56001,56002,56006)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE AND T1.MANUFACTURER = T3.MANUFACTURER
LEFT JOIN (
SELECT A1.ACCOUNT_CODE,MANUFACTURER, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID, T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C4 AS MANUFACTURER,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
T56192."LVL7ANC_PROD_NAME" C4,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME", T58120."LVL8ANC_REGN_NAME", T56192."LVL7ANC_PROD_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE AND T1.MANUFACTURER = T4.MANUFACTURER;


-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOP5MANUFACTURERS_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT



-- BIP_COMPETITIVE_VOLUME_TOP5SUPERPREMIUM_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
PRODUCT_ID,
RANKING,

VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
VOLUME_COUNTY_13CPW,
STORES,

MAX_SALES_DT,
PERIOD_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
--T1.MANUFACTURER,
T1.PRODUCT_ID,
T1.RANKING,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.VOLUME_COUNTY_13CPW,
T4.STORES
,@V_MAX_SALES_DATE		MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,'BIP_TOP5SUPERPREMIUM'	SALES_TYPE
FROM
(

SELECT A.* FROM
(
SELECT
T55261."INTEGRATION_ID" ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
T56192."LVL6ANC_PROD_ID" PRODUCT_ID,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'SUPER PREMIUM'
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
,T55261."INTEGRATION_ID"
,T56192."LVL6ANC_PROD_ID"
) A WHERE A.RANKING <=5
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'SUPER PREMIUM'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE AND T1.MANUFACTURER = T2.MANUFACTURER AND T1.BRAND = T2.BRAND
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'SUPER PREMIUM'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME", T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE AND T1.MANUFACTURER = T3.MANUFACTURER AND T1.BRAND = T3.BRAND
LEFT JOIN (
SELECT A1.ACCOUNT_CODE,MANUFACTURER, BRAND, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID, T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C4 AS MANUFACTURER,
D1.C5 BRAND,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
T56192."LVL7ANC_PROD_NAME" C4,
T56192."LVL6ANC_PROD_NAME" C5,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'SUPER PREMIUM'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME", T58120."LVL8ANC_REGN_NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE AND T1.MANUFACTURER = T4.MANUFACTURER AND T1.BRAND = T4.BRAND;



-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOP5SUPERPREMIUM_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT



--BIP_COMPETITIVE_VOLUME_TOP5TIER1_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
PRODUCT_ID,
RANKING,

VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
VOLUME_COUNTY_13CPW,
STORES,
MAX_SALES_DT,
PERIOD_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
T1.PRODUCT_ID,
T1.RANKING,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.VOLUME_COUNTY_13CPW,
T4.STORES
,@V_MAX_SALES_DATE		MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,'BIP_TOP5TIER1'	SALES_TYPE
FROM
(

SELECT A.* FROM
(
SELECT
T55261."INTEGRATION_ID" ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
T56192."LVL6ANC_PROD_ID" PRODUCT_ID,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 1'
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
,T55261."INTEGRATION_ID"
,T56192."LVL6ANC_PROD_ID"
) A WHERE A.RANKING <=5
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 1'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE AND T1.MANUFACTURER = T2.MANUFACTURER AND T1.BRAND = T2.BRAND
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 1'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME", T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE AND T1.MANUFACTURER = T3.MANUFACTURER AND T1.BRAND = T3.BRAND
LEFT JOIN (
SELECT A1.ACCOUNT_CODE,MANUFACTURER, BRAND, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID, T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C4 AS MANUFACTURER,
D1.C5 BRAND,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
 T58120."LVL8ANC_REGN_NAME" DIS,
T56192."LVL7ANC_PROD_NAME" C4,
T56192."LVL6ANC_PROD_NAME" C5,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 1'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME", T58120."LVL8ANC_REGN_NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE AND T1.MANUFACTURER = T4.MANUFACTURER AND T1.BRAND = T4.BRAND;


-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOP5TIER1_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT



--BIP_COMPETITIVE_VOLUME_TOP5TIER2_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
PRODUCT_ID,
RANKING,
VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
VOLUME_COUNTY_13CPW,
STORES,
MAX_SALES_DT,
PERIOD_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
T1.PRODUCT_ID,
T1.RANKING,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.VOLUME_COUNTY_13CPW
,T4.STORES
,@V_MAX_SALES_DATE	MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,'BIP_TOP5TIER2'	SALES_TYPE
FROM
(

SELECT A.* FROM
(
SELECT
T55261."INTEGRATION_ID" ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
T56192."LVL6ANC_PROD_ID" PRODUCT_ID,
--sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") VOLUME,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 2'
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
,T55261."INTEGRATION_ID" 
,T56192."LVL6ANC_PROD_ID"
) A WHERE A.RANKING <=5
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 2'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE AND T1.MANUFACTURER = T2.MANUFACTURER AND T1.BRAND = T2.BRAND
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 2'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME", T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE AND T1.MANUFACTURER = T3.MANUFACTURER AND T1.BRAND = T3.BRAND
LEFT JOIN (
SELECT A1.ACCOUNT_CODE,MANUFACTURER, BRAND, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID, T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C4 AS MANUFACTURER,
D1.C5 BRAND,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
T56192."LVL7ANC_PROD_NAME" C4,
T56192."LVL6ANC_PROD_NAME" C5,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 2'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
--EGE CORRECTION 20141201
,T58120.LVL8ANC_REGN_NAME
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE AND T1.MANUFACTURER = T4.MANUFACTURER AND T1.BRAND = T4.BRAND;

-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOP5TIER2_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT


--BIP_COMPETITIVE_VOLUME_TOP5TIER3_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
PRODUCT_ID,
RANKING,
VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
VOLUME_COUNTY_13CPW,
STORES,
MAX_SALES_DT,
PERIOD_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
T1.PRODUCT_ID,
T1.RANKING,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.VOLUME_COUNTY_13CPW,
T4.STORES
,@V_MAX_SALES_DATE	MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,'BIP_TOP5TIER3'	SALES_TYPE
FROM
(

SELECT A.* FROM
(
SELECT
T55261."NAME" ACCOUNT_CODE,
T55261."INTEGRATION_ID" ACCOUNT_ID,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
T56192."LVL6ANC_PROD_ID" PRODUCT_ID,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 3'
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
,T55261."INTEGRATION_ID"
,T56192."LVL6ANC_PROD_ID"
) A WHERE A.RANKING <=5
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 3'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE AND T1.MANUFACTURER = T2.MANUFACTURER AND T1.BRAND = T2.BRAND
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 3'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME", T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE AND T1.MANUFACTURER = T3.MANUFACTURER AND T1.BRAND = T3.BRAND
LEFT JOIN (
SELECT A1.ACCOUNT_CODE,MANUFACTURER, BRAND, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID, T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C4 AS MANUFACTURER,
D1.C5 BRAND,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
T56192."LVL7ANC_PROD_NAME" C4,
T56192."LVL6ANC_PROD_NAME" C5,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 3'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME", T58120."LVL8ANC_REGN_NAME",  T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE AND T1.MANUFACTURER = T4.MANUFACTURER AND T1.BRAND = T4.BRAND;


-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOP5TIER3_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT


--BIP_COMPETITIVE_VOLUME_TOP5TIER4_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
PRODUCT_ID,
RANKING,
VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
VOLUME_COUNTY_13CPW,
STORES,
MAX_SALES_DT,
PERIOD_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
T1.PRODUCT_ID,
T1.RANKING,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.VOLUME_COUNTY_13CPW,
T4.STORES
,@V_MAX_SALES_DATE		MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,'BIP_TOP5TIER4'	SALES_TYPE
FROM
(

SELECT A.* FROM
(
SELECT
T55261."INTEGRATION_ID" ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
T56192."LVL6ANC_PROD_ID"  PRODUCT_ID,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 4'
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
,T55261."INTEGRATION_ID"
,T56192."LVL6ANC_PROD_ID" 
) A WHERE A.RANKING <=5
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 4'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE AND T1.MANUFACTURER = T2.MANUFACTURER AND T1.BRAND = T2.BRAND
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
A.*
FROM (
SELECT
T55261."NAME" ACCOUNT_CODE,
T56192."LVL7ANC_PROD_NAME" MANUFACTURER,
T56192."LVL6ANC_PROD_NAME" BRAND,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW,
ROW_NUMBER() OVER (PARTITION BY T55261."NAME" ORDER BY SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") DESC) AS RANKING
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 4'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME", T56192."LVL7ANC_PROD_NAME", T56192."LVL6ANC_PROD_NAME"
) AS A
--WHERE A.RANKING <= 5 --CHG139409
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE AND T1.MANUFACTURER = T3.MANUFACTURER AND T1.BRAND = T3.BRAND
LEFT JOIN (
SELECT A1.ACCOUNT_CODE,MANUFACTURER, BRAND, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID,T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C4 AS MANUFACTURER,
D1.C5 BRAND,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
T56192."LVL7ANC_PROD_NAME" C4,
T56192."LVL6ANC_PROD_NAME" C5,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 4'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME", T58120."LVL8ANC_REGN_NAME", T56192."LVL7ANC_PROD_NAME",T56192."LVL6ANC_PROD_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE AND T1.MANUFACTURER = T4.MANUFACTURER AND T1.BRAND = T4.BRAND;

-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOP5TIER4_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT 



--BIP_COMPETITIVE_VOLUME_TOTALSUPERPREMIUM_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
VOLUME_COUNTY_13CPW,
STORES,
MAX_SALES_DT,
PERIOD_ID,
PRODUCT_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.VOLUME_COUNTY_13CPW,
T4.STORES
,@V_MAX_SALES_DATE		MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,@V_DUMMY_PRODUCT		PRODUCT_ID
,'BIP_TOTALSUPERPREMIUM'	SALES_TYPE
FROM
(

SELECT
T55261."INTEGRATION_ID"		ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'SUPER PREMIUM'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME"
,T55261."INTEGRATION_ID"
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'SUPER PREMIUM'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME"
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'SUPER PREMIUM'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME"
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE
LEFT JOIN (
SELECT A1.ACCOUNT_CODE, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID,T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T56320."X_ATTRIBUTE_07" = N'SUPER PREMIUM'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME",T58120."LVL8ANC_REGN_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE;


-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOTALSUPERPREMIUM_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT


--BIP_COMPETITIVE_VOLUME_TOTALTIER1_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
VOLUME_COUNTY_13CPW,
STORES,
MAX_SALES_DT,
PERIOD_ID,
PRODUCT_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.VOLUME_COUNTY_13CPW,
T4.STORES
,@V_MAX_SALES_DATE		MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,@V_DUMMY_PRODUCT		PRODUCT_ID
,'BIP_TOTALTIER1'	SALES_TYPE
FROM
(

SELECT
T55261."INTEGRATION_ID"		ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 1'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME"
,T55261."INTEGRATION_ID"
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 1'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME"
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 1'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME"
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE
LEFT JOIN (
SELECT A1.ACCOUNT_CODE, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID,T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T56320."X_ATTRIBUTE_07" = N'TIER 1'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME",T58120."LVL8ANC_REGN_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE;

-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOTALTIER1_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT


--BIP_COMPETITIVE_VOLUME_TOTALTIER2_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_COUNTY_13CPW,
VOLUME_YAGO_13CPW,
STORES,
MAX_SALES_DT,
PERIOD_ID,
PRODUCT_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T4.VOLUME_COUNTY_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.STORES
,@V_MAX_SALES_DATE		MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,@V_DUMMY_PRODUCT		PRODUCT_ID
,'BIP_TOTALTIER2'	SALES_TYPE
FROM
(

SELECT
T55261."INTEGRATION_ID" ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 2'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME",
T55261."INTEGRATION_ID"
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 2'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME"
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 2'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME"
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE
LEFT JOIN (
SELECT A1.ACCOUNT_CODE, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID, T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T56320."X_ATTRIBUTE_07" = N'TIER 2'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME", T58120."LVL8ANC_REGN_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE;

-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOTALTIER2_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT


--BIP_COMPETITIVE_VOLUME_TOTALTIER3_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
VOLUME_COUNTY_13CPW,
STORES,
MAX_SALES_DT,
PERIOD_ID,
PRODUCT_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.VOLUME_COUNTY_13CPW,
T4.STORES
,@V_MAX_SALES_DATE			MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,@V_DUMMY_PRODUCT		PRODUCT_ID
,'BIP_TOTALTIER3'	SALES_TYPE
FROM
(

SELECT
T55261."INTEGRATION_ID"	ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 3'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME"
,T55261."INTEGRATION_ID"
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 3'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME"
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 3'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME"
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE
LEFT JOIN (
SELECT A1.ACCOUNT_CODE, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID, T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T56320."X_ATTRIBUTE_07" = N'TIER 3'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME", T58120."LVL8ANC_REGN_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE;

-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOTALTIER3_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT


--BIP_COMPETITIVE_VOLUME_TOTALTIER4_US
INSERT INTO WC_US_BIP_DENORM_F
(
ACCOUNT_ID,
VOLUME_13CPW,
VOLUME_PREVIOUS_13CPW,
VOLUME_YAGO_13CPW,
VOLUME_COUNTY_13CPW,
STORES,
MAX_SALES_DT,
PERIOD_ID,
PRODUCT_ID,
SALES_TYPE
)
SELECT
T1.ACCOUNT_ID,
T1.VOLUME_13CPW,
T2.VOLUME_PREVIOUS_13CPW,
T3.VOLUME_YAGO_13CPW,
T4.VOLUME_COUNTY_13CPW,
T4.STORES
,@V_MAX_SALES_DATE		MAX_SALES_DATE
,@V_DUMMY_PERIOD		PERIOD_ID
,@V_DUMMY_PRODUCT		PRODUCT_ID
,'BIP_TOTALTIER4'	SALES_TYPE
FROM
(

SELECT
T55261."INTEGRATION_ID" ACCOUNT_ID,
T55261."NAME" ACCOUNT_CODE,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
WHERE
T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,GETDATE(), 120))), convert(date,GETDATE(), 120))}
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 4'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
GROUP BY
T55261."NAME"
,T55261."INTEGRATION_ID"
) T1
LEFT JOIN (
/* VOLUME_PREVIOUS_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_PREVIOUS_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 4'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE25RW AND @V_MAX_SALES_DATE13RW
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -25, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_WEEK, -13, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})}
GROUP BY
T55261."NAME"
) T2 ON T1.ACCOUNT_CODE = T2.ACCOUNT_CODE
LEFT JOIN (
/* VOLUME_YAGO_13CPW */
SELECT
T55261."NAME" ACCOUNT_CODE,
SUM(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY")/13 VOLUME_YAGO_13CPW
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56320."ROW_WID" = T56192."PROD_WID"
WHERE
T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T55261."NAME" NOT LIKE '999%'
AND T56320."X_ATTRIBUTE_07" = N'TIER 4'
AND (T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW_YAGO AND @V_MAX_SALES_DATE_YAGO
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date,DATEADD(year,-1,GETDATE()),120))), convert(date,DATEADD(year,-1,GETDATE()),120))}
GROUP BY
T55261."NAME"
) T3 ON T1.ACCOUNT_CODE = T3.ACCOUNT_CODE
LEFT JOIN (
SELECT A1.ACCOUNT_CODE, VOLUME_COUNTY_13CPW, STORES
FROM
(
SELECT T55261."NAME" ACCOUNT_CODE,T58120."LVL7ANC_REGN_NAME" REGION_ID,T58120."LVL8ANC_REGN_NAME" DISTRICT_ID
FROM
WC_ORG_D T55261 /* Account (WC_ORG_D) */
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
WHERE
(T55261."VIS_PR_BU_ID" = N'1-1YTLBP' or T55261."VIS_PR_BU_ID" = N'Unspecified')
AND T55261."NAME" NOT LIKE '999%'
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
) A1
INNER JOIN (
SELECT
D1.C1 AS REGION_ID,
D1.DIS AS DISTRICT_ID,
D1.C2/NULLIF(D1.C3,0)/13 AS VOLUME_COUNTY_13CPW,
D1.C3 AS STORES
FROM (
SELECT
T58120."LVL7ANC_REGN_NAME" C1,
T58120."LVL8ANC_REGN_NAME" DIS,
sum(T56320."CONV_RATE" * T59954."ACTL_SHIPMENT_QTY") C2,
count(distinct case when T59954."ACTL_SHIPMENT_QTY_C" <> 0 or T59954."ACTL_SHIPMENT_QTY" <> 0 then T59954."TGT_ACCNT_WID" end ) as C3
FROM
WC_SALES_MSAI_F_US (nolock) T59954 /* FACTS - Sales (WCV_SALES_F) */
INNER JOIN "WC_ORG_D" (nolock) T55261 /* Account (WC_ORG_D) */ ON T59954."TGT_ACCNT_WID" = T55261."ROW_WID"
INNER JOIN "W_PRODUCT_D" (nolock) T56320 /* Tobacco Product (W_PRODUCT_D) */ ON T59954."PRODUCT_WID" = T56320."ROW_WID"
INNER JOIN "W_GEO_REGION_DH" (nolock) T58120 /* Account Geography Loc Hierarchy (W_GEO_REGION_DH) */ ON T55261."ATTRIB_12" = T58120."ROW_WID"
INNER JOIN "WC_DAY_D_US" (nolock) T58472 /* End Date (W_DAY_D) */ ON T59954."END_DT_WID" = T58472."ROW_WID"
INNER JOIN "W_PRODUCT_DH" (nolock) T56192 /* Tobacco Product Glob Hierarchy (W_PRODUCT_DH) */ ON T56192."PROD_WID" = T56320."ROW_WID"
WHERE
(T56320."TYPE_I" = N'Tobacco' or T56320."TYPE_I" = N'Unspecified')
AND T55261."ACCNT_TYPE_CD" <> N'Planning Group'
AND T56320."X_ATTRIBUTE_07" = N'TIER 4'
AND 0 < convert( INTEGER , T55261."ATTRIB_18" )
AND T59954."SALES_TYPE_WID" IN (56006,56002,56001,56000)
AND T58472."CALENDAR_DATE" BETWEEN @V_MAX_SALES_DATE12RW AND @V_MAX_SALES_DATE
 --AND T58472."CALENDAR_DATE" between {fn TimestampAdd(SQL_TSI_WEEK, -12, {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))})} and {fn TimestampAdd(SQL_TSI_DAY, -(datepart(weekday,convert(date, GETDATE(), 120))), convert(date, GETDATE(), 120))}
GROUP BY
T58120."LVL7ANC_REGN_NAME", T58120."LVL8ANC_REGN_NAME"
) AS D1
)A2 ON A1.REGION_ID = A2.REGION_ID AND A1.DISTRICT_ID = A2.DISTRICT_ID
) T4 ON T1.ACCOUNT_CODE = T4.ACCOUNT_CODE;



-- Load Competitive Volume
SELECT @ROW_CNT = CAST(ISNULL(@@ROWCOUNT,0) AS NVARCHAR(30))
SET @DEBUG_VALUE         = 'Load of BIP_COMPETITIVE_VOLUME_TOTALTIER4_US'
EXEC sp_Insert_WC_PROCESS_EXECUTION_LOG_DET @OBJECT_TYPE , @PROCESS_OBJECTS , @PROCESS_TASKS , @PROCESS_DESCRIPTION , @DEBUG_VALUE , @TASK_STATUS , @COUNTRY_CODE , @ETL_PROC_WID , @ROW_CNT 


--Start: Trace the process	WC_PROCESS_EXECUTION_LOG		Final Step	
SET @DEBUG_VALUE = 'END. '
SET @TASK_STATUS = 'COMPLETED'	
EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE,@PROCESS_OBJECTS,@PROCESS_TASKS,@PROCESS_DESCRIPTION,@DEBUG_VALUE,@TASK_STATUS,@COUNTRY_CODE,@ETL_PROC_WID 

--Complete: Trace the process	WC_PROCESS_EXECUTION_LOG		Final Step	

END
GO

PRINT '* UAT-0 SP 4 *'
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_STATUSSHEET]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sp_STATUSSHEET]
GO
 
CREATE    PROCEDURE [dbo].[sp_STATUSSHEET] @entity NVARCHAR(10) AS  
/*
Name: sp_STATUSSHEET
Execution: re-usable session Update_STATUS_SHEET
Description: INSERT new flat file loaded in WC_LOAD_STATUS_G

Modified: 13-06-2011
Development Team: TME DATA Interface 
Author: Jonathan L'etourdi
Description: Add new loaders developed  for June 2011 release

Modified: 11-05-2012
Development Team: TME DATA Interface 
Author: Jonathan L'etourdi
Description: Add OP entity

Modified: 17-05-2012
Development Team: TME DATA Interface 
Author: Arnaud Grimont
Description: Add EX entity and set BU to Unspecified

Modified: 14-08-2012
Development Team: TME DATA Interface 
Author: Sandy Curpen
Description: Add AE entity

Modified: 22-08-2012
Development Team: TME DATA Interface 
Author: Jonathan L'etourdi 
Description: Add AN entity

Modified: 18-09-2012
Development Team: TME DATA Interface 
Author: robert Grenade
Description: Add AN entity

Modified: 18-09-2012
Development Team: TME DATA Interface 
Author: robert Grenade
Description: Add VN entity

Modified: 03-10-2012
Development Team: TME DATA Interface 
Author: Lina Kanhye
Description: Add PC entity

Modified: 01-02-2013
Development Team: TME DATA Interface 
Author: Jonathan L'etourdi
Description: Add AK entity

Modified: 01-28-2014
Development Team: TME DATA Interface 
Author: Lina Kanhye
CHG/INC: INC0843554
Description: Add parameter to stored procedure so as to differentiate between entities for which SP is being invoked.

Modified: 03-24-2014
Development Team: TME DATA Interface 
Author: Robert Grenade
CHG/INC:CHG053051
Description: Add UE, CE, IM, CX, RL, PT, FA entity


Modified: 04-16-2014
Development Team: TME DATA Interface 
Author: Jonathan L'etourdi
CHG/INC:CHG051845
Description: Add AF entity


Modified: 26-06-2014
Development Team: TME DATA Interface 
Author: Krishna Appadoo
CHG/INC: INC0995863 
Description: Populate start and end time in WC_LOAD_STATUS_G when they are NULL.


Modified: 03-09-2014
Development Team: TME DATA Interface 
Author: Laxmi Jugoo
CHG/INC:CHG061862
Description: Add BI entity

Modified: 17-09-2014
Development Team: TME DATA Interface 
Author: Vikram
CHG/INC:CHG062250
Description: Add EP entity

Modified: 29-09-2014
Development Team: TME DATA Interface 
Author: Robert
CHG/INC:CHG061656
Description: Add BA entity

Modified: 09-10-2014
Development Team: TME DATA Interface 
Author: Hursha
CHG/INC:Defect 374(INC1001303)
Description: Replace 'AND UPPER(E.[FILE_NAME]) = UPPER(WC_LOAD_STATUS_G.[FILENAME]) )' with 'AND SUBSTRING(UPPER(E.[FILE_NAME]),1,24) = UPPER(WC_LOAD_STATUS_G.[FILENAME]) )'
to cater for AC merge files

Modified: 08-01-2015
Development Team: TME DATA Interface 
Author: Lina
CHG/INC:CHG062318
Description: Add EL entity

Modified: 26-01-2015
Development Team: TME DATA Interface 
Author: Misa
CHG/INC: CHG069253
Description: Add DO entity

Modified: 18-02-2015
Development Team: TME DATA Interface 
Author: Robert Grenade
CHG/INC: CHG069338
Description: Add RP entity

Modified: 18-03-2015
Development Team: TME DATA Interface 
Author: Nahid Hyderkhan
CHG/INC: CHG069478
Description: Add BK entity

Modified: 12-05-2015
Development Team: TME DATA Interface 
Author: Jonathan L'etourdi
CHG/INC: CHG075152
Description: Add OC entity

Modified: 24-03-2016
Development Team: TME DATA Interface 
Author: Robert Grenade
CHG/INC: CHG091141
Description: Add JA entity

Modified: 30-03-2016
Development Team: TME DATA Interface 
Author: Nahid Hyderkhan
CHG/INC: CHG091436
Description: Add RE and CV entities

Modified: 30-03-2016
Development Team: TME DATA Interface 
Author: Krishna Appadoo
CHG/INC: INC1554492
Description: Fix DB Source for OA entity

Modified: 19-04-2016
Development Team: TME DATA Interface 
Author: Anju Maheshwaree Ruthun
CHG/INC: CHG090227
Description: Add ER entity

Modified: 26-04-2016
Development Team: TME DATA Interface 
Author: Anju Maheshwaree Ruthun
CHG/INC: CHG090531
Description: Add SR entity

Modified: 02-05-2016
Development Team: TME DATA Interface 
Author: Anju Maheshwaree Ruthun
CHG/INC: CHG082113
Description: Add AJ,CJ,DJ,SR entity

Modified: 05-05-2016
Development Team: TME DATA Interface 
Author: Nahid Hyderkhan
CHG/INC: CHG091400
Description: Add CL Entity

Modified: 09-09-2016
Development Team: TME DATA Interface 
Author: Vikram Seeburn
CHG/INC: CHG098894
Description: Add ON Entity

Modified: 26-09-2016
Development Team: TME DATA Interface 
Author: Robert Grenade
CHG/INC: CHG099415
Description: Add BO Entity

Modified: 30-09-2016
Development Team: TME DATA Interface 
Author: Vikram Seeburn
CHG/INC: CHG090571 
Description: Add SV Entity

Modified: 20-01-2017
Development Team: TME DATA Interface 
Author: Maheshwaree Ruthun
CHG/INC: CHG094865 
Description: Add FI Entity

Modified: 15-02-2017
Development Team: TME DATA Interface 
Author: Nahid Hyderkhan
CHG/INC: CHG107578
Description: Add PP Entity

Modified: 15-02-2017
Development Team: TME DATA Interface 
Author: VikraM Seeburn
CHG/INC: CHG107574
Description: Add DA Entity

Modified: 22-02-2017
Development Team: TME DATA Interface 
Author: Gulraaz usmani
CHG/INC: CHG106904
Description: Add PB Entity

Modified: 06-03-2017
Development Team: TME DATA Interface 
Author: VikraM Seeburn
CHG/INC: CHG107678
Description: Add BT Entity

Modified: 17-03-2017
Development Team: TME DATA Interface 
Author: Rhishna Ramen
CHG/INC: CHG107569
Description: Add IN,TH Entity

Modified: 23-03-2017
Development Team: TME DATA Interface 
Author: Jean Remi Ratefison
CHG/INC: INC1921515
Description: Add TA Entity

Modified: 24-03-2017
Development Team: TME DATA Interface 
Author: Rhishna Ramen
CHG/INC: CHG098840
Description: Add QA Entity

Modified: 08-24-2017
Development Team: TME DATA Interface 
Author: VikraM Seeburn
CHG/INC: CHG117082
Description: Add RD Entity

Modified: 09-06-2017
Development Team: TME DATA Interface 
Author: M Ruthun
CHG/INC: CHG117373
Description: Add IR Entity

Modified: 07-16-2019
Development Team: TME DATA Interface 
Author: VikraM Seeburn
CHG/INC: CHG117082
Description: Add PQ Entity

Modified: 07-31-2019
Development Team: TME DATA Interface 
Author: Riteswaree Seewooruttun
CHG/INC: INC2996282
Description: Modify code to update DB_SOURCE on WC_LOAD_STATUS_G

Modified: 3/25/2020
Development Team: TME DATA Interface 
Author: Misa Cyprienna
CHG/INC: CHG176504
Description: Add new insert on WC_LOAD_STATUS_G for RA Interface

Modified: 8/24/2020
Development Team: TME DATA Interface 
Author: Jhanvi Jeetun
CHG/INC: INC3390675
Description: Add new insert on WC_LOAD_STATUS_G for SR Interface
*/
---- Logging parameters  
DECLARE @OBJECT_TYPE      NVARCHAR(30)    ,  
        @PROCESS_OBJECTS  NVARCHAR(30)    ,  
        @PROCESS_TASKS    NVARCHAR(30)    ,    
        @PROCESS_DESCRIPTION NVARCHAR(100),  
        @DEBUG_VALUE      NVARCHAR(150)   ,  
        @TASK_STATUS      NVARCHAR(30)    ,  
        @COUNTRY_CODE     NVARCHAR(30)    ,  
 @ETL_PROC_WID     NUMERIC(10,0)   ,  
 @ROW_COUNT        NUMERIC(10,0)   ,
 @ROW_CNT          NVARCHAR(30)    ,  
 @ERROR_COD        NVARCHAR(10)     
  
BEGIN  
    -- Logging parameters Assignment  
    SET @OBJECT_TYPE         = 'STORED_PROCEDURE'   
    SET @PROCESS_OBJECTS     = 'sp_STATUSSHEET'  
    SET @PROCESS_TASKS       = 'PROCESS Status sheet'  
    SET @PROCESS_DESCRIPTION = 'START of Status sheet'  
    SET @COUNTRY_CODE        = 'ALL'  
    SELECT @ETL_PROC_WID     = MAX(ETL_PROC_WID) FROM W_PARAM_G (NOLOCK)  
  
    EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE        ,  
                                         @PROCESS_OBJECTS    ,  
                                         @PROCESS_TASKS      ,  
                                         @PROCESS_DESCRIPTION,  
                                         '1 : START'        ,  
                                         'STARTED'           ,  
                                         @COUNTRY_CODE       ,  
                                         @ETL_PROC_WID   
  
  
INSERT INTO WC_LOAD_STATUS_G ( BU_NAME           ,   
                               ENTITY            ,   
                               VERSION           ,   
                               FILENAME          ,   
                               FILESIZE          ,  
                               RECORDCOUNT       ,   
                               ERRORCOUNT        ,   
                               WARNINGCOUNT      ,   
                               ETL_PROC_WID      ,   
                               LOAD_DT_WID       ,  
                               LOAD_START_TIME   ,  
                               LOAD_END_TIME     ,  
                               LOAD_DURATION_TIME,  
                               FILE_DT_WID  
                             )  
SELECT  SUBSTRING(a.[FILENAME], 1,2), --Extract the market name from FILENAME  
            SUBSTRING(a.[FILENAME], 3,2), --Extract the Entity from FILENAME  
            SUBSTRING(a.[FILENAME], 5,2), --Extract the version from FILENAME  
            a.[FILENAME],  
          a.FILESIZE,  
            a.RECORDCOUNT,  
            NULL, -- Records that fell in error (to be updated later)  
            NULL, -- Records that fell in warning (to be updated later)  
            a.ETL_PROC_WID,  
            b.ROW_WID, -- The DATE_WID of the load  
           DATENAME(hour,a.LOAD_START_TIME) + ':' + CASE WHEN DATENAME(minute,a.LOAD_START_TIME) < 10   
                                                                 THEN '0' + DATENAME(minute,a.LOAD_START_TIME)  
                                                                      ELSE DATENAME(minute,a.LOAD_START_TIME)  
                                                                         END , -- The start time of the load  
         DATENAME(HOUR,a.LOAD_END_TIME) + ':' + CASE WHEN DATENAME(MINUTE,a.LOAD_END_TIME) < 10   
                                                              THEN '0' + DATENAME(MINUTE,a.LOAD_END_TIME)  
                                                                       ELSE DATENAME(MINUTE,a.LOAD_END_TIME)  
                                                                     END, -- The end time of the load  
         (CASE WHEN ((DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) - (DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) % 60))/60) < 10  
                                THEN '0' + CAST(((DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) -   (DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) % 60))/60) AS CHAR(1))  
                              ELSE CAST(((DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) - (DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) %     60))/60) AS CHAR(2))  
                                 END) +  
                             ':' +   
                        (CASE WHEN (DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) % 60) < 10  
                               THEN '0' + CAST((DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) % 60) AS CHAR(1))  
                             ELSE CAST((DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) % 60) AS CHAR(2))   
           END), -- The duration of the load  
           CAST(SUBSTRING(FILENAME, 10,8) as numeric(10)) -- The date of the file  
      FROM  WC_ETL_FILES_G a (NOLOCK),   
            W_DAY_D b(NOLOCK)  
     --WHERE  ETL_PROC_WID = (SELECT MAX(ROW_WID) FROM W_ETL_RUN_S)   
       WHERE  ETL_PROC_WID = (SELECT MAX(ETL_PROC_WID) FROM W_PARAM_G)   
--FOLLOWING CONDITION ADDED so as to ignore all SO entities  
    and LEN(a.[FILENAME])=24  
       AND  year(a.PICK_UP_DATE)  = year(b.CALENDAR_DATE)  
       AND  month(a.PICK_UP_DATE) = month(b.CALENDAR_DATE)  
       AND  day(a.PICK_UP_DATE)   = day(b.CALENDAR_DATE)  
       AND  NOT EXISTS ( SELECT 1 FROM WC_LOAD_STATUS_G G  (NOLOCK)  
       WHERE G.ETL_PROC_WID = (SELECT MAX(ETL_PROC_WID) FROM W_PARAM_G)   
       AND G.FILENAME = a.FILENAME)  
       AND (SUBSTRING(a.FILENAME,3,2) =@entity  or @entity='ALL')--INC0843554  

--Start CHG176504
UNION

SELECT  SUBSTRING(a.[FILENAME], 1,2), --Extract the market name from FILENAME  
		SUBSTRING(a.[FILENAME], 3,2), --Extract the Entity from FILENAME  
		SUBSTRING(a.[FILENAME], 5,2), --Extract the version from FILENAME  
		a.[FILENAME],  
		a.FILESIZE,  
		a.RECORDCOUNT,  
		NULL, -- Records that fell in error (to be updated later)  
		NULL, -- Records that fell in warning (to be updated later)  
		a.ETL_PROC_WID,  
		b.ROW_WID, -- The DATE_WID of the load  
		DATENAME(hour,a.LOAD_START_TIME) + ':' + CASE WHEN DATENAME(minute,a.LOAD_START_TIME) < 10   
																THEN '0' + DATENAME(minute,a.LOAD_START_TIME)  
																	ELSE DATENAME(minute,a.LOAD_START_TIME)  
																		END , -- The start time of the load  
        DATENAME(HOUR,a.LOAD_END_TIME) + ':' + CASE WHEN DATENAME(MINUTE,a.LOAD_END_TIME) < 10   
                                                              THEN '0' + DATENAME(MINUTE,a.LOAD_END_TIME)  
                                                                       ELSE DATENAME(MINUTE,a.LOAD_END_TIME)  
                                                                     END, -- The end time of the load  
        (CASE WHEN ((DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) - (DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) % 60))/60) < 10  
                                THEN '0' + CAST(((DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) -   (DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) % 60))/60) AS CHAR(1))  
                              ELSE CAST(((DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) - (DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) %     60))/60) AS CHAR(2))  
                                 END) +  
                             ':' +   
                        (CASE WHEN (DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) % 60) < 10  
                               THEN '0' + CAST((DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) % 60) AS CHAR(1))  
                             ELSE CAST((DATEDIFF(MI,a.LOAD_START_TIME,a.LOAD_END_TIME) % 60) AS CHAR(2))   
         END), -- The duration of the load  
         CAST(SUBSTRING(FILENAME, 10,8) as numeric(10)) -- The date of the file  
FROM  WC_ETL_FILES_G a (NOLOCK),   
      W_DAY_D b(NOLOCK)  
WHERE LEN(a.[FILENAME])=24  
AND year(a.PICK_UP_DATE)  = year(b.CALENDAR_DATE)  
AND month(a.PICK_UP_DATE) = month(b.CALENDAR_DATE)  
AND day(a.PICK_UP_DATE)   = day(b.CALENDAR_DATE)  
AND CONVERT(VARCHAR(10), CAST(PICK_UP_DATE AS DATETIME), 112) = (SELECT LOAD_DT_WID FROM W_PARAM_G)
AND NOT EXISTS ( SELECT 1 FROM WC_LOAD_STATUS_G G (NOLOCK) WHERE G.FILENAME = a.FILENAME AND ISNULL(G.LOAD_START_TIME,'00:00')=ISNULL(DATENAME(hour,a.LOAD_START_TIME) + ':' +  DATENAME(minute,a.LOAD_START_TIME),'00:00')) --modified as per INC3390675
AND SUBSTRING(a.FILENAME,3,2) in ('RA', 'SR')--include SR as per INC3390675
AND (SUBSTRING(a.FILENAME,3,2) =@entity)--added as per INC3390675

--End CHG176504

            SET @ROW_CNT   = CAST(@@ROWCOUNT AS NVARCHAR(10))  
            SET @ERROR_COD = CAST(@@ERROR AS NVARCHAR(10))  
  
            SET @PROCESS_DESCRIPTION = 'Insert into WC_LOAD_STATUS_G for current run - Done'   
            SET @DEBUG_VALUE = '2 :Insert into WC_LOAD_STATUS_G for current run'+' Rows DELETED='+@ROW_CNT  
                                                                                +' Error Code='+@ERROR_COD  
            EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE               ,  
                                                 @PROCESS_OBJECTS           ,  
                                                 @PROCESS_TASKS             ,  
                                                 @PROCESS_DESCRIPTION       ,  
                                                 @DEBUG_VALUE               ,  
                                                 'DEBUG_INFO'               ,  
                                                 @COUNTRY_CODE              ,  
                                                 @ETL_PROC_WID    
/*  
--Set the load start time  
UPDATE WC_LOAD_STATUS_G  
   SET LOAD_START_TIME = (SELECT DATENAME(hour,ACTUAL_START_TS) + ':' + CASE WHEN DATENAME(minute,ACTUAL_START_TS) < 10   
                                                                 THEN '0' + DATENAME(minute,ACTUAL_START_TS)  
                                                                      ELSE DATENAME(minute,ACTUAL_START_TS)  
                                                                         END   
                      FROM W_ETL_RUN_S R   
                           WHERE WC_LOAD_STATUS_G.ETL_PROC_WID = R.ROW_WID)  
 WHERE LOAD_START_TIME is NULL  
  
            SET @ROW_CNT   = CAST(@@ROWCOUNT AS NVARCHAR(10))  
            SET @ERROR_COD = CAST(@@ERROR AS NVARCHAR(10))  
            SET @PROCESS_DESCRIPTION = 'Update WC_LOAD_STATUS_G : LOAD_START_TIME - Done'   
            SET @DEBUG_VALUE = '3 :Update WC_LOAD_STATUS_G : LOAD_START_TIME'+' Rows UPDATE='+@ROW_CNT  
                                                                             +' Error Code='+@ERROR_COD  
  
            EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE               ,  
                                                 @PROCESS_OBJECTS           ,  
                                                 @PROCESS_TASKS             ,  
                                                 @PROCESS_DESCRIPTION       ,  
                                                 @DEBUG_VALUE               ,  
                                                 'DEBUG_INFO'               ,  
                                                 @COUNTRY_CODE              ,  
                                                 @ETL_PROC_WID    
  
--Set the load end time  
UPDATE WC_LOAD_STATUS_G  
   SET LOAD_END_TIME = (SELECT  DATENAME(HOUR,ACTUAL_END_TS) + ':' + CASE WHEN DATENAME(MINUTE,ACTUAL_END_TS) < 10   
                                                              THEN '0' + DATENAME(MINUTE,ACTUAL_END_TS)  
                                                                       ELSE DATENAME(MINUTE,ACTUAL_END_TS)  
                                                                     END    
                    FROM W_ETL_RUN_S R   
                   WHERE WC_LOAD_STATUS_G.ETL_PROC_WID = R.ROW_WID)  
 WHERE LOAD_END_TIME IS NULL  
  
            SET @ROW_CNT   = CAST(@@ROWCOUNT AS NVARCHAR(10))  
            SET @ERROR_COD = CAST(@@ERROR AS NVARCHAR(10))  
            SET @PROCESS_DESCRIPTION = 'Update WC_LOAD_STATUS_G : LOAD_END_TIME - Done'   
            SET @DEBUG_VALUE = '4 :Update WC_LOAD_STATUS_G : LOAD_END_TIME'+' Rows UPDATE='+@ROW_CNT  
                                                                             +' Error Code='+@ERROR_COD  
  
            EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE               ,  
                                                 @PROCESS_OBJECTS           ,  
                                                 @PROCESS_TASKS             ,  
                                                 @PROCESS_DESCRIPTION       ,  
                                                 @DEBUG_VALUE               ,  
                                                 'DEBUG_INFO'               ,  
                                                 @COUNTRY_CODE              ,  
                                                 @ETL_PROC_WID    
*/  


  
  
--Update the load status table with the number of errors  
  
UPDATE WC_LOAD_STATUS_G  
   SET ERRORCOUNT = ( SELECT COUNT(DISTINCT E.LINE_NUMBER)  
                  FROM WC_ERRORS_G E  
                   WHERE E.ETL_PROC_WID = WC_LOAD_STATUS_G.ETL_PROC_WID  
                    AND E.ERROR_TYPE = 'ERROR'  
                         --AND UPPER(E.[FILE_NAME]) = UPPER(WC_LOAD_STATUS_G.[FILENAME])  
						 AND SUBSTRING(UPPER(E.[FILE_NAME]),1,24) = UPPER(WC_LOAD_STATUS_G.[FILENAME])
              )  
 WHERE ERRORCOUNT IS NULL   
  
            SET @ROW_CNT   = CAST(@@ROWCOUNT AS NVARCHAR(10))  
            SET @ERROR_COD = CAST(@@ERROR AS NVARCHAR(10))  
            SET @PROCESS_DESCRIPTION = 'Update WC_LOAD_STATUS_G : ERRORCOUNT - Done'   
            SET @DEBUG_VALUE = '6 :Update WC_LOAD_STATUS_G : ERRORCOUNT'+' Rows UPDATE='+@ROW_CNT  
                                                                             +' Error Code='+@ERROR_COD  
  
            EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE               ,  
                                                 @PROCESS_OBJECTS           ,  
                                                 @PROCESS_TASKS             ,  
                                                 @PROCESS_DESCRIPTION       ,  
                                                 @DEBUG_VALUE               ,  
                                                 'DEBUG_INFO'             ,  
                                                 @COUNTRY_CODE              ,  
                                                 @ETL_PROC_WID    
  
--Update the load status table with the number of warnings  
  
UPDATE WC_LOAD_STATUS_G  
   SET WARNINGCOUNT =   
 (SELECT COUNT(DISTINCT E.LINE_NUMBER)  
 FROM WC_ERRORS_G E  
 WHERE E.ETL_PROC_WID = WC_LOAD_STATUS_G.ETL_PROC_WID  
 AND E.ERROR_TYPE = 'WARNING'  
 --AND UPPER(E.[FILE_NAME]) = UPPER(WC_LOAD_STATUS_G.[FILENAME])  
 AND SUBSTRING(UPPER(E.[FILE_NAME]),1,24) = UPPER(WC_LOAD_STATUS_G.[FILENAME])
 )  
WHERE WARNINGCOUNT IS NULL   
  
            SET @ROW_CNT   = CAST(@@ROWCOUNT AS NVARCHAR(10))  
            SET @ERROR_COD = CAST(@@ERROR AS NVARCHAR(10))  
            SET @PROCESS_DESCRIPTION = 'Update WC_LOAD_STATUS_G : WARNINGCOUNT - Done'   
            SET @DEBUG_VALUE = '7 :Update WC_LOAD_STATUS_G : WARNINGCOUNT'+' Rows UPDATE='+@ROW_CNT  
                                                                             +' Error Code='+@ERROR_COD  
  
            EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE               ,  
                                                 @PROCESS_OBJECTS           ,  
                                                 @PROCESS_TASKS             ,  
                                                 @PROCESS_DESCRIPTION       ,  
                                                 @DEBUG_VALUE               ,  
                                                 'DEBUG_INFO'               ,  
                                                 @COUNTRY_CODE              ,  
                                                 @ETL_PROC_WID   
  

-- INC0995863 - Populate start and end time where they are NULL.

SET @ROW_COUNT  = (SELECT count(1) from WC_LOAD_STATUS_G where ETL_PROC_WID = @ETL_PROC_WID and (LOAD_START_TIME is NULL or LOAD_END_TIME is NULL or LOAD_START_TIME = '' or LOAD_END_TIME = ''))

IF (@ROW_COUNT > 0)--Perform Update if there are null values 
BEGIN
UPDATE WC_LOAD_STATUS_G  
   SET LOAD_START_TIME =   
 (
 SELECT LOAD_START_TIME FROM	   
	   (SELECT    a.[FILENAME] as FILES,  
            a.ETL_PROC_WID AS ETL_PROC_WID,  
            MAX(DATENAME(hour,a.LOAD_START_TIME) + ':' + CASE WHEN DATENAME(minute,a.LOAD_START_TIME) < 10   
                                                                 THEN '0' + DATENAME(minute,a.LOAD_START_TIME)  
                                                                      ELSE DATENAME(minute,a.LOAD_START_TIME)  
                                                                         END) AS LOAD_START_TIME, -- The start time of the load  
            MAX(DATENAME(HOUR,a.LOAD_END_TIME) + ':' + CASE WHEN DATENAME(MINUTE,a.LOAD_END_TIME) < 10   
                                                              THEN '0' + DATENAME(MINUTE,a.LOAD_END_TIME)  
                                                                       ELSE DATENAME(MINUTE,a.LOAD_END_TIME)  
                                                                     END) AS LOAD_END_TIME -- The end time of the load  

       FROM  WC_ETL_FILES_G a (NOLOCK)
       WHERE  ETL_PROC_WID = @ETL_PROC_WID 
	   GROUP BY [FILENAME], ETL_PROC_WID
	   ) SUB
 WHERE SUB.ETL_PROC_WID = WC_LOAD_STATUS_G.ETL_PROC_WID
 AND   UPPER(SUB.FILES) = UPPER(WC_LOAD_STATUS_G.[FILENAME])
 ),
 
LOAD_END_TIME =   
 (
 SELECT LOAD_END_TIME FROM	   
	   (SELECT    a.[FILENAME] as FILES,  
            a.ETL_PROC_WID AS ETL_PROC_WID,  
            MAX(DATENAME(hour,a.LOAD_START_TIME) + ':' + CASE WHEN DATENAME(minute,a.LOAD_START_TIME) < 10   
                                                                 THEN '0' + DATENAME(minute,a.LOAD_START_TIME)  
                                                                      ELSE DATENAME(minute,a.LOAD_START_TIME)  
                                                                         END) AS LOAD_START_TIME, -- The start time of the load  
            MAX(DATENAME(HOUR,a.LOAD_END_TIME) + ':' + CASE WHEN DATENAME(MINUTE,a.LOAD_END_TIME) < 10   
                                                              THEN '0' + DATENAME(MINUTE,a.LOAD_END_TIME)  
                                                                       ELSE DATENAME(MINUTE,a.LOAD_END_TIME)  
                                                                     END) AS LOAD_END_TIME -- The end time of the load  

       FROM  WC_ETL_FILES_G a (NOLOCK)
       WHERE  ETL_PROC_WID = @ETL_PROC_WID 
	   GROUP BY [FILENAME], ETL_PROC_WID
	   ) SUB2
 WHERE SUB2.ETL_PROC_WID = WC_LOAD_STATUS_G.ETL_PROC_WID
 AND   UPPER(SUB2.FILES) = UPPER(WC_LOAD_STATUS_G.[FILENAME])

 )
 
 WHERE WC_LOAD_STATUS_G.ETL_PROC_WID = @ETL_PROC_WID  and (LOAD_START_TIME is NULL or LOAD_END_TIME is NULL or LOAD_START_TIME = '' or LOAD_END_TIME = '')
END

  
--Set the load duration  
UPDATE WC_LOAD_STATUS_G  
   SET LOAD_DURATION_TIME = (SELECT (CASE WHEN ((DATEDIFF(MI,ACTUAL_START_TS,ACTUAL_END_TS) - (DATEDIFF(MI,ACTUAL_START_TS,ACTUAL_END_TS) % 60))/60) < 10  
                                THEN '0' + CAST(((DATEDIFF(MI,ACTUAL_START_TS,ACTUAL_END_TS) - (DATEDIFF(MI,ACTUAL_START_TS,ACTUAL_END_TS) % 60))/60) AS CHAR(1))  
                              ELSE CAST(((DATEDIFF(MI,ACTUAL_START_TS,ACTUAL_END_TS) - (DATEDIFF(MI,ACTUAL_START_TS,ACTUAL_END_TS) % 60))/60) AS CHAR(2))  
                                 END) +  
                             ':' +   
                        (CASE WHEN (DATEDIFF(MI,ACTUAL_START_TS,ACTUAL_END_TS) % 60) < 10  
                               THEN '0' + CAST((DATEDIFF(MI,ACTUAL_START_TS,ACTUAL_END_TS) % 60) AS CHAR(1))  
                             ELSE CAST((DATEDIFF(MI,ACTUAL_START_TS,ACTUAL_END_TS) % 60) AS CHAR(2))   
                            END)  
                          FROM W_ETL_RUN_S R  
                            WHERE WC_LOAD_STATUS_G.ETL_PROC_WID = R.ROW_WID)  
 WHERE (LOAD_DURATION_TIME IS NULL or LOAD_START_TIME is NULL or LOAD_END_TIME is NULL or LOAD_START_TIME = '' or LOAD_END_TIME = '') 



-- Set bu id  
UPDATE WC_LOAD_STATUS_G  
SET BU_ID = (SELECT D.INTEGRATION_ID   
               FROM WC_BU_D D  
              WHERE SUBSTRING(WC_LOAD_STATUS_G.FILENAME,1,2) = COUNTRY_CODE )   
WHERE BU_ID IS NULL  
  
UPDATE WC_LOAD_STATUS_G  
SET BU_ID = (SELECT D.INTEGRATION_ID   
               FROM WC_BU_D D  
              WHERE BU_NAME = COUNTRY_CODE )   
WHERE BU_ID IS NULL  

UPDATE WC_LOAD_STATUS_G
SET BU_ID='Unspecified'
WHERE BU_ID IS NULL  
AND ENTITY IN ('FX','CU')
 
  
            SET @ROW_CNT   = CAST(@@ROWCOUNT AS NVARCHAR(10))  
            SET @ERROR_COD = CAST(@@ERROR AS NVARCHAR(10))  
            SET @PROCESS_DESCRIPTION = 'Update WC_LOAD_STATUS_G : BU_ID - Done'   
            SET @DEBUG_VALUE = '8 :Update WC_LOAD_STATUS_G : BU_ID'+' Rows UPDATE='+@ROW_CNT  
                                                                             +' Error Code='+@ERROR_COD  
  
            EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE               ,  
                                                 @PROCESS_OBJECTS           ,  
                                                 @PROCESS_TASKS             ,  
                                                 @PROCESS_DESCRIPTION       ,  
                                                 @DEBUG_VALUE               ,  
                                                 'DEBUG_INFO'               ,  
                                                 @COUNTRY_CODE              ,  
                                                 @ETL_PROC_WID   
--- new column to determine source OLTP / OLAP  
/* INC2996282: Start Modification */

 UPDATE G
SET DB_SOURCE = (SELECT DISTINCT DATABASE_TYPE FROM WC_FF_ENTITY_PARAM WHERE ENTITY_CODE = G.ENTITY )
FROM  WC_LOAD_STATUS_G G (NOLOCK)
 WHERE DB_SOURCE IS NULL  

/* INC2996282: End Modification */

  
            SET @ROW_CNT   = CAST(@@ROWCOUNT AS NVARCHAR(10))  
            SET @ERROR_COD = CAST(@@ERROR AS NVARCHAR(10))  
            SET @PROCESS_DESCRIPTION = 'Update WC_LOAD_STATUS_G : DB_SOURCE - Done'   
            SET @DEBUG_VALUE = '9 :Update WC_LOAD_STATUS_G : DB_SOURCE'+' Rows UPDATE='+@ROW_CNT  
                                                                             +' Error Code='+@ERROR_COD  
            EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE        ,  
                                         @PROCESS_OBJECTS    ,  
                                         @PROCESS_TASKS      ,  
                                         @PROCESS_DESCRIPTION,  
                                         @DEBUG_VALUE        ,  
                                         'DEBUG_INFO'        ,  
                                         @COUNTRY_CODE       ,  
                                         @ETL_PROC_WID   
  
            SET @PROCESS_DESCRIPTION = 'START of Status sheet'  
            SET @DEBUG_VALUE = '1 : START => 10 : END '  
            EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE               ,  
                                                 @PROCESS_OBJECTS           ,  
                                                 @PROCESS_TASKS             ,  
                                                 @PROCESS_DESCRIPTION       ,  
                                                 @DEBUG_VALUE               ,  
                                                 'STARTED'                  ,  
                                                 @COUNTRY_CODE              ,  
                                                 @ETL_PROC_WID    
  
/*** end **/  
END
 

PRINT '* UAT-0 SP 5 *'
GO
 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_Insert_Into_WC_LAST_ACTIVITY_F]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sp_Insert_Into_WC_LAST_ACTIVITY_F]
GO

CREATE PROCEDURE [dbo].[sp_Insert_Into_WC_LAST_ACTIVITY_F]
AS
/*******************************************************************************
Name: sp_Insert_Into_WC_LAST_ACTIVITY_F
Execution: 
Description: Insert last Acivity done in WC_LAST_ACTIVITY_F

Release Date: -|-
Process ID: -|-
Development Team:TME DATA-INTERFACE
Author: -|-

Number:5.4
Description of Changes: New column added
Release Date: Jun 21
Process ID: CHG201045
Development Team:TME DATA-INTERFACE
Author: Misa

Number:5.3
Description of Changes: New column added
Release Date: Jul 18
Process ID: CHG124131
Development Team:TME DATA-INTERFACE
Author: Vikram

Number:5.2
Description of Changes: Add new condition in insert statement
Release Date: NOV 17
Process ID: Defect61
Development Team:TME DATA-INTERFACE
Author: Jean Remi Ratefison

Number:5.1
Description of Changes: Add new condition in insert statement
Release Date: NOV 17
Process ID: CHG117391
Development Team:TME DATA-INTERFACE
Author: Jean Remi Ratefison

Number:5.0
Description of Changes: New column added
Release Date: NOV 17
Process ID: CHG117403
Development Team:TME DATA-INTERFACE
Author: Anju

Number:5.0
Description of Changes: New column added
Release Date: NOV 17
Process ID: CHG117167
Development Team:TME DATA-INTERFACE
Author: Rhishna

Number:4.9
Description of Changes: New column added
Release Date: May 2017
Process ID: CHG107551
Development Team:TME DATA-INTERFACE
Author: Jean Remi Ratefison

Number:4.8
Description of Changes: New column added
Release Date: May 2017
Process ID: CHG106456
Development Team:TME DATA-INTERFACE
Author: Jean Remi Ratefison

Number:4.7
Description of Changes: New column added
Release Date: November 2016
Process ID: CHG098779
Development Team:TME DATA-INTERFACE
Author: Rhishna Ramen

Number:4.6
Description of Changes: New column added
Release Date: July 2016
Process ID: CHG090388
Development Team: TME-DATA-INTERFACE
Author: Nahid Hyderkhan

Number:4.5
Description of Changes: New columns added
Release Date: July 2016
Process ID: INC1498940
Development Team: TME-DATA-INTERFACE
Author: Santanoo Ramjug

Number:4.4
Description of Changes: New columns added
Release Date: July 2016
Process ID: CHG086965
Development Team: TME-DATA-INTERFACE
Author: Nahid Hyderkhan

Number:4.3
Description of Changes:Replace StagingDB.dbo.WC_LAST_ACTIVITY_F_DELTA with WC_LAST_ACTIVITY_F_DELTA (Table moved to OLAP)
Release Date: Jun 2016
Process ID: INC1301975
Development Team: TME-DATA-INTERFACE
Author: Krishna Appadoo

Number:4.2
Description of Changes: Add new field EMPLOYEE_WID, X_BU_WID, filter condition for ACT_TYPE_DECODE
Release Date: Jul 2016
Process ID: CHG085759,CHG085793, CHG086957
Development Team: TME-DATA-INTERFACE

Number:4.1
Description of Changes: Add new Fields X_TR_CYCLE_WID,ROUTING_CYCLE,REROUTING_CYCLE
Release Date: APR 2015
Process ID: CHG069117, CHG069482
Development Team: TME DATA-INTERFACE
Author: Veedhya

Versions Change History:4.0
Number:4.0
Description of Changes: Add new Field PLAN_START_DT_WID
Release Date: APR 2015
Process ID: CHG068915
Development Team: TME DATA-INTERFACE
Author:Lina

Number:3.1
Description of Changes: Add new Field PAR_MANL_CREATED_FLG
Release Date: NOV 2014
Process ID: CHG062361
Development Team: TME DATA-INTERFACE
Author:Hursha

Number:3.0
Description of Changes: Add new Field PAR_MANL_CREATED_FLG
Release Date: NOV 2014
Process ID: CHG062208
Development Team: TME DATA-INTERFACE
Author:Lina Kanhye

Number:2.7
Description of Changes: Add Fields ASSIGNED_TO, PAR_ASSIGNED_TO, LOGIN and PAR_PERFORMED_BY from activity view to OBIEE
Release Date: APRIL 2014
Process ID: CHG052702
Development Team: TME DATA-INTERFACE
Author:Nahid Hyderkhan

Number:2.7
Description of Changes: Add Fields ASSIGNED_TO, PAR_ASSIGNED_TO, LOGIN and PAR_PERFORMED_BY from activity view to OBIEE
Release Date: APRIL 2014
Process ID: CHG052702
Development Team: TME DATA-INTERFACE
Author:Nahid Hyderkhan

Number:2.6
Description of Changes: Add Fields ATTRIB_127 and ATTRIB_128 from activity view to OBIEE
Release Date: APRIL 2013
Process ID: INC0652113
Development Team: TME DATA-INTERFACE
Author:Riteswaree Seewooruttun

Number:2.5
Description of Changes: Added new column X_OUT_OF_HRS_FLG and X_AUDIT_FLG
Release Date: APRIL 2013
Process ID: CHG038684 and CHG038527
Development Team: TME DATA-INTERFACE
Author:robert Grenade

Number:2.4
Description of Changes: Added new column OBJECTIVE_NAME and LAST_UPD_BY
Release Date: APRIL 2013
Process ID: CHG038473 and CHG038707
Development Team: TME DATA-INTERFACE
Author:Lina Kanhye

Number:2.3
Description of Changes: Added new column ATTRIB_14 & ATTRIB_46
Release Date: 21/12/2012
Process ID: CHG038681
Development Team: TME DATA-INTERFACE
Author:Jonathan L'etourdi

Number:2.2
Description of Changes: Added new column X_ATTRIB_30
Release Date: 13/12/2012
Process ID: CHG037688
Development Team: TME DATA-INTERFACE
Author:Jonathan L'etourdi


Number:2.1
Description of Changes: Added new column X_MC_WID
Release Date: 19/10/2012
Process ID: CHG033835
Development Team: TME DATA-INTERFACE
Author:Jonathan L'etourdi

Number:2.0
Description of Changes: Added new column:INCOMPLETE_REASON  
Release Date:   
Process ID: CHG023139  
Development Team: TME DATA-INTERFACE  
Author:Shyamal Geesawor  

Number:1.9
Description of Changes: Added new column: X_PREVIOUS_VISIT_DATE & X_NUM_OF_DAYS_SLV
Release Date: 
Process ID: CHG019688
Development Team: TME DATA-INTERFACE
Author:Robert Grenade

Number:1.8
Description of Changes: Added new column:DEVELOPMENT_DAY_FLG
Release Date: 
Process ID: CHG019115
Development Team: TME DATA-INTERFACE
Author:Jonathan L'etourdi


Number:1.7
Description of Changes: Added new column:SERV_RQST_WID
Release Date: 
Process ID: CHG015402
Development Team: TME DATA-INTERFACE
Author:Ziyaad

Number:1.6
Description of Changes: Added new columns  X_STAFF_TRAINING AND X_FIXED_FLAG
Release Date: 15/04/2011 
Process ID: CHG015096
Development Team: TME DATA-INTERFACE
Author:Ziyaad

Number:1.5
Description of Changes: Added new columns  X_RETRO_FLG AND VISIT_INPUT_DT
Release Date: 12/04/2011 
Process ID: CHG014510
Development Team: TME DATA-INTERFACE
Author:Robert Grenade

Number:1.4
Description of Changes: Added new columns  X_ORDER_TMPL_NAME
Release Date: 13/12/2010 
Process ID: CHG09167 
Development Team: TME DATA-INTERFACE
Author:Robert Grenade

Number:1.3
Description of Changes: Added new columns X_ACTIVITY_COST_NUM
Release Date: 13/12/2010 
Process ID: CHG011408  
Development Team: TME DATA-INTERFACE
Author:Gulraaz Usmani 

Number:1.2
Description of Changes: Added new columns X_BUSINESS_KM_NUM, X_END_KM_NUM, X_START_KM_NUM,X_TOTAL_KM_NUM, LIC_PLATE_NUM
Release Date: 12/02/2010
Process ID: CHG007012
Development Team: TME DATA-INTERFACE
Author:Jonathan L.

Number:1.1
Description of Changes: Removal of Deletion of Inactive Account	Activities from the Last Activity)
Release Date: 11/10/2010
Process ID: CHG007012
Development Team:TME DATA-INTERFACE
Author:Braddy Juggiah

*******************************************************************************/

DECLARE
	---- Logging parameters
	@OBJECT_TYPE      NVARCHAR(30)    ,
	@PROCESS_OBJECTS  NVARCHAR(30)    ,
	@PROCESS_TASKS    NVARCHAR(30)    ,  
	@PROCESS_DESCRIPTION NVARCHAR(100),
	@DEBUG_VALUE      NVARCHAR(150)   ,
	@TASK_STATUS      NVARCHAR(30)    ,
	@COUNTRY_CODE     NVARCHAR(30),
	@ERROR_COD        NVARCHAR(10),
	@ETL_PROC_WID     NUMERIC(10,0),
	@ROW_CNT          NVARCHAR(30),
	@ROW_CNT1 INT, @ROW_COUNT2 INT, @getStartDate DATETIME, @getEndDate DATETIME
BEGIN


	--Fetch Current ETL PROC WID
    SELECT @ETL_PROC_WID     = MAX(ETL_PROC_WID) FROM W_PARAM_G (NOLOCK)

    -- Initialize Logging parameters
	SET @getStartDate = GETDATE()
	SET @ROW_CNT1 = 0
    SET @OBJECT_TYPE         = 'STORED_PROCEDURE' 
    SET @PROCESS_OBJECTS     = 'sp_Ins_Into_WC_LST_ACTIVITY_F'
	SET @COUNTRY_CODE        = 'ALL'
	SET @PROCESS_TASKS       = 'INSERT LAST ACTIVITY FLAG'

	--Logging (STATUS = STARTED)
	SET @DEBUG_VALUE = '1:Insert WC_LAST_ACTIVITY_F table'
	EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE        ,
										 @PROCESS_OBJECTS    ,
										 @PROCESS_TASKS      ,
										 'START:INSERT LAST ACTIVITY FLAG',
										 @DEBUG_VALUE,
   	                             		 'STARTED'           ,
                                 		 @COUNTRY_CODE       ,
										 @ETL_PROC_WID 

	INSERT INTO WC_LAST_ACTIVITY_F
	(
		[ROW_WID]
		,[ETL_PROC_WID]
		,[X_BU_ID]
		,[A_JULIAN_START_DT]
		,[ACCNT_WID]
		,[ACT_TYPE_WID]
		,[ACTUAL_START_WID]
		,[CALL_DURATION]
		,[CATEGORY_WID]
		,[CONTACT_WID]
		,[COST]
		,[FS_B_EXP_COST]
		,[FS_B_PART_COST]
		,[FS_B_TS_COST]
		,[FS_EXP_B_PRICE]
		,[FS_EXP_NB_PRICE]
		,[FS_NB_EXP_COST]
		,[FS_NB_PART_COST]
		,[FS_NB_TS_COST]
		,[FS_PART_B_PRICE]
		,[FS_PART_NB_PRICE]
		,[FS_TS_B_PRICE]
		,[FS_TS_B_TIME]
		,[FS_TS_NB_PRICE]
		,[FS_TS_NB_TIME]
		,[FS_TS_TOTAL_TIME]
		,[INTEGRATION_ID]
		,[OWNER_WID]
		,[POSITION_WID]
		,[PRIORITY_WID]
		,[REGION_WID]
		,[RESOLUTION_WID]
		,[STATUS_WID]
		,[TRAVEL_TM_MIN]
		,[ATTRIB_02]
		,[ATTRIB_03]
		,[ATTRIB_04]
		,[ATTRIB_06]
		,[ATTRIB_100]
		,[X_COMM_FLG]
		,[ATTRIB_111]
		,[ATTRIB_112]
		,[ATTRIB_113]
		,[ATTRIB_114]
		,[ATTRIB_115]
		,[ATTRIB_116]
		,[ATTRIB_117]
		,[ATTRIB_118]
		,[ATTRIB_119]
		,[ATTRIB_120]
		,[ATTRIB_121]
		,[ATTRIB_122]
		,[ATTRIB_123]
		,[ATTRIB_124]
		,[ATTRIB_125]
		,[ATTRIB_61]
		,[ATTRIB_95]
		,[ATTRIB_96]
		,[ATTRIB_99]
		,[FK_02_WID]
		,[FK_03_WID]
		,[FK_04_WID]
		,[FK_18_WID]
		,[FK_19_WID]
		,[FK_20_WID]
		,[FK_21_WID]
		,[FK_29_WID]
		,[ACTUAL_START_DT]
		,[ACTUAL_END_DT]
		,[X_LAST_COMPLIANCE_CHECK_FLG]
		,[X_APPT_DURATION_MIN]
		,[ATTRIB_94]
		,[ATTRIB_93]
		,[ATTRIB_97]
		,[ATTRIB_98]
		,[SALES_DONE_FLG]
		,[FK_07_WID]
		,[ATTRIB_126]
		,[X_REAL_START_DATE]
		,[X_REAL_END_DATE]
		,[X_SUBTODO_CD]
		,[AGREE_WID]
		,[X_MANUAL_CREATED_FLG]
        ,[X_BUSINESS_KM_NUM]
        ,[X_END_KM_NUM]
        ,[X_START_KM_NUM]
        ,[X_TOTAL_KM_NUM]
        ,[LIC_PLATE_NUM]
		,[X_ACTIVITY_COST_NUM]
		,[X_ORDER_TMPL_NAME]
		,[X_RETRO_FLG]
		,[VISIT_INPUT_DT]
		,[X_STAFF_TRAINING] 
		,[X_FIXED_FLAG]
		,[SERV_RQST_WID]
		,[SR_ASSET_WID]  
		,[DEVELOPMENT_DAY_FLG]   --UK CHG019115 only on Siebel 8 Environment
		,[X_PREVIOUS_VISIT_DATE] --UK CHG019688 only on Siebel 8 Environment
		,[X_NUM_OF_DAYS_SLV]	 --UK CHG019688 only on Siebel 8 Environment	
		,[INCOMPLETE_REASON]  
		,[X_MC_WID]
		,[X_ATTRIB_30]
		,[ATTRIB_14]
		,[ATTRIB_46]
		,[OBJECTIVE_NAME]
		,[LAST_UPD_BY]
		,[X_OUT_OF_HRS_FLG]
		,[X_AUDIT_FLG]
		,[ATTRIB_127] --INC0652113
		,[ATTRIB_128] --INC0652113
		,[ASSIGNED_TO] --CHG052702
		,[PAR_ASSIGNED_TO] --CHG052702
		,[LOGIN] --CHG052702
		,[PAR_PERFORMED_BY] --CHG052702
		,[PAR_MANL_CREATED_FLG] --CHG062208
		,[CYCLE_WID] --CHG062361
		,[PLAN_START_DT_WID] --CHG068915
		,[X_TR_REROUTE_WID] --CHG069117,CHG069482
		,[ROUTING_CYCLE] --CHG069117
		,[REROUTING_CYCLE] --CHG069117
		,[X_START_TIME_DELAY_CD] -- CHG069482
		,[EMPLOYEE_WID] --CHG085759
		,[X_BU_WID] -- CHG085793
		,[ACT_TYPE] --CHG086965
		,[PRIORITY] --CHG086965
		,[ACT_STATUS] --CHG086965
		,[X_TR_APPOINT_TYPE_CD] -- INC1498940
		,[X_TR_FIXED_FLG] -- INC1498940
		,[X_TR_PUBLIC_FLG] -- INC1498940
		,[OBJ_PERIOD_NAME] --CHG090388
		,[PAR_ACTIVITY_WID] --CHG098779
		,[ACT_STATUS_VAL] --CHG106456
		,[ACT_TYPE_VAL] --CHG106456
		,[X_SUBTODO_CD_VAL] --CHG106456
		,[X_RA_RAL_LINK_ID] --CHG107551
		,[X_ACT_CREATION_REASON_CD] --CHG117167
		,[X_LOCAL_ATTRIB_1_CD]--CHG117403
		,[CREATOR_LOGIN_WID]--Defect61
		,[X_RARAL_DT]--CHG124131
		,[X_DOC_TYPE_CD] --CHG201045
		,[X_MESSAGE_STATUS] --CHG201045
		,[X_RECIPIENT_ID] --CHG201045
	)

	SELECT
		F.[ROW_WID]
		,F.[ETL_PROC_WID]
		,F.[X_BU_ID]
		,F.[A_JULIAN_START_DT]
		,F.[ACCNT_WID]
		,F.[ACT_TYPE_WID]
		,F.[ACTUAL_START_WID]
		,F.[CALL_DURATION]
		,F.[CATEGORY_WID]
		,F.[CONTACT_WID]
		,F.[COST]
		,F.[FS_B_EXP_COST]
		,F.[FS_B_PART_COST]
		,F.[FS_B_TS_COST]
		,F.[FS_EXP_B_PRICE]
		,F.[FS_EXP_NB_PRICE]
		,F.[FS_NB_EXP_COST]
		,F.[FS_NB_PART_COST]
		,F.[FS_NB_TS_COST]
		,F.[FS_PART_B_PRICE]
		,F.[FS_PART_NB_PRICE]
		,F.[FS_TS_B_PRICE]
		,F.[FS_TS_B_TIME]
		,F.[FS_TS_NB_PRICE]
		,F.[FS_TS_NB_TIME]
		,F.[FS_TS_TOTAL_TIME]
		,F.[INTEGRATION_ID]
		,F.[OWNER_WID]
		,F.[POSITION_WID]
		,F.[PRIORITY_WID]
		,F.[REGION_WID]
		,F.[RESOLUTION_WID]
		,F.[STATUS_WID]
		,F.[TRAVEL_TM_MIN]
		,F.[ATTRIB_02]
		,F.[ATTRIB_03]
		,F.[ATTRIB_04]
		,F.[ATTRIB_06]
		,F.[ATTRIB_100]
		,F.[X_COMM_FLG]
		,F.[ATTRIB_111]
		,F.[ATTRIB_112]
		,F.[ATTRIB_113]
		,F.[ATTRIB_114]
		,F.[ATTRIB_115]
		,F.[ATTRIB_116]
		,F.[ATTRIB_117]
		,F.[ATTRIB_118]
		,F.[ATTRIB_119]
		,F.[ATTRIB_120]
		,F.[ATTRIB_121]
		,F.[ATTRIB_122]
		,F.[ATTRIB_123]
		,F.[ATTRIB_124]
		,F.[ATTRIB_125]
		,F.[ATTRIB_61]
		,F.[ATTRIB_95]
		,F.[ATTRIB_96]
		,F.[ATTRIB_99]
		,F.[FK_02_WID]
		,F.[FK_03_WID]
		,F.[FK_04_WID]
		,F.[FK_18_WID]
		,F.[FK_19_WID]
		,F.[FK_20_WID]
		,F.[FK_21_WID]
		,F.[FK_29_WID]
		,F.[ACTUAL_START_DT]
		,F.[ACTUAL_END_DT]
		,F.[X_LAST_COMPLIANCE_CHECK_FLG]
		,F.[X_APPT_DURATION_MIN]
		,F.[ATTRIB_94]
		,F.[ATTRIB_93]
		,F.[ATTRIB_97]
		,F.[ATTRIB_98]
		,F.[SALES_DONE_FLG]
		,F.[FK_07_WID]
		,F.[ATTRIB_126]
		,F.[X_REAL_START_DATE]
		,F.[X_REAL_END_DATE]
		,F.[X_SUBTODO_CD]
		,F.[AGREE_WID]
		,F.[X_MANUAL_CREATED_FLG]
		,F.[X_BUSINESS_KM_NUM]
        ,F.[X_END_KM_NUM]
        ,F.[X_START_KM_NUM]
        ,F.[X_TOTAL_KM_NUM]
        ,F.[LIC_PLATE_NUM]
		,F.[X_ACTIVITY_COST_NUM]
		,F.[X_ORDER_TMPL_NAME]
		,F.[X_RETRO_FLG]
		,F.[VISIT_INPUT_DT]
		,F.[X_STAFF_TRAINING] 
		,F.[X_FIXED_FLAG]
        ,F.[SERV_RQST_WID] 
        ,F.[SR_ASSET_WID] 
		,F.[DEVELOPMENT_DAY_FLG]		--CHG019115
		,F.[X_PREVIOUS_VISIT_DATE] --UK CHG019688 only on Siebel 8 Environment
		,F.[X_NUM_OF_DAYS_SLV]	   --UK CHG019688 only on Siebel 8 Environment	
		,F.[INCOMPLETE_REASON]
		,F.[X_MC_WID]
		,F.[X_ATTRIB_30]
		,F.[ATTRIB_14]
		,F.[ATTRIB_46]
		,F.[OBJECTIVE_NAME]
		,F.[LAST_UPD_BY]
		,F.[X_OUT_OF_HRS_FLG]
		,F.[X_AUDIT_FLG]
		,F.[ATTRIB_127] --INC0652113
		,F.[ATTRIB_128] --INC0652113
		,F.[ASSIGNED_TO] --CHG052702
		,F.[PAR_ASSIGNED_TO] --CHG052702
		,F.[LOGIN] --CHG052702
		,F.[PAR_PERFORMED_BY] --CHG052702
		,F.[PAR_MANL_CREATED_FLG] --CHG062208
		,F.[CYCLE_WID] --CHG062361
		,F.[PLAN_START_DT_WID] --CHG068915
	    ,F.[X_TR_REROUTE_WID] --CHG069117,CHG069482
		,F.[ROUTING_CYCLE] --CHG069117
		,F.[REROUTING_CYCLE] --CHG069117
		,F.[X_START_TIME_DELAY_CD] -- CHG069482
		,F.[EMPLOYEE_WID] --CHG085759
		,F.[X_BU_WID] -- CHG085793
		,F.[ACT_TYPE] --CHG086965
		,F.[PRIORITY] --CHG086965
		,F.[ACT_STATUS] --CHG086965
		,F.[X_TR_APPOINT_TYPE_CD] -- INC1498940
		,F.[X_TR_FIXED_FLG] -- INC1498940
		,F.[X_TR_PUBLIC_FLG] -- INC1498940
		,F.[OBJ_PERIOD_NAME] --CHG090388
		,F.[PAR_ACTIVITY_WID] --CHG098779
		,F.[ACT_STATUS_VAL] --CHG106456
		,F.[ACT_TYPE_VAL] --CHG106456
		,F.[X_SUBTODO_CD_VAL] --CHG106456
		,F.[X_RA_RAL_LINK_ID] --CHG107551
		,F.[X_ACT_CREATION_REASON_CD] --CHG117167
		,F.[X_LOCAL_ATTRIB_1_CD] --CHG117403
		,F.[CREATOR_LOGIN_WID] --Defect61
		,F.[X_RARAL_DT] --CHG124131
		,F.[X_DOC_TYPE_CD] --CHG201045
		,F.[X_MESSAGE_STATUS] --CHG201045
		,F.[X_RECIPIENT_ID] --CHG201045
	FROM WC_ACTIVITY_F F (NOLOCK)
	WHERE EXISTS
		(
			SELECT 1
			FROM WC_LAST_ACTIVITY_F_DELTA L (NOLOCK)
			WHERE L.NEW_ACTIVITY_WID = F.ROW_WID
		)
		AND ACT_TYPE_DECODE IN(0,2)

    SET @ROW_COUNT2	= ISNULL(@@ROWCOUNT,0)
	SET @ROW_CNT1	= @ROW_CNT1 + @ROW_COUNT2
	SET @ROW_CNT	= CAST(@ROW_COUNT2 AS NVARCHAR(10))

    SET @ERROR_COD = CAST(@@ERROR AS NVARCHAR(10))
	SET @DEBUG_VALUE = '1:END:INSERT LAST ACTIVITY FLAG '
						+' Rows INS='+@ROW_CNT
						+' Error Code='+@ERROR_COD

    EXEC INSERT_WC_PROCESS_EXECUTION_LOG @OBJECT_TYPE               ,
										 @PROCESS_OBJECTS           ,
										 @PROCESS_TASKS             ,
										 'END:INSERT LAST ACTIVITY FLAG',
										 @DEBUG_VALUE				, 
										 'STARTED'					,
										 @COUNTRY_CODE              ,
										 @ETL_PROC_WID 

	SET @getEndDate =  getdate() 
	

	EXEC sp_INSERT_WC_LOAD_STATUS_G  N'SP:sp_Insert_Into_WC_LAST_ACTIVITY_F', N'ES', @ROW_CNT1, @getStartDate, @getEndDate
END

GO
 
